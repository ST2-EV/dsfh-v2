{"version":3,"sources":["components/NavBar.js","fire.js","components/BarGraph.js","components/FileSystem.js","components/QRcode.js","components/QRModal.js","components/Loading.js","components/ModelsList.js","components/DeployForm.js","components/Tabs.js","App.js","index.js"],"names":["NavBar","props","useState","collapsed","setCollapsed","Navbar","color","dark","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","PieChart","domainPadding","theme","VictoryTheme","material","alignment","labelComponent","textAnchor","capHeight","angle","data","this","x","y","Component","styles","marginTop","MyFileSystem","fetchFromDB","collection","get","then","querySnapshot","docs","map","doc","i","length","names","index","setState","state","Container","Row","Col","xs","style","Table","striped","folder","key","scope","label","Button","QRcode","value","name","ModalExample","modal","setModal","toggle","Modal","ModalHeader","ModalBody","marginLeft","Loading","Spinner","type","ModelsList","loading","model_data","labels","desciption","QRModal","stylestwo","textAlign","mariginTop","padding","socket","io","connect","DeployForm","model_name","description","diseases","deployed_model","deployed_model_bool","error_data","after_train","onChange","e","target","temp","push","onCheckboxBtnClick","selected","array","indexOf","splice","onSubmit","event","preventDefault","emit","model","console","log","on","deployed_model_stats","bind","error","message","Form","FormGroup","Label","for","Input","id","required","ButtonToolbar","ButtonGroup","active","includes","Alert","Example","activeTab","setActiveTab","tab","tabs","classnames","TabContent","TabPane","tabId","FileSystem","App","Tabs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e3988bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\nconst NavBar = props => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark>\n        <NavbarBrand href=\"/\" className=\"mr-auto\">\n          D.S.F.H\n        </NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"https://github.com/ST2-EV/DSFH\">GitHub</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  // copy and paste your firebase credential here\n  apiKey: \"AIzaSyC9xyHAHZs49bErl3komHwCEreTToo7yg0\",\n  authDomain: \"dsfh-1097c.firebaseapp.com\",\n  databaseURL: \"https://dsfh-1097c.firebaseio.com\",\n  projectId: \"dsfh-1097c\",\n  storageBucket: \"dsfh-1097c.appspot.com\",\n  messagingSenderId: \"33485448578\",\n  appId: \"1:33485448578:web:871f0dbec54911620edb9b\",\n  measurementId: \"G-MPK00LTBJ2\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport { db };\n","import React, { Component } from \"react\";\nimport { VictoryChart, VictoryBar, VictoryTheme, VictoryLabel } from \"victory\";\n\nexport default class PieChart extends Component {\n  render() {\n    return (\n      <VictoryChart domainPadding={50} theme={VictoryTheme.material}>\n        <VictoryBar\n          alignment=\"start\"\n          labelComponent={\n            <VictoryLabel textAnchor=\"start\" capHeight=\"string\" angle=\"-45\" />\n          }\n          data={this.props.data}\n          x=\"index\"\n          y=\"names\"\n        />\n      </VictoryChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Table, Container, Row, Col, Button } from \"reactstrap\";\nimport BarGraph from \"./BarGraph\";\n\nconst styles = {\n  marginTop: \"80px\"\n};\n\nclass MyFileSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] }; // <- set up react state\n  }\n  fetchFromDB = () => {\n    db.collection(\"Images\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        // console.log(data);\n        for (var i = 0; i < data.length; i++) {\n          data[i].names = data[i].names.length;\n          data[i].index = i;\n        }\n\n        this.setState({ data: data }); // array of cities objects\n      });\n  };\n  componentDidMount() {\n    this.fetchFromDB();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"4\" style={styles}>\n            <h5>\n              <strong>Diseases collected so far:</strong>\n            </h5>\n            <Table striped>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Disease name</th>\n                  <th>Number of images</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.data.map((folder, index) => (\n                  <tr key={index}>\n                    <th scope=\"row\">{index}</th>\n                    <td>{folder.label}</td>\n                    <td>{folder.names}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            <Button color=\"primary\" onClick={this.fetchFromDB}>\n              Reload\n            </Button>\n          </Col>\n          <Col xs=\"8\">\n            <BarGraph data={this.state.data} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MyFileSystem;\n","import React, { Component } from \"react\";\nimport QRCode from \"qrcode-react\";\n\nexport default class QRcode extends Component {\n  render() {\n    return (\n      <div>\n        <QRCode\n          value={\"http://35.223.18.41:5000/deploy/\" + this.props.name + \"/a/\"}\n        />\n        ,\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport QRCode from \"./QRcode\";\nconst ModalExample = props => {\n  const { name, className } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const styles = {\n    marginLeft: \"167px\"\n  };\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button color=\"success\" onClick={toggle}>\n        {name}\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Scan this with the App!</ModalHeader>\n        <ModalBody>\n          <div style={styles}>\n            <QRCode name={name} />\n          </div>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalExample;\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nconst Loading = props => {\n  return (\n    <div>\n      <Spinner type=\"grow\" color=\"success\" />\n      <Spinner type=\"grow\" color=\"danger\" />\n      <Spinner type=\"grow\" color=\"warning\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Container, Table, Button } from \"reactstrap\";\nimport QRModal from \"./QRModal\";\nimport Loading from \"./Loading\";\nconst styles = {\n  marginTop: \"80px\"\n};\n\nexport default class ModelsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { model_data: [], loading: false }; // <- set up react state\n  }\n  fetchFromDB = () => {\n    this.setState({ loading: true });\n    db.collection(\"Models\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        //console.log(data);\n        this.setState({ model_data: data }); // array of cities objects\n      });\n    this.setState({ loading: false });\n  };\n  componentDidMount() {\n    this.fetchFromDB();\n  }\n\n  render() {\n    return (\n      <Container style={styles}>\n        <h5>\n          <strong>Models trained:</strong>\n        </h5>\n        <Table striped>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Model name</th>\n              <th>Diseases involved</th>\n              <th>Description</th>\n              <th>QR-code</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Render the list of messages */\n            this.state.model_data.map((data, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{index}</th>\n                <td>{data.name}</td>\n                <td>\n                  <ul>\n                    {data.labels.map((label, key) => (\n                      <li key={key}>{label}</li>\n                    ))}\n                  </ul>\n                </td>\n                <td>{data.desciption}</td>\n                <td>\n                  <QRModal name={data.name} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        {!this.state.loading && (\n          <Button color=\"primary\" onClick={this.fetchFromDB}>\n            Reload\n          </Button>\n        )}\n        {this.state.loading && <Loading />}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  ButtonGroup,\n  ButtonToolbar,\n  Alert\n} from \"reactstrap\";\nimport { db } from \"../fire\";\nimport io from \"socket.io-client\";\nimport Loading from \"./Loading\";\nimport QRModal from \"./QRModal\";\nconst styles = {\n  marginTop: \"80px\"\n};\nconst stylestwo = {\n  textAlign: \"center\",\n\n  mariginTop: \"10px\",\n  padding: \"20px\"\n};\nconst socket = io.connect(\"http://35.223.18.41:5000/\");\nclass DeployForm extends Component {\n  state = {\n    model_name: \"\",\n    description: \"\",\n    diseases: [],\n    labels: [],\n    deployed_model: {},\n    deployed_model_bool: false,\n    loading: false,\n    error_data: \"\",\n    after_train: false\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  fetchFromDB = () => {\n    this.setState({ loading: true });\n    db.collection(\"Images\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        //console.log(data);\n        var temp = [];\n        for (var i = 0; i < data.length; i++) {\n          temp.push(data[i].label);\n        }\n        //console.log(temp);\n        this.setState({ labels: temp }); // array of cities objects\n      });\n    this.setState({ loading: false });\n  };\n  componentDidMount() {\n    this.fetchFromDB();\n  }\n  onCheckboxBtnClick = selected => {\n    var array = [...this.state.diseases]; // make a separate copy of the array\n    var index = array.indexOf(selected);\n    if (index < 0) {\n      array.push(selected);\n    } else {\n      array.splice(index, 1);\n    }\n\n    this.setState({ diseases: array });\n  };\n\n  onSubmit = event => {\n    this.setState({ loading: true });\n    event.preventDefault();\n    const { description, model_name, diseases } = this.state;\n\n    this.setState({\n      model_name: \"\",\n      description: \"\",\n      diseases: []\n    });\n\n    socket.emit(\"train\", {\n      labels: diseases,\n      description: description,\n      model: model_name\n    });\n    this.setState({ loading: false, after_train: true });\n\n    console.log(\"emitted\");\n    socket.on(\n      \"trainResponse\",\n      function(deployed_model_stats) {\n        this.setState({\n          deployed_model: deployed_model_stats,\n          deployed_model_bool: true,\n          loading: false\n        });\n        this.fetchFromDB();\n      }.bind(this)\n    );\n\n    socket.on(\n      \"error\",\n      function(error) {\n        this.setState({ error_data: error.message, loading: false });\n      }.bind(this)\n    );\n\n    // this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.onSubmit} style={styles}>\n          <h5>\n            <strong>Make a new model:</strong>\n          </h5>\n          <FormGroup>\n            <Label for=\"Model-Name\">Model Name:</Label>\n            <Input\n              type=\"text\"\n              name=\"model_name\"\n              id=\"model_name\"\n              value={this.state.model_name}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description:</Label>\n            <Input\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              value={this.state.description}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n          <p>Select Diseases:</p>\n          <ButtonToolbar>\n            <ButtonGroup>\n              {this.state.labels.map((label, index) => (\n                <Button\n                  color=\"success\"\n                  onClick={() => this.onCheckboxBtnClick(label)}\n                  active={this.state.diseases.includes(label)}\n                  key={index}\n                >\n                  {label}\n                </Button>\n              ))}\n            </ButtonGroup>\n            <ButtonGroup>\n              <Button onClick={this.fetchFromDB}>\n                <i className=\"fa fa-refresh\"></i>\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n          <br />\n          {!this.state.loading && <Button color=\"primary\">Deploy</Button>}\n          {this.state.loading && <Loading />}\n          <br />\n          {this.state.deployed_model_bool && (\n            <div style={stylestwo}>\n              <p>\n                QR-Code:\n                <QRModal name={this.state.deployed_model.name} />\n              </p>\n            </div>\n          )}\n          {this.state.error_data && (\n            <div style={stylestwo}>\n              <p>\n                <Alert color=\"danger\">{this.state.error_data}</Alert>\n              </p>\n            </div>\n          )}\n          {this.state.after_train && (\n            <div style={stylestwo}>\n              <p>\n                <Alert color=\"warning\">\n                  Please reload after sometime minutes(it may take 10mins to 45\n                  min depending on the model).\n                </Alert>\n              </p>\n            </div>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default DeployForm;\n","import React, { useState } from \"react\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Container\n} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport FileSystem from \"./FileSystem\";\nimport ModelsList from \"./ModelsList\";\nimport DeployForm from \"./DeployForm\";\n\nconst Example = props => {\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"1\" })}\n            onClick={() => {\n              toggle(\"1\");\n            }}\n          >\n            Home\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"2\" })}\n            onClick={() => {\n              toggle(\"2\");\n            }}\n          >\n            Deploy\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Container>\n            <FileSystem />\n          </Container>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Container>\n            <Row>\n              <Col xs=\"6\">\n                <ModelsList />\n              </Col>\n              <Col xs=\"6\">\n                <DeployForm />\n              </Col>\n            </Row>\n          </Container>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n};\n\nexport default Example;\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport Tabs from \"./components/Tabs\";\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Tabs />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}