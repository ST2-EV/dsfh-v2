{"ast":null,"code":"var _jsxFileName = \"/home/retr0/Documents/Projects/dsfh-dashboard/src/components/FileSystem.js\";\nimport React, { Component } from \"react\";\nimport fire from \"../fire\";\n\nclass MyFileSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: []\n    }; // <- set up react state\n  }\n\n  componentWillMount() {\n    /* Create reference to messages in Firebase Database */\n    let messagesRef = fire.database().ref(\"Images\").orderByKey().limitToLast(100);\n    messagesRef.on(\"child_added\", snapshot => {\n      /* Update React state when message is added at Firebase Database */\n      let message = {\n        text: snapshot.val(),\n        id: snapshot.key\n      };\n      this.setState({\n        messages: [message].concat(this.state.messages)\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.addMessage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: el => this.inputEl = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    },\n    /* Render the list of messages */\n    this.state.messages.map(message => React.createElement(\"li\", {\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, message.labels[0]))));\n  }\n\n}\n\nexport default MyFileSystem;","map":{"version":3,"sources":["/home/retr0/Documents/Projects/dsfh-dashboard/src/components/FileSystem.js"],"names":["React","Component","fire","MyFileSystem","constructor","props","state","messages","componentWillMount","messagesRef","database","ref","orderByKey","limitToLast","on","snapshot","message","text","val","id","key","setState","concat","render","addMessage","bind","el","inputEl","map","labels"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb,CAFiB,CAEc;AAChC;;AACDC,EAAAA,kBAAkB,GAAG;AACnB;AACA,QAAIC,WAAW,GAAGP,IAAI,CACnBQ,QADe,GAEfC,GAFe,CAEX,QAFW,EAGfC,UAHe,GAIfC,WAJe,CAIH,GAJG,CAAlB;AAKAJ,IAAAA,WAAW,CAACK,EAAZ,CAAe,aAAf,EAA8BC,QAAQ,IAAI;AACxC;AACA,UAAIC,OAAO,GAAG;AAAEC,QAAAA,IAAI,EAAEF,QAAQ,CAACG,GAAT,EAAR;AAAwBC,QAAAA,EAAE,EAAEJ,QAAQ,CAACK;AAArC,OAAd;AACA,WAAKC,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAAE,CAACS,OAAD,EAAUM,MAAV,CAAiB,KAAKhB,KAAL,CAAWC,QAA5B;AAAZ,OAAd;AACD,KAJD;AAKD;;AACDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEC,EAAE,IAAK,KAAKC,OAAL,GAAeD,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACG;AACD,SAAKpB,KAAL,CAAWC,QAAX,CAAoBqB,GAApB,CAAwBZ,OAAO,IAC7B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBH,OAAO,CAACa,MAAR,CAAe,CAAf,CAAtB,CADF,CAFF,CAHF,CADF;AAYD;;AA/BkC;;AAkCrC,eAAe1B,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport fire from \"../fire\";\n\nclass MyFileSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { messages: [] }; // <- set up react state\n  }\n  componentWillMount() {\n    /* Create reference to messages in Firebase Database */\n    let messagesRef = fire\n      .database()\n      .ref(\"Images\")\n      .orderByKey()\n      .limitToLast(100);\n    messagesRef.on(\"child_added\", snapshot => {\n      /* Update React state when message is added at Firebase Database */\n      let message = { text: snapshot.val(), id: snapshot.key };\n      this.setState({ messages: [message].concat(this.state.messages) });\n    });\n  }\n  render() {\n    return (\n      <form onSubmit={this.addMessage.bind(this)}>\n        <input type=\"text\" ref={el => (this.inputEl = el)} />\n        <input type=\"submit\" />\n        <ul>\n          {/* Render the list of messages */\n          this.state.messages.map(message => (\n            <li key={message.id}>{message.labels[0]}</li>\n          ))}\n        </ul>\n      </form>\n    );\n  }\n}\n\nexport default MyFileSystem;\n"]},"metadata":{},"sourceType":"module"}