{"ast":null,"code":"var _jsxFileName = \"/home/retr0/Documents/Projects/dsfh-dashboard/src/components/ModelsList.js\";\nimport React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Container, Table, Button } from \"reactstrap\";\nimport QRModal from \"./QRModal\";\nimport Loading from \"./Loading\";\nconst styles = {\n  marginTop: \"80px\"\n};\nexport default class ModelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchFromDB = () => {\n      this.setState({\n        loading: true\n      });\n      db.collection(\"Models\").get().then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        console.log(data);\n        this.setState({\n          model_data: data\n        }); // array of cities objects\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      model_data: [],\n      loading: false\n    }; // <- set up react state\n  }\n\n  componentWillMount() {\n    this.fetchFromDB();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Model name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Diseases involved\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"QR-code\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    },\n    /* Render the list of messages */\n    this.state.model_data.map((data, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, index), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, data.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, data.labels.map((label, key) => React.createElement(\"li\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, label)))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, data.desciption), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(QRModal, {\n      name: data.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))))), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.fetchFromDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Reload\"), this.state.loading && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/retr0/Documents/Projects/dsfh-dashboard/src/components/ModelsList.js"],"names":["React","Component","db","Container","Table","Button","QRModal","Loading","styles","marginTop","ModelsList","constructor","props","fetchFromDB","setState","loading","collection","get","then","querySnapshot","data","docs","map","doc","console","log","model_data","state","componentWillMount","render","index","name","labels","label","key","desciption"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Container, Table, Button } from \"reactstrap\";\nimport QRModal from \"./QRModal\";\nimport Loading from \"./Loading\";\nconst styles = {\n  marginTop: \"80px\"\n};\n\nexport default class ModelsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { model_data: [], loading: false }; // <- set up react state\n  }\n  fetchFromDB = () => {\n    this.setState({ loading: true });\n    db.collection(\"Models\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        console.log(data);\n        this.setState({ model_data: data }); // array of cities objects\n      });\n    this.setState({ loading: false });\n  };\n  componentWillMount() {\n    this.fetchFromDB();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Table striped style={styles}>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Model name</th>\n              <th>Diseases involved</th>\n              <th>Description</th>\n              <th>QR-code</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Render the list of messages */\n            this.state.model_data.map((data, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{index}</th>\n                <td>{data.name}</td>\n                <td>\n                  <ul>\n                    {data.labels.map((label, key) => (\n                      <li key={key}>{label}</li>\n                    ))}\n                  </ul>\n                </td>\n                <td>{data.desciption}</td>\n                <td>\n                  <QRModal name={data.name} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <Button color=\"primary\" onClick={this.fetchFromDB}>\n          Reload\n        </Button>\n        {this.state.loading && <Loading />}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}