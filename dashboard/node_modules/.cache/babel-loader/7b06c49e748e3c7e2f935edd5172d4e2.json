{"ast":null,"code":"import React, { cloneElement, Component, Children, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM, { findDOMNode } from 'react-dom';\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func\n  : Function('return this')();\n  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\n  var core = module.exports = {\n    version: '2.5.7'\n  };\n  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\n\nvar _core_1 = _core.version;\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n}; // optional / simple context binding\n\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n\n  if (that === undefined) return fn;\n\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n\n  return function ()\n  /* ...args */\n  {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n}; // Thank's IE8 for his funny defineProperty\n\n\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function () {\n      return 7;\n    }\n  }).a != 7;\n});\n\nvar document$1 = _global.document; // typeof document.createElement is 'object' in old IE\n\nvar is = _isObject(document$1) && _isObject(document$1.createElement);\n\nvar _domCreate = function (it) {\n  return is ? document$1.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', {\n    get: function () {\n      return 7;\n    }\n  }).a != 7;\n}); // 7.1.1 ToPrimitive(input [, PreferredType])\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\n\n\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n\n  P = _toPrimitive(P, true);\n\n  _anObject(Attributes);\n\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) {\n    /* empty */\n  }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\nvar _objectDp = {\n  f: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && _has(exports, key)) continue; // export native or passed\n\n    out = own ? target[key] : source[key]; // prevent global pollution for namespaces\n\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] // bind timers to global for call from export context\n    : IS_BIND && own ? _ctx(out, _global) // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0:\n              return new C();\n\n            case 1:\n              return new C(a);\n\n            case 2:\n              return new C(a, b);\n          }\n\n          return new C(a, b, c);\n        }\n\n        return C.apply(this, arguments);\n      };\n\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F; // make static versions for prototype methods\n    }(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out; // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\n      if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);\n    }\n  }\n}; // type bitmap\n\n\n$export.F = 1; // forced\n\n$export.G = 2; // global\n\n$export.S = 4; // static\n\n$export.P = 8; // proto\n\n$export.B = 16; // bind\n\n$export.W = 32; // wrap\n\n$export.U = 64; // safe\n\n$export.R = 128; // real proto method for `library`\n\nvar _export = $export;\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n}; // fallback for non-array-like ES3 and non-enumerable old V8 strings\n// eslint-disable-next-line no-prototype-builtins\n\n\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n}; // 7.2.1 RequireObjectCoercible(argument)\n\n\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n}; // to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n}; // 7.1.4 ToInteger\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n}; // 7.1.15 ToLength\n\n\nvar min = Math.min;\n\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\n\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n}; // false -> Array#indexOf\n// true  -> Array#includes\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n\n    var length = _toLength(O.length);\n\n    var index = _toAbsoluteIndex(fromIndex, length);\n\n    var value; // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++]; // eslint-disable-next-line no-self-compare\n\n      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n    } else for (; length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    }\n    return !IS_INCLUDES && -1;\n  };\n};\n\nvar _library = true;\n\nvar _shared = createCommonjsModule(function (module) {\n  var SHARED = '__core-js_shared__';\n  var store = _global[SHARED] || (_global[SHARED] = {});\n  (module.exports = function (key, value) {\n    return store[key] || (store[key] = value !== undefined ? value : {});\n  })('versions', []).push({\n    version: _core.version,\n    mode: 'pure',\n    copyright: 'Â© 2018 Denis Pushkarev (zloirock.ru)'\n  });\n});\n\nvar id = 0;\nvar px = Math.random();\n\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\n\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n\n  var i = 0;\n  var result = [];\n  var key;\n\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key); // Don't enum bug & hidden keys\n\n\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n\n  return result;\n}; // IE 8- don't enum bug keys\n\n\nvar _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(','); // 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\nvar _objectGops = {\n  f: f$1\n};\nvar f$2 = {}.propertyIsEnumerable;\nvar _objectPie = {\n  f: f$2\n}; // 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n}; // 19.1.2.1 Object.assign(target, source, ...)\n\n\nvar $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)\n\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {}; // eslint-disable-next-line no-undef\n\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  }\n\n  return T;\n} : $assign; // 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', {\n  assign: _objectAssign\n});\n\nvar assign = _core.Object.assign;\nvar assign$1 = assign;\n\nfunction _extends() {\n  _extends = assign$1 || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n\n  var keys = _objectKeys(Properties);\n\n  var length = keys.length;\n  var i = 0;\n  var P;\n\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n\n  return O;\n};\n\nvar document$2 = _global.document;\n\nvar _html = document$2 && document$2.documentElement; // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\n\nvar Empty = function () {\n  /* empty */\n};\n\nvar PROTOTYPE$1 = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype\n\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n\n  _html.appendChild(iframe);\n\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null; // add \"__proto__\" for Object.getPrototypeOf polyfill\n\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n\n  return Properties === undefined ? result : _objectDps(result, Properties);\n}; // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n_export(_export.S, 'Object', {\n  create: _objectCreate\n});\n\nvar $Object = _core.Object;\n\nvar create = function create(P, D) {\n  return $Object.create(P, D);\n};\n\nvar create$1 = create;\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = create$1(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n} // most Object methods by ES6 should accept primitives\n\n\nvar _objectSap = function (KEY, exec) {\n  var fn = (_core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n\n  _export(_export.S + _export.F * _fails(function () {\n    fn(1);\n  }), 'Object', exp);\n}; // 19.1.2.14 Object.keys(O)\n\n\n_objectSap('keys', function () {\n  return function keys(it) {\n    return _objectKeys(_toObject(it));\n  };\n});\n\nvar keys = _core.Object.keys;\nvar keys$1 = keys;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = keys$1(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n\n  /* global define */\n  (function () {\n    var hasOwn = {}.hasOwnProperty;\n\n    function classNames() {\n      var classes = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg) continue;\n        var argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n          classes.push(arg);\n        } else if (Array.isArray(arg) && arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        } else if (argType === 'object') {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        }\n      }\n\n      return classes.join(' ');\n    }\n\n    if (module.exports) {\n      classNames.default = classNames;\n      module.exports = classNames;\n    } else {\n      window.classNames = classNames;\n    }\n  })();\n});\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant$1 = function (condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nvar invariant_1 = invariant$1;\nvar utils = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.uncontrolledPropTypes = uncontrolledPropTypes;\n  exports.isProp = isProp;\n  exports.defaultKey = defaultKey;\n  exports.isReactComponent = isReactComponent;\n\n  var _invariant = _interopRequireDefault(invariant_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var noop = function noop() {};\n\n  function readOnlyPropType(handler, name) {\n    return function (props, propName) {\n      if (props[propName] !== undefined) {\n        if (!props[handler]) {\n          return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n        }\n      }\n    };\n  }\n\n  function uncontrolledPropTypes(controlledValues, displayName) {\n    var propTypes = {};\n    Object.keys(controlledValues).forEach(function (prop) {\n      // add default propTypes for folks that use runtime checks\n      propTypes[defaultKey(prop)] = noop;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var handler = controlledValues[prop];\n        !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? (0, _invariant.default)(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n        propTypes[prop] = readOnlyPropType(handler, displayName);\n      }\n    });\n    return propTypes;\n  }\n\n  function isProp(props, prop) {\n    return props[prop] !== undefined;\n  }\n\n  function defaultKey(key) {\n    return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n  }\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * LICENSE file in the root directory of this source tree. An additional grant\n   * of patent rights can be found in the PATENTS file in the same directory.\n   */\n\n\n  function isReactComponent(component) {\n    return !!(component && component.prototype && component.prototype.isReactComponent);\n  }\n});\nunwrapExports(utils);\nvar utils_1 = utils.uncontrolledPropTypes;\nvar utils_2 = utils.isProp;\nvar utils_3 = utils.defaultKey;\nvar utils_4 = utils.isReactComponent;\nvar uncontrollable_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.default = uncontrollable;\n\n  var _react = _interopRequireDefault(React);\n\n  var _invariant = _interopRequireDefault(invariant_1);\n\n  var Utils = _interopRequireWildcard(utils);\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n            if (desc.get || desc.set) {\n              Object.defineProperty(newObj, key, desc);\n            } else {\n              newObj[key] = obj[key];\n            }\n          }\n        }\n      }\n\n      newObj.default = obj;\n      return newObj;\n    }\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function uncontrollable(Component$$1, controlledValues, methods) {\n    if (methods === void 0) {\n      methods = [];\n    }\n\n    var displayName = Component$$1.displayName || Component$$1.name || 'Component';\n    var isCompositeComponent = Utils.isReactComponent(Component$$1);\n    var controlledProps = Object.keys(controlledValues);\n    var PROPS_TO_OMIT = controlledProps.map(Utils.defaultKey);\n    !(isCompositeComponent || !methods.length) ? process.env.NODE_ENV !== \"production\" ? (0, _invariant.default)(false, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', ')) : invariant(false) : void 0;\n\n    var UncontrolledComponent =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inheritsLoose(UncontrolledComponent, _React$Component);\n\n      function UncontrolledComponent() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n        _this.handlers = Object.create(null);\n        controlledProps.forEach(function (propName) {\n          var handlerName = controlledValues[propName];\n\n          var handleChange = function handleChange(value) {\n            if (_this.props[handlerName]) {\n              var _this$props;\n\n              _this._notifying = true;\n\n              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                args[_key2 - 1] = arguments[_key2];\n              }\n\n              (_this$props = _this.props)[handlerName].apply(_this$props, [value].concat(args));\n\n              _this._notifying = false;\n            }\n\n            _this._values[propName] = value;\n            if (!_this.unmounted) _this.forceUpdate();\n          };\n\n          _this.handlers[handlerName] = handleChange;\n        });\n        if (isCompositeComponent) _this.attachRef = function (ref) {\n          _this.inner = ref;\n        };\n        return _this;\n      }\n\n      var _proto = UncontrolledComponent.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate() {\n        //let the forceUpdate trigger the update\n        return !this._notifying;\n      };\n\n      _proto.componentWillMount = function componentWillMount() {\n        var _this2 = this;\n\n        var props = this.props;\n        this._values = Object.create(null);\n        controlledProps.forEach(function (key) {\n          _this2._values[key] = props[Utils.defaultKey(key)];\n        });\n      };\n\n      _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        var _this3 = this;\n\n        var props = this.props;\n        controlledProps.forEach(function (key) {\n          /**\n           * If a prop switches from controlled to Uncontrolled\n           * reset its value to the defaultValue\n           */\n          if (!Utils.isProp(nextProps, key) && Utils.isProp(props, key)) {\n            _this3._values[key] = nextProps[Utils.defaultKey(key)];\n          }\n        });\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        this.unmounted = true;\n      };\n\n      _proto.getControlledInstance = function getControlledInstance() {\n        return this.inner;\n      };\n\n      _proto.render = function render() {\n        var _this4 = this;\n\n        var props = _extends({}, this.props);\n\n        PROPS_TO_OMIT.forEach(function (prop) {\n          delete props[prop];\n        });\n        var newProps = {};\n        controlledProps.forEach(function (propName) {\n          var propValue = _this4.props[propName];\n          newProps[propName] = propValue !== undefined ? propValue : _this4._values[propName];\n        });\n        return _react.default.createElement(Component$$1, _extends({}, props, newProps, this.handlers, {\n          ref: this.attachRef\n        }));\n      };\n\n      return UncontrolledComponent;\n    }(_react.default.Component);\n\n    UncontrolledComponent.displayName = \"Uncontrolled(\" + displayName + \")\";\n    UncontrolledComponent.propTypes = Utils.uncontrolledPropTypes(controlledValues, displayName);\n    methods.forEach(function (method) {\n      UncontrolledComponent.prototype[method] = function $proxiedMethod() {\n        var _inner;\n\n        return (_inner = this.inner)[method].apply(_inner, arguments);\n      };\n    });\n    UncontrolledComponent.ControlledComponent = Component$$1;\n    /**\n     * useful when wrapping a Component and you want to control\n     * everything\n     */\n\n    UncontrolledComponent.deferControlTo = function (newComponent, additions, nextMethods) {\n      if (additions === void 0) {\n        additions = {};\n      }\n\n      return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);\n    };\n\n    return UncontrolledComponent;\n  }\n\n  module.exports = exports[\"default\"];\n});\nvar uncontrollable = unwrapExports(uncontrollable_1);\nvar isEnum = _objectPie.f;\n\nvar _objectToArray = function (isEntries) {\n  return function (it) {\n    var O = _toIobject(it);\n\n    var keys = _objectKeys(O);\n\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    }\n\n    return result;\n  };\n}; // https://github.com/tc39/proposal-object-values-entries\n\n\nvar $entries = _objectToArray(true);\n\n_export(_export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n\nvar entries = _core.Object.entries;\nvar entries$1 = entries;\nvar Size = {\n  LARGE: 'large',\n  SMALL: 'small',\n  XSMALL: 'xsmall'\n};\nvar SIZE_MAP = {\n  large: 'lg',\n  medium: 'md',\n  small: 'sm',\n  xsmall: 'xs',\n  lg: 'lg',\n  md: 'md',\n  sm: 'sm',\n  xs: 'xs'\n};\nvar DEVICE_SIZES = ['lg', 'md', 'sm', 'xs'];\nvar State = {\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  DANGER: 'danger',\n  INFO: 'info'\n};\nvar Style = {\n  DEFAULT: 'default',\n  PRIMARY: 'primary',\n  LINK: 'link',\n  INVERSE: 'inverse'\n};\n\nfunction curry(fn) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var last = args[args.length - 1];\n\n    if (typeof last === 'function') {\n      return fn.apply(void 0, args);\n    }\n\n    return function (Component$$1) {\n      return fn.apply(void 0, args.concat([Component$$1]));\n    };\n  };\n}\n\nfunction prefix(props, variant) {\n  var bsClass = (props.bsClass || '').trim();\n  !(bsClass != null) ? process.env.NODE_ENV !== \"production\" ? invariant_1(false, 'A `bsClass` prop is required for this component') : invariant_1(false) : void 0;\n  return bsClass + (variant ? \"-\" + variant : '');\n}\n\nvar bsClass = curry(function (defaultClass, Component$$1) {\n  var propTypes = Component$$1.propTypes || (Component$$1.propTypes = {});\n  var defaultProps = Component$$1.defaultProps || (Component$$1.defaultProps = {});\n  propTypes.bsClass = PropTypes.string;\n  defaultProps.bsClass = defaultClass;\n  return Component$$1;\n});\nvar bsStyles = curry(function (styles, defaultStyle, Component$$1) {\n  if (typeof defaultStyle !== 'string') {\n    Component$$1 = defaultStyle;\n    defaultStyle = undefined;\n  }\n\n  var existing = Component$$1.STYLES || [];\n  var propTypes = Component$$1.propTypes || {};\n  styles.forEach(function (style) {\n    if (existing.indexOf(style) === -1) {\n      existing.push(style);\n    }\n  });\n  var propType = PropTypes.oneOf(existing); // expose the values on the propType function for documentation\n\n  Component$$1.STYLES = existing;\n  propType._values = existing;\n  Component$$1.propTypes = _extends({}, propTypes, {\n    bsStyle: propType\n  });\n\n  if (defaultStyle !== undefined) {\n    var defaultProps = Component$$1.defaultProps || (Component$$1.defaultProps = {});\n    defaultProps.bsStyle = defaultStyle;\n  }\n\n  return Component$$1;\n});\nvar bsSizes = curry(function (sizes, defaultSize, Component$$1) {\n  if (typeof defaultSize !== 'string') {\n    Component$$1 = defaultSize;\n    defaultSize = undefined;\n  }\n\n  var existing = Component$$1.SIZES || [];\n  var propTypes = Component$$1.propTypes || {};\n  sizes.forEach(function (size) {\n    if (existing.indexOf(size) === -1) {\n      existing.push(size);\n    }\n  });\n  var values = [];\n  existing.forEach(function (size) {\n    var mappedSize = SIZE_MAP[size];\n\n    if (mappedSize && mappedSize !== size) {\n      values.push(mappedSize);\n    }\n\n    values.push(size);\n  });\n  var propType = PropTypes.oneOf(values);\n  propType._values = values; // expose the values on the propType function for documentation\n\n  Component$$1.SIZES = existing;\n  Component$$1.propTypes = _extends({}, propTypes, {\n    bsSize: propType\n  });\n\n  if (defaultSize !== undefined) {\n    if (!Component$$1.defaultProps) {\n      Component$$1.defaultProps = {};\n    }\n\n    Component$$1.defaultProps.bsSize = defaultSize;\n  }\n\n  return Component$$1;\n});\n\nfunction getClassSet(props) {\n  var _classes;\n\n  var classes = (_classes = {}, _classes[prefix(props)] = true, _classes);\n\n  if (props.bsSize) {\n    var bsSize = SIZE_MAP[props.bsSize] || props.bsSize;\n    classes[prefix(props, bsSize)] = true;\n  }\n\n  if (props.bsStyle) {\n    classes[prefix(props, props.bsStyle)] = true;\n  }\n\n  return classes;\n}\n\nfunction getBsProps(props) {\n  return {\n    bsClass: props.bsClass,\n    bsSize: props.bsSize,\n    bsStyle: props.bsStyle,\n    bsRole: props.bsRole\n  };\n}\n\nfunction isBsProp(propName) {\n  return propName === 'bsClass' || propName === 'bsSize' || propName === 'bsStyle' || propName === 'bsRole';\n}\n\nfunction splitBsProps(props) {\n  var elementProps = {};\n  entries$1(props).forEach(function (_ref) {\n    var propName = _ref[0],\n        propValue = _ref[1];\n\n    if (!isBsProp(propName)) {\n      elementProps[propName] = propValue;\n    }\n  });\n  return [getBsProps(props), elementProps];\n}\n\nfunction splitBsPropsAndOmit(props, omittedPropNames) {\n  var isOmittedProp = {};\n  omittedPropNames.forEach(function (propName) {\n    isOmittedProp[propName] = true;\n  });\n  var elementProps = {};\n  entries$1(props).forEach(function (_ref2) {\n    var propName = _ref2[0],\n        propValue = _ref2[1];\n\n    if (!isBsProp(propName) && !isOmittedProp[propName]) {\n      elementProps[propName] = propValue;\n    }\n  });\n  return [getBsProps(props), elementProps];\n} // TODO: This module should be ElementChildren, and should use named exports.\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid components\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func.\n * @param {*} context Context for func.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction map(children, func, context) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    return func.call(context, child, index++);\n  });\n}\n/**\n * Iterates through children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func.\n * @param {*} context Context for context.\n */\n\n\nfunction forEach(children, func, context) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    func.call(context, child, index++);\n  });\n}\n/**\n * Count the number of \"valid components\" in the Children container.\n *\n * @param {?*} children Children tree container.\n * @returns {number}\n */\n\n\nfunction count(children) {\n  var result = 0;\n  React.Children.forEach(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    ++result;\n  });\n  return result;\n}\n/**\n * Finds children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func.\n * @param {*} context Context for func.\n * @returns {array} of children that meet the func return statement\n */\n\n\nfunction filter(children, func, context) {\n  var index = 0;\n  var result = [];\n  React.Children.forEach(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    if (func.call(context, child, index++)) {\n      result.push(child);\n    }\n  });\n  return result;\n}\n\nfunction find(children, func, context) {\n  var index = 0;\n  var result;\n  React.Children.forEach(children, function (child) {\n    if (result) {\n      return;\n    }\n\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    if (func.call(context, child, index++)) {\n      result = child;\n    }\n  });\n  return result;\n}\n\nfunction every(children, func, context) {\n  var index = 0;\n  var result = true;\n  React.Children.forEach(children, function (child) {\n    if (!result) {\n      return;\n    }\n\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    if (!func.call(context, child, index++)) {\n      result = false;\n    }\n  });\n  return result;\n}\n\nfunction some(children, func, context) {\n  var index = 0;\n  var result = false;\n  React.Children.forEach(children, function (child) {\n    if (result) {\n      return;\n    }\n\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    if (func.call(context, child, index++)) {\n      result = true;\n    }\n  });\n  return result;\n}\n\nfunction toArray(children) {\n  var result = [];\n  React.Children.forEach(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    result.push(child);\n  });\n  return result;\n}\n\nvar ValidComponentChildren = {\n  map: map,\n  forEach: forEach,\n  count: count,\n  find: find,\n  filter: filter,\n  every: every,\n  some: some,\n  toArray: toArray\n};\nvar createChainableTypeChecker_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createChainableTypeChecker;\n  /**\n   * Copyright 2013-present, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * LICENSE file in the root directory of this source tree. An additional grant\n   * of patent rights can be found in the PATENTS file in the same directory.\n   */\n  // Mostly taken from ReactPropTypes.\n\n  function createChainableTypeChecker(validate) {\n    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n      var componentNameSafe = componentName || '<<anonymous>>';\n      var propFullNameSafe = propFullName || propName;\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n        }\n\n        return null;\n      }\n\n      for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n        args[_key - 6] = arguments[_key];\n      }\n\n      return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  module.exports = exports['default'];\n});\nvar createChainableTypeChecker = unwrapExports(createChainableTypeChecker_1);\nvar idPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n\nfunction generatedId(name) {\n  return function (props) {\n    var error = null;\n\n    if (!props.generateChildId) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      error = idPropType.apply(void 0, [props].concat(args));\n\n      if (!error && !props.id) {\n        error = new Error(\"In order to properly initialize the \" + name + \" in a way that is accessible to assistive technologies \" + (\"(such as screen readers) an `id` or a `generateChildId` prop to \" + name + \" is required\"));\n      }\n    }\n\n    return error;\n  };\n}\n\nfunction requiredRoles() {\n  for (var _len2 = arguments.length, roles = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    roles[_key2] = arguments[_key2];\n  }\n\n  return createChainableTypeChecker(function (props, propName, component) {\n    var missing;\n    roles.every(function (role) {\n      if (!ValidComponentChildren.some(props.children, function (child) {\n        return child.props.bsRole === role;\n      })) {\n        missing = role;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (missing) {\n      return new Error(\"(children) \" + component + \" - Missing a required child with bsRole: \" + (missing + \". \" + component + \" must have at least one child of each of \") + (\"the following bsRoles: \" + roles.join(', ')));\n    }\n\n    return null;\n  });\n}\n\nfunction exclusiveRoles() {\n  for (var _len3 = arguments.length, roles = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    roles[_key3] = arguments[_key3];\n  }\n\n  return createChainableTypeChecker(function (props, propName, component) {\n    var duplicate;\n    roles.every(function (role) {\n      var childrenWithRole = ValidComponentChildren.filter(props.children, function (child) {\n        return child.props.bsRole === role;\n      });\n\n      if (childrenWithRole.length > 1) {\n        duplicate = role;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (duplicate) {\n      return new Error(\"(children) \" + component + \" - Duplicate children detected of bsRole: \" + (duplicate + \". Only one child each allowed with the following \") + (\"bsRoles: \" + roles.join(', ')));\n    }\n\n    return null;\n  });\n}\n\nvar propTypes = {\n  accordion: PropTypes.bool,\n\n  /**\n   * When `accordion` is enabled, `activeKey` controls the which child `Panel` is expanded. `activeKey` should\n   * match a child Panel `eventKey` prop exactly.\n   *\n   * @controllable onSelect\n   */\n  activeKey: PropTypes.any,\n\n  /**\n   * A callback fired when a child Panel collapse state changes. It's called with the next expanded `activeKey`\n   *\n   * @controllable activeKey\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * An HTML role attribute\n   */\n  role: PropTypes.string,\n\n  /**\n   * A function that takes an eventKey and type and returns a\n   * unique id for each Panel heading and Panel Collapse. The function _must_ be a pure function,\n   * meaning it should always return the _same_ id for the same set of inputs. The default\n   * value requires that an `id` to be set for the PanelGroup.\n   *\n   * The `type` argument will either be `\"body\"` or `\"heading\"`.\n   *\n   * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`\n   */\n  generateChildId: PropTypes.func,\n\n  /**\n   * HTML id attribute, required if no `generateChildId` prop\n   * is specified.\n   */\n  id: generatedId('PanelGroup')\n};\nvar defaultProps = {\n  accordion: false\n};\nvar childContextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    headerRole: PropTypes.string,\n    panelRole: PropTypes.string,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\n\nvar PanelGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelGroup, _React$Component);\n\n  function PanelGroup() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleSelect = function (key, expanded, e) {\n      if (expanded) {\n        _this.props.onSelect(key, e);\n      } else if (_this.props.activeKey === key) {\n        _this.props.onSelect(null, e);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = PanelGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        activeKey = _this$props.activeKey,\n        accordion = _this$props.accordion,\n        generateChildId = _this$props.generateChildId,\n        id = _this$props.id;\n    var getId = null;\n\n    if (accordion) {\n      getId = generateChildId || function (key, type) {\n        return id ? id + \"-\" + type + \"-\" + key : null;\n      };\n    }\n\n    return {\n      $bs_panelGroup: _extends({\n        getId: getId,\n        headerRole: 'tab',\n        panelRole: 'tabpanel'\n      }, accordion && {\n        activeKey: activeKey,\n        onToggle: this.handleSelect\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        accordion = _this$props2.accordion,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"accordion\", \"className\", \"children\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['onSelect', 'activeKey']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    if (accordion) {\n      elementProps.role = elementProps.role || 'tablist';\n    }\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        bsStyle: child.props.bsStyle || bsProps.bsStyle\n      });\n    }));\n  };\n\n  return PanelGroup;\n}(React.Component);\n\nPanelGroup.propTypes = propTypes;\nPanelGroup.defaultProps = defaultProps;\nPanelGroup.childContextTypes = childContextTypes;\nvar PanelGroup$1 = uncontrollable(bsClass('panel-group', PanelGroup), {\n  activeKey: 'onSelect'\n});\n\nvar Accordion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Accordion, _React$Component);\n\n  function Accordion() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Accordion.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(PanelGroup$1, _extends({}, this.props, {\n      accordion: true\n    }), this.props.children);\n  };\n\n  return Accordion;\n}(React.Component); // https://github.com/tc39/proposal-object-values-entries\n\n\nvar $values = _objectToArray(false);\n\n_export(_export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\nvar values = _core.Object.values;\nvar values$1 = values;\nvar propTypes$1 = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\nvar defaultProps$1 = {\n  label: 'Close'\n};\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CloseButton, _React$Component);\n\n  function CloseButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = CloseButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        label = _this$props.label,\n        onClick = _this$props.onClick;\n    return React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      onClick: onClick\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\xD7\"), React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  };\n\n  return CloseButton;\n}(React.Component);\n\nCloseButton.propTypes = propTypes$1;\nCloseButton.defaultProps = defaultProps$1;\nvar propTypes$2 = {\n  onDismiss: PropTypes.func,\n  closeLabel: PropTypes.string\n};\nvar defaultProps$2 = {\n  closeLabel: 'Close alert'\n};\n\nvar Alert =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Alert, _React$Component);\n\n  function Alert() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Alert.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        onDismiss = _this$props.onDismiss,\n        closeLabel = _this$props.closeLabel,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"onDismiss\", \"closeLabel\", \"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var dismissable = !!onDismiss;\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, 'dismissable')] = dismissable, _extends2));\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      role: \"alert\",\n      className: classnames(className, classes)\n    }), dismissable && React.createElement(CloseButton, {\n      onClick: onDismiss,\n      label: closeLabel\n    }), children);\n  };\n\n  return Alert;\n}(React.Component);\n\nAlert.propTypes = propTypes$2;\nAlert.defaultProps = defaultProps$2;\nbsStyles(values$1(State), State.INFO, bsClass('alert', Alert));\nvar propTypes$3 = {\n  pullRight: PropTypes.bool\n};\nvar defaultProps$3 = {\n  pullRight: false\n};\n\nvar Badge =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Badge, _React$Component);\n\n  function Badge() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Badge.prototype;\n\n  _proto.hasContent = function hasContent(children) {\n    var result = false;\n    React.Children.forEach(children, function (child) {\n      if (result) {\n        return;\n      }\n\n      if (child || child === 0) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        pullRight = _this$props.pullRight,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"pullRight\", \"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      'pull-right': pullRight,\n      // Hack for collapsing on IE8.\n      hidden: !this.hasContent(children)\n    });\n\n    return React.createElement(\"span\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), children);\n  };\n\n  return Badge;\n}(React.Component);\n\nBadge.propTypes = propTypes$3;\nBadge.defaultProps = defaultProps$3;\nbsClass('badge', Badge);\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar reactIs_production_min = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: !0\n  });\n  var b = \"function\" === typeof Symbol && Symbol.for,\n      c = b ? Symbol.for(\"react.element\") : 60103,\n      d = b ? Symbol.for(\"react.portal\") : 60106,\n      e = b ? Symbol.for(\"react.fragment\") : 60107,\n      f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n      g = b ? Symbol.for(\"react.profiler\") : 60114,\n      h = b ? Symbol.for(\"react.provider\") : 60109,\n      k = b ? Symbol.for(\"react.context\") : 60110,\n      l = b ? Symbol.for(\"react.async_mode\") : 60111,\n      m = b ? Symbol.for(\"react.forward_ref\") : 60112,\n      n = b ? Symbol.for(\"react.placeholder\") : 60113;\n\n  function q(a) {\n    if (\"object\" === typeof a && null !== a) {\n      var p = a.$$typeof;\n\n      switch (p) {\n        case c:\n          switch (a = a.type, a) {\n            case l:\n            case e:\n            case g:\n            case f:\n              return a;\n\n            default:\n              switch (a = a && a.$$typeof, a) {\n                case k:\n                case m:\n                case h:\n                  return a;\n\n                default:\n                  return p;\n              }\n\n          }\n\n        case d:\n          return p;\n      }\n    }\n  }\n\n  exports.typeOf = q;\n  exports.AsyncMode = l;\n  exports.ContextConsumer = k;\n  exports.ContextProvider = h;\n  exports.Element = c;\n  exports.ForwardRef = m;\n  exports.Fragment = e;\n  exports.Profiler = g;\n  exports.Portal = d;\n  exports.StrictMode = f;\n\n  exports.isValidElementType = function (a) {\n    return \"string\" === typeof a || \"function\" === typeof a || a === e || a === l || a === g || a === f || a === n || \"object\" === typeof a && null !== a && (\"function\" === typeof a.then || a.$$typeof === h || a.$$typeof === k || a.$$typeof === m);\n  };\n\n  exports.isAsyncMode = function (a) {\n    return q(a) === l;\n  };\n\n  exports.isContextConsumer = function (a) {\n    return q(a) === k;\n  };\n\n  exports.isContextProvider = function (a) {\n    return q(a) === h;\n  };\n\n  exports.isElement = function (a) {\n    return \"object\" === typeof a && null !== a && a.$$typeof === c;\n  };\n\n  exports.isForwardRef = function (a) {\n    return q(a) === m;\n  };\n\n  exports.isFragment = function (a) {\n    return q(a) === e;\n  };\n\n  exports.isProfiler = function (a) {\n    return q(a) === g;\n  };\n\n  exports.isPortal = function (a) {\n    return q(a) === d;\n  };\n\n  exports.isStrictMode = function (a) {\n    return q(a) === f;\n  };\n});\nunwrapExports(reactIs_production_min);\nvar reactIs_production_min_1 = reactIs_production_min.typeOf;\nvar reactIs_production_min_2 = reactIs_production_min.AsyncMode;\nvar reactIs_production_min_3 = reactIs_production_min.ContextConsumer;\nvar reactIs_production_min_4 = reactIs_production_min.ContextProvider;\nvar reactIs_production_min_5 = reactIs_production_min.Element;\nvar reactIs_production_min_6 = reactIs_production_min.ForwardRef;\nvar reactIs_production_min_7 = reactIs_production_min.Fragment;\nvar reactIs_production_min_8 = reactIs_production_min.Profiler;\nvar reactIs_production_min_9 = reactIs_production_min.Portal;\nvar reactIs_production_min_10 = reactIs_production_min.StrictMode;\nvar reactIs_production_min_11 = reactIs_production_min.isValidElementType;\nvar reactIs_production_min_12 = reactIs_production_min.isAsyncMode;\nvar reactIs_production_min_13 = reactIs_production_min.isContextConsumer;\nvar reactIs_production_min_14 = reactIs_production_min.isContextProvider;\nvar reactIs_production_min_15 = reactIs_production_min.isElement;\nvar reactIs_production_min_16 = reactIs_production_min.isForwardRef;\nvar reactIs_production_min_17 = reactIs_production_min.isFragment;\nvar reactIs_production_min_18 = reactIs_production_min.isProfiler;\nvar reactIs_production_min_19 = reactIs_production_min.isPortal;\nvar reactIs_production_min_20 = reactIs_production_min.isStrictMode;\nvar reactIs_development = createCommonjsModule(function (module, exports) {\n  if (process.env.NODE_ENV !== \"production\") {\n    (function () {\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      }); // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n      // nor polyfill, then a plain number is used for performance.\n\n      var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\n      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n      var REACT_PLACEHOLDER_TYPE = hasSymbol ? Symbol.for('react.placeholder') : 0xead1;\n\n      function isValidElementType(type) {\n        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n        type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_PLACEHOLDER_TYPE || typeof type === 'object' && type !== null && (typeof type.then === 'function' || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n      }\n\n      function typeOf(object) {\n        if (typeof object === 'object' && object !== null) {\n          var $$typeof = object.$$typeof;\n\n          switch ($$typeof) {\n            case REACT_ELEMENT_TYPE:\n              var type = object.type;\n\n              switch (type) {\n                case REACT_ASYNC_MODE_TYPE:\n                case REACT_FRAGMENT_TYPE:\n                case REACT_PROFILER_TYPE:\n                case REACT_STRICT_MODE_TYPE:\n                  return type;\n\n                default:\n                  var $$typeofType = type && type.$$typeof;\n\n                  switch ($$typeofType) {\n                    case REACT_CONTEXT_TYPE:\n                    case REACT_FORWARD_REF_TYPE:\n                    case REACT_PROVIDER_TYPE:\n                      return $$typeofType;\n\n                    default:\n                      return $$typeof;\n                  }\n\n              }\n\n            case REACT_PORTAL_TYPE:\n              return $$typeof;\n          }\n        }\n\n        return undefined;\n      }\n\n      var AsyncMode = REACT_ASYNC_MODE_TYPE;\n      var ContextConsumer = REACT_CONTEXT_TYPE;\n      var ContextProvider = REACT_PROVIDER_TYPE;\n      var Element = REACT_ELEMENT_TYPE;\n      var ForwardRef = REACT_FORWARD_REF_TYPE;\n      var Fragment = REACT_FRAGMENT_TYPE;\n      var Profiler = REACT_PROFILER_TYPE;\n      var Portal = REACT_PORTAL_TYPE;\n      var StrictMode = REACT_STRICT_MODE_TYPE;\n\n      function isAsyncMode(object) {\n        return typeOf(object) === REACT_ASYNC_MODE_TYPE;\n      }\n\n      function isContextConsumer(object) {\n        return typeOf(object) === REACT_CONTEXT_TYPE;\n      }\n\n      function isContextProvider(object) {\n        return typeOf(object) === REACT_PROVIDER_TYPE;\n      }\n\n      function isElement(object) {\n        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }\n\n      function isForwardRef(object) {\n        return typeOf(object) === REACT_FORWARD_REF_TYPE;\n      }\n\n      function isFragment(object) {\n        return typeOf(object) === REACT_FRAGMENT_TYPE;\n      }\n\n      function isProfiler(object) {\n        return typeOf(object) === REACT_PROFILER_TYPE;\n      }\n\n      function isPortal(object) {\n        return typeOf(object) === REACT_PORTAL_TYPE;\n      }\n\n      function isStrictMode(object) {\n        return typeOf(object) === REACT_STRICT_MODE_TYPE;\n      }\n\n      exports.typeOf = typeOf;\n      exports.AsyncMode = AsyncMode;\n      exports.ContextConsumer = ContextConsumer;\n      exports.ContextProvider = ContextProvider;\n      exports.Element = Element;\n      exports.ForwardRef = ForwardRef;\n      exports.Fragment = Fragment;\n      exports.Profiler = Profiler;\n      exports.Portal = Portal;\n      exports.StrictMode = StrictMode;\n      exports.isValidElementType = isValidElementType;\n      exports.isAsyncMode = isAsyncMode;\n      exports.isContextConsumer = isContextConsumer;\n      exports.isContextProvider = isContextProvider;\n      exports.isElement = isElement;\n      exports.isForwardRef = isForwardRef;\n      exports.isFragment = isFragment;\n      exports.isProfiler = isProfiler;\n      exports.isPortal = isPortal;\n      exports.isStrictMode = isStrictMode;\n    })();\n  }\n});\nunwrapExports(reactIs_development);\nvar reactIs_development_1 = reactIs_development.typeOf;\nvar reactIs_development_2 = reactIs_development.AsyncMode;\nvar reactIs_development_3 = reactIs_development.ContextConsumer;\nvar reactIs_development_4 = reactIs_development.ContextProvider;\nvar reactIs_development_5 = reactIs_development.Element;\nvar reactIs_development_6 = reactIs_development.ForwardRef;\nvar reactIs_development_7 = reactIs_development.Fragment;\nvar reactIs_development_8 = reactIs_development.Profiler;\nvar reactIs_development_9 = reactIs_development.Portal;\nvar reactIs_development_10 = reactIs_development.StrictMode;\nvar reactIs_development_11 = reactIs_development.isValidElementType;\nvar reactIs_development_12 = reactIs_development.isAsyncMode;\nvar reactIs_development_13 = reactIs_development.isContextConsumer;\nvar reactIs_development_14 = reactIs_development.isContextProvider;\nvar reactIs_development_15 = reactIs_development.isElement;\nvar reactIs_development_16 = reactIs_development.isForwardRef;\nvar reactIs_development_17 = reactIs_development.isFragment;\nvar reactIs_development_18 = reactIs_development.isProfiler;\nvar reactIs_development_19 = reactIs_development.isPortal;\nvar reactIs_development_20 = reactIs_development.isStrictMode;\nvar reactIs = createCommonjsModule(function (module) {\n  if (process.env.NODE_ENV === 'production') {\n    module.exports = reactIs_production_min;\n  } else {\n    module.exports = reactIs_development;\n  }\n});\nvar elementType_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _createChainableTypeChecker2 = _interopRequireDefault(createChainableTypeChecker_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function elementType(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n\n    if (_react2.default.isValidElement(propValue)) {\n      return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`,expected an element type (a string ') + ', component class, or function component).');\n    }\n\n    if (!(0, reactIs.isValidElementType)(propValue)) {\n      return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + ', component class, or function component).');\n    }\n\n    return null;\n  }\n\n  exports.default = (0, _createChainableTypeChecker2.default)(elementType);\n  module.exports = exports['default'];\n});\nvar elementType = unwrapExports(elementType_1);\n/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\n\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) {\n      return f;\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nvar propTypes$4 = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  disabled: PropTypes.bool,\n  role: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * this is sort of silly but needed for Button\n   */\n  componentClass: elementType\n};\nvar defaultProps$4 = {\n  componentClass: 'a'\n};\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, MenuItems, etc.\n */\n\n\nvar SafeAnchor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = SafeAnchor.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        href = _this$props.href,\n        onClick = _this$props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        Component$$1 = _this$props2.componentClass,\n        disabled = _this$props2.disabled,\n        onKeyDown = _this$props2.onKeyDown,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"componentClass\", \"disabled\", \"onKeyDown\"]);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props.style = _extends({\n        pointerEvents: 'none'\n      }, props.style);\n    }\n\n    return React.createElement(Component$$1, _extends({}, props, {\n      onClick: this.handleClick,\n      onKeyDown: createChainedFunction(this.handleKeyDown, onKeyDown)\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nSafeAnchor.propTypes = propTypes$4;\nSafeAnchor.defaultProps = defaultProps$4;\nvar propTypes$5 = {\n  /**\n   * If set to true, renders `span` instead of `a`\n   */\n  active: PropTypes.bool,\n\n  /**\n   * `href` attribute for the inner `a` element\n   */\n  href: PropTypes.string,\n\n  /**\n   * `title` attribute for the inner `a` element\n   */\n  title: PropTypes.node,\n\n  /**\n   * `target` attribute for the inner `a` element\n   */\n  target: PropTypes.string\n};\nvar defaultProps$5 = {\n  active: false\n};\n\nvar BreadcrumbItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BreadcrumbItem, _React$Component);\n\n  function BreadcrumbItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = BreadcrumbItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        href = _this$props.href,\n        title = _this$props.title,\n        target = _this$props.target,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"href\", \"title\", \"target\", \"className\"]); // Don't try to render these props on non-active <span>.\n\n\n    var linkProps = {\n      href: href,\n      title: title,\n      target: target\n    };\n    return React.createElement(\"li\", {\n      className: classnames(className, {\n        active: active\n      })\n    }, active ? React.createElement(\"span\", props) : React.createElement(SafeAnchor, _extends({}, props, linkProps)));\n  };\n\n  return BreadcrumbItem;\n}(React.Component);\n\nBreadcrumbItem.propTypes = propTypes$5;\nBreadcrumbItem.defaultProps = defaultProps$5;\n\nvar Breadcrumb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Breadcrumb, _React$Component);\n\n  function Breadcrumb() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Breadcrumb.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"ol\", _extends({}, elementProps, {\n      role: \"navigation\",\n      \"aria-label\": \"breadcrumbs\",\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Breadcrumb;\n}(React.Component);\n\nBreadcrumb.Item = BreadcrumbItem;\nvar Breadcrumb$1 = bsClass('breadcrumb', Breadcrumb);\nvar propTypes$6 = {\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  onClick: PropTypes.func,\n  componentClass: elementType,\n  href: PropTypes.string,\n\n  /**\n   * Defines HTML button type attribute\n   * @defaultValue 'button'\n   */\n  type: PropTypes.oneOf(['button', 'reset', 'submit'])\n};\nvar defaultProps$6 = {\n  active: false,\n  block: false,\n  disabled: false\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.renderAnchor = function renderAnchor(elementProps, className) {\n    return React.createElement(SafeAnchor, _extends({}, elementProps, {\n      className: classnames(className, elementProps.disabled && 'disabled')\n    }));\n  };\n\n  _proto.renderButton = function renderButton(_ref, className) {\n    var componentClass = _ref.componentClass,\n        elementProps = _objectWithoutPropertiesLoose(_ref, [\"componentClass\"]);\n\n    var Component$$1 = componentClass || 'button';\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      type: elementProps.type || 'button',\n      className: className\n    }));\n  };\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        active = _this$props.active,\n        block = _this$props.block,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"block\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {\n      active: active\n    }, _extends2[prefix(bsProps, 'block')] = block, _extends2));\n\n    var fullClassName = classnames(className, classes);\n\n    if (elementProps.href) {\n      return this.renderAnchor(elementProps, fullClassName);\n    }\n\n    return this.renderButton(elementProps, fullClassName);\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes$6;\nButton.defaultProps = defaultProps$6;\nvar Button$1 = bsClass('btn', bsSizes([Size.LARGE, Size.SMALL, Size.XSMALL], bsStyles(values$1(State).concat([Style.DEFAULT, Style.PRIMARY, Style.LINK]), Style.DEFAULT, Button)));\nvar all_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = all;\n\n  var _createChainableTypeChecker2 = _interopRequireDefault(createChainableTypeChecker_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function all() {\n    for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n      validators[_key] = arguments[_key];\n    }\n\n    function allPropTypes() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var error = null;\n      validators.forEach(function (validator) {\n        if (error != null) {\n          return;\n        }\n\n        var result = validator.apply(undefined, args);\n\n        if (result != null) {\n          error = result;\n        }\n      });\n      return error;\n    }\n\n    return (0, _createChainableTypeChecker2.default)(allPropTypes);\n  }\n\n  module.exports = exports['default'];\n});\nvar all = unwrapExports(all_1);\nvar propTypes$7 = {\n  vertical: PropTypes.bool,\n  justified: PropTypes.bool,\n\n  /**\n   * Display block buttons; only useful when used with the \"vertical\" prop.\n   * @type {bool}\n   */\n  block: all(PropTypes.bool, function (_ref) {\n    var block = _ref.block,\n        vertical = _ref.vertical;\n    return block && !vertical ? new Error('`block` requires `vertical` to be set to have any effect') : null;\n  })\n};\nvar defaultProps$7 = {\n  block: false,\n  justified: false,\n  vertical: false\n};\n\nvar ButtonGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ButtonGroup, _React$Component);\n\n  function ButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ButtonGroup.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        block = _this$props.block,\n        justified = _this$props.justified,\n        vertical = _this$props.vertical,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"block\", \"justified\", \"vertical\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps)] = !vertical, _extends2[prefix(bsProps, 'vertical')] = vertical, _extends2[prefix(bsProps, 'justified')] = justified, _extends2[prefix(Button$1.defaultProps, 'block')] = block, _extends2));\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return ButtonGroup;\n}(React.Component);\n\nButtonGroup.propTypes = propTypes$7;\nButtonGroup.defaultProps = defaultProps$7;\nvar ButtonGroup$1 = bsClass('btn-group', ButtonGroup);\n\nvar ButtonToolbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ButtonToolbar, _React$Component);\n\n  function ButtonToolbar() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ButtonToolbar.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      role: \"toolbar\",\n      className: classnames(className, classes)\n    }));\n  };\n\n  return ButtonToolbar;\n}(React.Component);\n\nbsClass('btn-toolbar', ButtonToolbar);\nvar propTypes$8 = {\n  componentClass: elementType\n};\nvar defaultProps$8 = {\n  componentClass: 'div'\n};\n\nvar CarouselCaption =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CarouselCaption, _React$Component);\n\n  function CarouselCaption() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = CarouselCaption.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return CarouselCaption;\n}(React.Component);\n\nCarouselCaption.propTypes = propTypes$8;\nCarouselCaption.defaultProps = defaultProps$8;\nvar CarouselCaption$1 = bsClass('carousel-caption', CarouselCaption);\nvar inDOM = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n  module.exports = exports['default'];\n});\nvar canUseDOM = unwrapExports(inDOM);\nvar properties = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;\n\n  var _inDOM2 = _interopRequireDefault(inDOM);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var transform = 'transform';\n  var prefix = void 0,\n      transitionEnd = void 0,\n      animationEnd = void 0;\n  var transitionProperty = void 0,\n      transitionDuration = void 0,\n      transitionTiming = void 0,\n      transitionDelay = void 0;\n  var animationName = void 0,\n      animationDuration = void 0,\n      animationTiming = void 0,\n      animationDelay = void 0;\n\n  if (_inDOM2.default) {\n    var _getTransitionPropert = getTransitionProperties();\n\n    prefix = _getTransitionPropert.prefix;\n    exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n    exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n    exports.transform = transform = prefix + '-' + transform;\n    exports.transitionProperty = transitionProperty = prefix + '-transition-property';\n    exports.transitionDuration = transitionDuration = prefix + '-transition-duration';\n    exports.transitionDelay = transitionDelay = prefix + '-transition-delay';\n    exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';\n    exports.animationName = animationName = prefix + '-animation-name';\n    exports.animationDuration = animationDuration = prefix + '-animation-duration';\n    exports.animationTiming = animationTiming = prefix + '-animation-delay';\n    exports.animationDelay = animationDelay = prefix + '-animation-timing-function';\n  }\n\n  exports.transform = transform;\n  exports.transitionProperty = transitionProperty;\n  exports.transitionTiming = transitionTiming;\n  exports.transitionDelay = transitionDelay;\n  exports.transitionDuration = transitionDuration;\n  exports.transitionEnd = transitionEnd;\n  exports.animationName = animationName;\n  exports.animationDuration = animationDuration;\n  exports.animationTiming = animationTiming;\n  exports.animationDelay = animationDelay;\n  exports.animationEnd = animationEnd;\n  exports.default = {\n    transform: transform,\n    end: transitionEnd,\n    property: transitionProperty,\n    timing: transitionTiming,\n    delay: transitionDelay,\n    duration: transitionDuration\n  };\n\n  function getTransitionProperties() {\n    var style = document.createElement('div').style;\n    var vendorMap = {\n      O: function O(e) {\n        return 'o' + e.toLowerCase();\n      },\n      Moz: function Moz(e) {\n        return e.toLowerCase();\n      },\n      Webkit: function Webkit(e) {\n        return 'webkit' + e;\n      },\n      ms: function ms(e) {\n        return 'MS' + e;\n      }\n    };\n    var vendors = Object.keys(vendorMap);\n    var transitionEnd = void 0,\n        animationEnd = void 0;\n    var prefix = '';\n\n    for (var i = 0; i < vendors.length; i++) {\n      var vendor = vendors[i];\n\n      if (vendor + 'TransitionProperty' in style) {\n        prefix = '-' + vendor.toLowerCase();\n        transitionEnd = vendorMap[vendor]('TransitionEnd');\n        animationEnd = vendorMap[vendor]('AnimationEnd');\n        break;\n      }\n    }\n\n    if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n    if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n    style = null;\n    return {\n      animationEnd: animationEnd,\n      transitionEnd: transitionEnd,\n      prefix: prefix\n    };\n  }\n});\nunwrapExports(properties);\nvar properties_1 = properties.animationEnd;\nvar properties_2 = properties.animationDelay;\nvar properties_3 = properties.animationTiming;\nvar properties_4 = properties.animationDuration;\nvar properties_5 = properties.animationName;\nvar properties_6 = properties.transitionEnd;\nvar properties_7 = properties.transitionDuration;\nvar properties_8 = properties.transitionDelay;\nvar properties_9 = properties.transitionTiming;\nvar properties_10 = properties.transitionProperty;\nvar properties_11 = properties.transform;\nvar camelize_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = camelize;\n  var rHyphen = /-(.)/g;\n\n  function camelize(string) {\n    return string.replace(rHyphen, function (_, chr) {\n      return chr.toUpperCase();\n    });\n  }\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(camelize_1);\nvar camelizeStyle = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = camelizeStyleName;\n\n  var _camelize2 = _interopRequireDefault(camelize_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var msPattern = /^-ms-/;\n  /**\n   * Copyright 2014-2015, Facebook, Inc.\n   * All rights reserved.\n   * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js\n   */\n\n  function camelizeStyleName(string) {\n    return (0, _camelize2.default)(string.replace(msPattern, 'ms-'));\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(camelizeStyle);\nvar hyphenate_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = hyphenate;\n  var rUpper = /([A-Z])/g;\n\n  function hyphenate(string) {\n    return string.replace(rUpper, '-$1').toLowerCase();\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(hyphenate_1);\nvar hyphenateStyle = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = hyphenateStyleName;\n\n  var _hyphenate2 = _interopRequireDefault(hyphenate_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var msPattern = /^ms-/;\n  /**\n   * Copyright 2013-2014, Facebook, Inc.\n   * All rights reserved.\n   * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n   */\n\n  function hyphenateStyleName(string) {\n    return (0, _hyphenate2.default)(string).replace(msPattern, '-ms-');\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(hyphenateStyle);\nvar getComputedStyle = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _getComputedStyle;\n\n  var _camelizeStyle2 = _interopRequireDefault(camelizeStyle);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var rposition = /^(top|right|bottom|left)$/;\n  var rnumnonpx = /^([+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|))(?!px)[a-z%]+$/i;\n\n  function _getComputedStyle(node) {\n    if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');\n    var doc = node.ownerDocument;\n    return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : {\n      //ie 8 \"magic\" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72\n      getPropertyValue: function getPropertyValue(prop) {\n        var style = node.style;\n        prop = (0, _camelizeStyle2.default)(prop);\n        if (prop == 'float') prop = 'styleFloat';\n        var current = node.currentStyle[prop] || null;\n        if (current == null && style && style[prop]) current = style[prop];\n\n        if (rnumnonpx.test(current) && !rposition.test(prop)) {\n          // Remember the original values\n          var left = style.left;\n          var runStyle = node.runtimeStyle;\n          var rsLeft = runStyle && runStyle.left; // Put in the new values to get a computed value out\n\n          if (rsLeft) runStyle.left = node.currentStyle.left;\n          style.left = prop === 'fontSize' ? '1em' : current;\n          current = style.pixelLeft + 'px'; // Revert the changed values\n\n          style.left = left;\n          if (rsLeft) runStyle.left = rsLeft;\n        }\n\n        return current;\n      }\n    };\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(getComputedStyle);\nvar removeStyle_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = removeStyle;\n\n  function removeStyle(node, key) {\n    return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(removeStyle_1);\nvar isTransform_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isTransform;\n  var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\n\n  function isTransform(property) {\n    return !!(property && supportedTransforms.test(property));\n  }\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(isTransform_1);\nvar style_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = style;\n\n  var _camelizeStyle2 = _interopRequireDefault(camelizeStyle);\n\n  var _hyphenateStyle2 = _interopRequireDefault(hyphenateStyle);\n\n  var _getComputedStyle3 = _interopRequireDefault(getComputedStyle);\n\n  var _removeStyle2 = _interopRequireDefault(removeStyle_1);\n\n  var _isTransform2 = _interopRequireDefault(isTransform_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function style(node, property, value) {\n    var css = '';\n    var transforms = '';\n    var props = property;\n\n    if (typeof property === 'string') {\n      if (value === undefined) {\n        return node.style[(0, _camelizeStyle2.default)(property)] || (0, _getComputedStyle3.default)(node).getPropertyValue((0, _hyphenateStyle2.default)(property));\n      } else {\n        (props = {})[property] = value;\n      }\n    }\n\n    Object.keys(props).forEach(function (key) {\n      var value = props[key];\n\n      if (!value && value !== 0) {\n        (0, _removeStyle2.default)(node, (0, _hyphenateStyle2.default)(key));\n      } else if ((0, _isTransform2.default)(key)) {\n        transforms += key + '(' + value + ') ';\n      } else {\n        css += (0, _hyphenateStyle2.default)(key) + ': ' + value + ';';\n      }\n    });\n\n    if (transforms) {\n      css += properties.transform + ': ' + transforms + ';';\n    }\n\n    node.style.cssText += ';' + css;\n  }\n\n  module.exports = exports['default'];\n});\nvar css = unwrapExports(style_1);\nvar end = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _properties2 = _interopRequireDefault(properties);\n\n  var _style2 = _interopRequireDefault(style_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function onEnd(node, handler, duration) {\n    var fakeEvent = {\n      target: node,\n      currentTarget: node\n    },\n        backup;\n    if (!_properties2.default.end) duration = 0;else if (duration == null) duration = parseDuration(node) || 0;\n\n    if (_properties2.default.end) {\n      node.addEventListener(_properties2.default.end, done, false);\n      backup = setTimeout(function () {\n        return done(fakeEvent);\n      }, (duration || 100) * 1.5);\n    } else setTimeout(done.bind(null, fakeEvent), 0);\n\n    function done(event) {\n      if (event.target !== event.currentTarget) return;\n      clearTimeout(backup);\n      event.target.removeEventListener(_properties2.default.end, done);\n      handler.call(this);\n    }\n  }\n\n  onEnd._parseDuration = parseDuration;\n  exports.default = onEnd;\n\n  function parseDuration(node) {\n    var str = (0, _style2.default)(node, _properties2.default.duration),\n        mult = str.indexOf('ms') === -1 ? 1000 : 1;\n    return parseFloat(str) * mult;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(end);\nvar transition = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.properties = exports.end = undefined;\n\n  var _end2 = _interopRequireDefault(end);\n\n  var _properties2 = _interopRequireDefault(properties);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.end = _end2.default;\n  exports.properties = _properties2.default;\n  exports.default = {\n    end: _end2.default,\n    properties: _properties2.default\n  };\n});\nvar transition$1 = unwrapExports(transition);\nvar transition_1 = transition.properties;\nvar transition_2 = transition.end;\nvar propTypes$9 = {\n  direction: PropTypes.oneOf(['prev', 'next']),\n  onAnimateOutEnd: PropTypes.func,\n  active: PropTypes.bool,\n  animateIn: PropTypes.bool,\n  animateOut: PropTypes.bool,\n  index: PropTypes.number\n};\nvar defaultProps$9 = {\n  active: false,\n  animateIn: false,\n  animateOut: false\n};\n\nvar CarouselItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CarouselItem, _React$Component);\n\n  function CarouselItem(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleAnimateOutEnd = _this.handleAnimateOutEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      direction: null\n    };\n    _this.isUnmounted = false;\n    return _this;\n  }\n\n  var _proto = CarouselItem.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.active !== nextProps.active) {\n      this.setState({\n        direction: null\n      });\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    var active = this.props.active;\n    var prevActive = prevProps.active;\n\n    if (!active && prevActive) {\n      transition$1.end(ReactDOM.findDOMNode(this), this.handleAnimateOutEnd);\n    }\n\n    if (active !== prevActive) {\n      setTimeout(function () {\n        return _this2.startAnimation();\n      }, 20);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.isUnmounted = true;\n  };\n\n  _proto.handleAnimateOutEnd = function handleAnimateOutEnd() {\n    if (this.isUnmounted) {\n      return;\n    }\n\n    if (this.props.onAnimateOutEnd) {\n      this.props.onAnimateOutEnd(this.props.index);\n    }\n  };\n\n  _proto.startAnimation = function startAnimation() {\n    if (this.isUnmounted) {\n      return;\n    }\n\n    this.setState({\n      direction: this.props.direction === 'prev' ? 'right' : 'left'\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        direction = _this$props.direction,\n        active = _this$props.active,\n        animateIn = _this$props.animateIn,\n        animateOut = _this$props.animateOut,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"direction\", \"active\", \"animateIn\", \"animateOut\", \"className\"]);\n\n    delete props.onAnimateOutEnd;\n    delete props.index;\n    var classes = {\n      item: true,\n      active: active && !animateIn || animateOut\n    };\n\n    if (direction && active && animateIn) {\n      classes[direction] = true;\n    }\n\n    if (this.state.direction && (animateIn || animateOut)) {\n      classes[this.state.direction] = true;\n    }\n\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return CarouselItem;\n}(React.Component);\n\nCarouselItem.propTypes = propTypes$9;\nCarouselItem.defaultProps = defaultProps$9;\nvar propTypes$a = {\n  /**\n   * An icon name without \"glyphicon-\" prefix. See e.g. http://getbootstrap.com/components/#glyphicons\n   */\n  glyph: PropTypes.string.isRequired\n};\n\nvar Glyphicon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Glyphicon, _React$Component);\n\n  function Glyphicon() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Glyphicon.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        glyph = _this$props.glyph,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"glyph\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, glyph)] = true, _extends2));\n\n    return React.createElement(\"span\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Glyphicon;\n}(React.Component);\n\nGlyphicon.propTypes = propTypes$a;\nvar Glyphicon$1 = bsClass('glyphicon', Glyphicon); // TODO: Use uncontrollable.\n\nvar propTypes$b = {\n  slide: PropTypes.bool,\n  indicators: PropTypes.bool,\n\n  /**\n   * The amount of time to delay between automatically cycling an item.\n   * If `null`, carousel will not automatically cycle.\n   */\n  interval: PropTypes.number,\n  controls: PropTypes.bool,\n  pauseOnHover: PropTypes.bool,\n  wrap: PropTypes.bool,\n\n  /**\n   * Callback fired when the active item changes.\n   *\n   * ```js\n   * (eventKey: any, ?event: Object) => any\n   * ```\n   *\n   * If this callback takes two or more arguments, the second argument will\n   * be a persisted event object with `direction` set to the direction of the\n   * transition.\n   */\n  onSelect: PropTypes.func,\n  onSlideEnd: PropTypes.func,\n  activeIndex: PropTypes.number,\n  defaultActiveIndex: PropTypes.number,\n  direction: PropTypes.oneOf(['prev', 'next']),\n  prevIcon: PropTypes.node,\n\n  /**\n   * Label shown to screen readers only, can be used to show the previous element\n   * in the carousel.\n   * Set to null to deactivate.\n   */\n  prevLabel: PropTypes.string,\n  nextIcon: PropTypes.node,\n\n  /**\n   * Label shown to screen readers only, can be used to show the next element\n   * in the carousel.\n   * Set to null to deactivate.\n   */\n  nextLabel: PropTypes.string\n};\nvar defaultProps$a = {\n  slide: true,\n  interval: 5000,\n  pauseOnHover: true,\n  wrap: true,\n  indicators: true,\n  controls: true,\n  prevIcon: React.createElement(Glyphicon$1, {\n    glyph: \"chevron-left\"\n  }),\n  prevLabel: 'Previous',\n  nextIcon: React.createElement(Glyphicon$1, {\n    glyph: \"chevron-right\"\n  }),\n  nextLabel: 'Next'\n};\n\nvar Carousel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Carousel, _React$Component);\n\n  function Carousel(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleMouseOver = _this.handleMouseOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMouseOut = _this.handleMouseOut.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePrev = _this.handlePrev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNext = _this.handleNext.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleItemAnimateOutEnd = _this.handleItemAnimateOutEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var defaultActiveIndex = props.defaultActiveIndex;\n    _this.state = {\n      activeIndex: defaultActiveIndex != null ? defaultActiveIndex : 0,\n      previousActiveIndex: null,\n      direction: null\n    };\n    _this.isUnmounted = false;\n    return _this;\n  }\n\n  var _proto = Carousel.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.waitForNext();\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var activeIndex = this.getActiveIndex();\n\n    if (nextProps.activeIndex != null && nextProps.activeIndex !== activeIndex) {\n      clearTimeout(this.timeout);\n      this.setState({\n        previousActiveIndex: activeIndex,\n        direction: nextProps.direction != null ? nextProps.direction : this.getDirection(activeIndex, nextProps.activeIndex)\n      });\n    }\n\n    if (nextProps.activeIndex == null && this.state.activeIndex >= nextProps.children.length) {\n      this.setState({\n        activeIndex: 0,\n        previousActiveIndex: null,\n        direction: null\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    clearTimeout(this.timeout);\n    this.isUnmounted = true;\n  };\n\n  _proto.getActiveIndex = function getActiveIndex() {\n    var activeIndexProp = this.props.activeIndex;\n    return activeIndexProp != null ? activeIndexProp : this.state.activeIndex;\n  };\n\n  _proto.getDirection = function getDirection(prevIndex, index) {\n    if (prevIndex === index) {\n      return null;\n    }\n\n    return prevIndex > index ? 'prev' : 'next';\n  };\n\n  _proto.handleItemAnimateOutEnd = function handleItemAnimateOutEnd() {\n    var _this2 = this;\n\n    this.setState({\n      previousActiveIndex: null,\n      direction: null\n    }, function () {\n      _this2.waitForNext();\n\n      if (_this2.props.onSlideEnd) {\n        _this2.props.onSlideEnd();\n      }\n    });\n  };\n\n  _proto.handleMouseOut = function handleMouseOut() {\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  _proto.handleMouseOver = function handleMouseOver() {\n    if (this.props.pauseOnHover) {\n      this.pause();\n    }\n  };\n\n  _proto.handleNext = function handleNext(e) {\n    var index = this.getActiveIndex() + 1;\n    var count = ValidComponentChildren.count(this.props.children);\n\n    if (index > count - 1) {\n      if (!this.props.wrap) {\n        return;\n      }\n\n      index = 0;\n    }\n\n    this.select(index, e, 'next');\n  };\n\n  _proto.handlePrev = function handlePrev(e) {\n    var index = this.getActiveIndex() - 1;\n\n    if (index < 0) {\n      if (!this.props.wrap) {\n        return;\n      }\n\n      index = ValidComponentChildren.count(this.props.children) - 1;\n    }\n\n    this.select(index, e, 'prev');\n  }; // This might be a public API.\n\n\n  _proto.pause = function pause() {\n    this.isPaused = true;\n    clearTimeout(this.timeout);\n  }; // This might be a public API.\n\n\n  _proto.play = function play() {\n    this.isPaused = false;\n    this.waitForNext();\n  };\n\n  _proto.select = function select(index, e, direction) {\n    clearTimeout(this.timeout); // TODO: Is this necessary? Seems like the only risk is if the component\n    // unmounts while handleItemAnimateOutEnd fires.\n\n    if (this.isUnmounted) {\n      return;\n    }\n\n    var previousActiveIndex = this.props.slide ? this.getActiveIndex() : null;\n    direction = direction || this.getDirection(previousActiveIndex, index);\n    var onSelect = this.props.onSelect;\n\n    if (onSelect) {\n      if (onSelect.length > 1) {\n        // React SyntheticEvents are pooled, so we need to remove this event\n        // from the pool to add a custom property. To avoid unnecessarily\n        // removing objects from the pool, only do this when the listener\n        // actually wants the event.\n        if (e) {\n          e.persist();\n          e.direction = direction;\n        } else {\n          e = {\n            direction: direction\n          };\n        }\n\n        onSelect(index, e);\n      } else {\n        onSelect(index);\n      }\n    }\n\n    if (this.props.activeIndex == null && index !== previousActiveIndex) {\n      if (this.state.previousActiveIndex != null) {\n        // If currently animating don't activate the new index.\n        // TODO: look into queueing this canceled call and\n        // animating after the current animation has ended.\n        return;\n      }\n\n      this.setState({\n        activeIndex: index,\n        previousActiveIndex: previousActiveIndex,\n        direction: direction\n      });\n    }\n  };\n\n  _proto.waitForNext = function waitForNext() {\n    var _this$props = this.props,\n        slide = _this$props.slide,\n        interval = _this$props.interval,\n        activeIndexProp = _this$props.activeIndex;\n\n    if (!this.isPaused && slide && interval && activeIndexProp == null) {\n      this.timeout = setTimeout(this.handleNext, interval);\n    }\n  };\n\n  _proto.renderControls = function renderControls(properties) {\n    var wrap = properties.wrap,\n        children = properties.children,\n        activeIndex = properties.activeIndex,\n        prevIcon = properties.prevIcon,\n        nextIcon = properties.nextIcon,\n        bsProps = properties.bsProps,\n        prevLabel = properties.prevLabel,\n        nextLabel = properties.nextLabel;\n    var controlClassName = prefix(bsProps, 'control');\n    var count = ValidComponentChildren.count(children);\n    return [(wrap || activeIndex !== 0) && React.createElement(SafeAnchor, {\n      key: \"prev\",\n      className: classnames(controlClassName, 'left'),\n      onClick: this.handlePrev\n    }, prevIcon, prevLabel && React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, prevLabel)), (wrap || activeIndex !== count - 1) && React.createElement(SafeAnchor, {\n      key: \"next\",\n      className: classnames(controlClassName, 'right'),\n      onClick: this.handleNext\n    }, nextIcon, nextLabel && React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, nextLabel))];\n  };\n\n  _proto.renderIndicators = function renderIndicators(children, activeIndex, bsProps) {\n    var _this3 = this;\n\n    var indicators = [];\n    ValidComponentChildren.forEach(children, function (child, index) {\n      indicators.push(React.createElement(\"li\", {\n        key: index,\n        className: index === activeIndex ? 'active' : null,\n        onClick: function onClick(e) {\n          return _this3.select(index, e);\n        }\n      }), // Force whitespace between indicator elements. Bootstrap requires\n      // this for correct spacing of elements.\n      ' ');\n    });\n    return React.createElement(\"ol\", {\n      className: prefix(bsProps, 'indicators')\n    }, indicators);\n  };\n\n  _proto.render = function render() {\n    var _this4 = this;\n\n    var _this$props2 = this.props,\n        slide = _this$props2.slide,\n        indicators = _this$props2.indicators,\n        controls = _this$props2.controls,\n        wrap = _this$props2.wrap,\n        prevIcon = _this$props2.prevIcon,\n        prevLabel = _this$props2.prevLabel,\n        nextIcon = _this$props2.nextIcon,\n        nextLabel = _this$props2.nextLabel,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"slide\", \"indicators\", \"controls\", \"wrap\", \"prevIcon\", \"prevLabel\", \"nextIcon\", \"nextLabel\", \"className\", \"children\"]);\n\n    var _this$state = this.state,\n        previousActiveIndex = _this$state.previousActiveIndex,\n        direction = _this$state.direction;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['interval', 'pauseOnHover', 'onSelect', 'onSlideEnd', 'activeIndex', // Accessed via this.getActiveIndex().\n    'defaultActiveIndex', 'direction']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    var activeIndex = this.getActiveIndex();\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      slide: slide\n    });\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes),\n      onMouseOver: this.handleMouseOver,\n      onMouseOut: this.handleMouseOut\n    }), indicators && this.renderIndicators(children, activeIndex, bsProps), React.createElement(\"div\", {\n      className: prefix(bsProps, 'inner')\n    }, ValidComponentChildren.map(children, function (child, index) {\n      var active = index === activeIndex;\n      var previousActive = slide && index === previousActiveIndex;\n      return cloneElement(child, {\n        active: active,\n        index: index,\n        animateOut: previousActive,\n        animateIn: active && previousActiveIndex != null && slide,\n        direction: direction,\n        onAnimateOutEnd: previousActive ? _this4.handleItemAnimateOutEnd : null\n      });\n    })), controls && this.renderControls({\n      wrap: wrap,\n      children: children,\n      activeIndex: activeIndex,\n      prevIcon: prevIcon,\n      prevLabel: prevLabel,\n      nextIcon: nextIcon,\n      nextLabel: nextLabel,\n      bsProps: bsProps\n    }));\n  };\n\n  return Carousel;\n}(React.Component);\n\nCarousel.propTypes = propTypes$b;\nCarousel.defaultProps = defaultProps$a;\nCarousel.Caption = CarouselCaption$1;\nCarousel.Item = CarouselItem;\nbsClass('carousel', Carousel);\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function () {};\n\nif (__DEV__) {\n  warning = function (condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    }\n  };\n}\n\nvar warning_1 = warning;\nvar propTypes$c = {\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  title: PropTypes.string,\n\n  /**\n   * Only valid if `inline` is not set.\n   */\n  validationState: PropTypes.oneOf(['success', 'warning', 'error', null]),\n\n  /**\n   * Attaches a ref to the `<input>` element. Only functions can be used here.\n   *\n   * ```js\n   * <Checkbox inputRef={ref => { this.input = ref; }} />\n   * ```\n   */\n  inputRef: PropTypes.func\n};\nvar defaultProps$b = {\n  inline: false,\n  disabled: false,\n  title: ''\n};\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Checkbox, _React$Component);\n\n  function Checkbox() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        inline = _this$props.inline,\n        disabled = _this$props.disabled,\n        validationState = _this$props.validationState,\n        inputRef = _this$props.inputRef,\n        className = _this$props.className,\n        style = _this$props.style,\n        title = _this$props.title,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"inline\", \"disabled\", \"validationState\", \"inputRef\", \"className\", \"style\", \"title\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var input = React.createElement(\"input\", _extends({}, elementProps, {\n      ref: inputRef,\n      type: \"checkbox\",\n      disabled: disabled\n    }));\n\n    if (inline) {\n      var _classes2;\n\n      var _classes = (_classes2 = {}, _classes2[prefix(bsProps, 'inline')] = true, _classes2.disabled = disabled, _classes2); // Use a warning here instead of in propTypes to get better-looking\n      // generated documentation.\n\n\n      process.env.NODE_ENV !== \"production\" ? warning_1(!validationState, '`validationState` is ignored on `<Checkbox inline>`. To display ' + 'validation state on an inline checkbox, set `validationState` on a ' + 'parent `<FormGroup>` or other element instead.') : void 0;\n      return React.createElement(\"label\", {\n        className: classnames(className, _classes),\n        style: style,\n        title: title\n      }, input, children);\n    }\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      disabled: disabled\n    });\n\n    if (validationState) {\n      classes[\"has-\" + validationState] = true;\n    }\n\n    return React.createElement(\"div\", {\n      className: classnames(className, classes),\n      style: style\n    }, React.createElement(\"label\", {\n      title: title\n    }, input, children));\n  };\n\n  return Checkbox;\n}(React.Component);\n\nCheckbox.propTypes = propTypes$c;\nCheckbox.defaultProps = defaultProps$b;\nbsClass('checkbox', Checkbox);\n\nfunction capitalize(string) {\n  return \"\" + string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar propTypes$d = {\n  componentClass: elementType,\n\n  /**\n   * Apply clearfix\n   *\n   * on Extra small devices Phones\n   *\n   * adds class `visible-xs-block`\n   */\n  visibleXsBlock: PropTypes.bool,\n\n  /**\n   * Apply clearfix\n   *\n   * on Small devices Tablets\n   *\n   * adds class `visible-sm-block`\n   */\n  visibleSmBlock: PropTypes.bool,\n\n  /**\n   * Apply clearfix\n   *\n   * on Medium devices Desktops\n   *\n   * adds class `visible-md-block`\n   */\n  visibleMdBlock: PropTypes.bool,\n\n  /**\n   * Apply clearfix\n   *\n   * on Large devices Desktops\n   *\n   * adds class `visible-lg-block`\n   */\n  visibleLgBlock: PropTypes.bool\n};\nvar defaultProps$c = {\n  componentClass: 'div'\n};\n\nvar Clearfix =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Clearfix, _React$Component);\n\n  function Clearfix() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Clearfix.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    DEVICE_SIZES.forEach(function (size) {\n      var propName = \"visible\" + capitalize(size) + \"Block\";\n\n      if (elementProps[propName]) {\n        classes[\"visible-\" + size + \"-block\"] = true;\n      }\n\n      delete elementProps[propName];\n    });\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Clearfix;\n}(React.Component);\n\nClearfix.propTypes = propTypes$d;\nClearfix.defaultProps = defaultProps$c;\nbsClass('clearfix', Clearfix);\nvar propTypes$e = {\n  /**\n   * Uses `controlId` from `<FormGroup>` if not explicitly specified.\n   */\n  htmlFor: PropTypes.string,\n  srOnly: PropTypes.bool\n};\nvar defaultProps$d = {\n  srOnly: false\n};\nvar contextTypes = {\n  $bs_formGroup: PropTypes.object\n};\n\nvar ControlLabel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ControlLabel, _React$Component);\n\n  function ControlLabel() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlLabel.prototype;\n\n  _proto.render = function render() {\n    var formGroup = this.context.$bs_formGroup;\n    var controlId = formGroup && formGroup.controlId;\n\n    var _this$props = this.props,\n        _this$props$htmlFor = _this$props.htmlFor,\n        htmlFor = _this$props$htmlFor === void 0 ? controlId : _this$props$htmlFor,\n        srOnly = _this$props.srOnly,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"htmlFor\", \"srOnly\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    process.env.NODE_ENV !== \"production\" ? warning_1(controlId == null || htmlFor === controlId, '`controlId` is ignored on `<ControlLabel>` when `htmlFor` is specified.') : void 0;\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      'sr-only': srOnly\n    });\n\n    return React.createElement(\"label\", _extends({}, elementProps, {\n      htmlFor: htmlFor,\n      className: classnames(className, classes)\n    }));\n  };\n\n  return ControlLabel;\n}(React.Component);\n\nControlLabel.propTypes = propTypes$e;\nControlLabel.defaultProps = defaultProps$d;\nControlLabel.contextTypes = contextTypes;\nbsClass('control-label', ControlLabel);\nvar propTypes$f = {\n  componentClass: elementType,\n\n  /**\n   * The number of columns you wish to span\n   *\n   * for Extra small devices Phones (<768px)\n   *\n   * class-prefix `col-xs-`\n   */\n  xs: PropTypes.number,\n\n  /**\n   * The number of columns you wish to span\n   *\n   * for Small devices Tablets (â¥768px)\n   *\n   * class-prefix `col-sm-`\n   */\n  sm: PropTypes.number,\n\n  /**\n   * The number of columns you wish to span\n   *\n   * for Medium devices Desktops (â¥992px)\n   *\n   * class-prefix `col-md-`\n   */\n  md: PropTypes.number,\n\n  /**\n   * The number of columns you wish to span\n   *\n   * for Large devices Desktops (â¥1200px)\n   *\n   * class-prefix `col-lg-`\n   */\n  lg: PropTypes.number,\n\n  /**\n   * Hide column\n   *\n   * on Extra small devices Phones\n   *\n   * adds class `hidden-xs`\n   */\n  xsHidden: PropTypes.bool,\n\n  /**\n   * Hide column\n   *\n   * on Small devices Tablets\n   *\n   * adds class `hidden-sm`\n   */\n  smHidden: PropTypes.bool,\n\n  /**\n   * Hide column\n   *\n   * on Medium devices Desktops\n   *\n   * adds class `hidden-md`\n   */\n  mdHidden: PropTypes.bool,\n\n  /**\n   * Hide column\n   *\n   * on Large devices Desktops\n   *\n   * adds class `hidden-lg`\n   */\n  lgHidden: PropTypes.bool,\n\n  /**\n   * Move columns to the right\n   *\n   * for Extra small devices Phones\n   *\n   * class-prefix `col-xs-offset-`\n   */\n  xsOffset: PropTypes.number,\n\n  /**\n   * Move columns to the right\n   *\n   * for Small devices Tablets\n   *\n   * class-prefix `col-sm-offset-`\n   */\n  smOffset: PropTypes.number,\n\n  /**\n   * Move columns to the right\n   *\n   * for Medium devices Desktops\n   *\n   * class-prefix `col-md-offset-`\n   */\n  mdOffset: PropTypes.number,\n\n  /**\n   * Move columns to the right\n   *\n   * for Large devices Desktops\n   *\n   * class-prefix `col-lg-offset-`\n   */\n  lgOffset: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Extra small devices Phones\n   *\n   * class-prefix `col-xs-push-`\n   */\n  xsPush: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Small devices Tablets\n   *\n   * class-prefix `col-sm-push-`\n   */\n  smPush: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Medium devices Desktops\n   *\n   * class-prefix `col-md-push-`\n   */\n  mdPush: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Large devices Desktops\n   *\n   * class-prefix `col-lg-push-`\n   */\n  lgPush: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Extra small devices Phones\n   *\n   * class-prefix `col-xs-pull-`\n   */\n  xsPull: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Small devices Tablets\n   *\n   * class-prefix `col-sm-pull-`\n   */\n  smPull: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Medium devices Desktops\n   *\n   * class-prefix `col-md-pull-`\n   */\n  mdPull: PropTypes.number,\n\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Large devices Desktops\n   *\n   * class-prefix `col-lg-pull-`\n   */\n  lgPull: PropTypes.number\n};\nvar defaultProps$e = {\n  componentClass: 'div'\n};\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = [];\n    DEVICE_SIZES.forEach(function (size) {\n      function popProp(propSuffix, modifier) {\n        var propName = \"\" + size + propSuffix;\n        var propValue = elementProps[propName];\n\n        if (propValue != null) {\n          classes.push(prefix(bsProps, \"\" + size + modifier + \"-\" + propValue));\n        }\n\n        delete elementProps[propName];\n      }\n\n      popProp('', '');\n      popProp('Offset', '-offset');\n      popProp('Push', '-push');\n      popProp('Pull', '-pull');\n      var hiddenPropName = size + \"Hidden\";\n\n      if (elementProps[hiddenPropName]) {\n        classes.push(\"hidden-\" + size);\n      }\n\n      delete elementProps[hiddenPropName];\n    });\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.propTypes = propTypes$f;\nCol.defaultProps = defaultProps$e;\nvar Col$1 = bsClass('col', Col);\n\nvar _stringWs = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\nvar space = '[' + _stringWs + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n\n  var FORCE = _fails(function () {\n    return !!_stringWs[KEY]() || non[KEY]() != non;\n  });\n\n  var fn = exp[KEY] = FORCE ? exec(trim) : _stringWs[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n\n  _export(_export.P + _export.F * FORCE, 'String', exp);\n}; // 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\n\n\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(_defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nvar _stringTrim = exporter;\nvar $parseInt = _global.parseInt;\nvar $trim = _stringTrim.trim;\nvar hex = /^[-+]?0[xX]/;\n\nvar _parseInt = $parseInt(_stringWs + '08') !== 8 || $parseInt(_stringWs + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, radix >>> 0 || (hex.test(string) ? 16 : 10));\n} : $parseInt; // 18.2.5 parseInt(string, radix)\n\n\n_export(_export.G + _export.F * (parseInt != _parseInt), {\n  parseInt: _parseInt\n});\n\nvar _parseInt$1 = _core.parseInt;\nvar _parseInt$2 = _parseInt$1;\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  } // Binding \"this\" is important for shallow renderer support.\n\n\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n} // React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\n\n\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component$$1) {\n  var prototype = Component$$1.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (typeof Component$$1.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component$$1;\n  } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n\n\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component$$1.displayName || Component$$1.name;\n    var newApiName = typeof Component$$1.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  } // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n\n\n  if (typeof Component$$1.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  } // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n\n\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component$$1;\n}\n\nvar reactLifecyclesCompat_es =\n/*#__PURE__*/\nObject.freeze({\n  polyfill: polyfill\n});\nvar PropTypes$1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.transitionTimeout = transitionTimeout;\n  exports.classNamesShape = exports.timeoutsShape = void 0;\n\n  var _propTypes = _interopRequireDefault(PropTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function transitionTimeout(transitionType) {\n    var timeoutPropName = 'transition' + transitionType + 'Timeout';\n    var enabledPropName = 'transition' + transitionType;\n    return function (props) {\n      // If the transition is enabled\n      if (props[enabledPropName]) {\n        // If no timeout duration is provided\n        if (props[timeoutPropName] == null) {\n          return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.'); // If the duration isn't a number\n        } else if (typeof props[timeoutPropName] !== 'number') {\n          return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n        }\n      }\n\n      return null;\n    };\n  }\n\n  var timeoutsShape = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  }).isRequired]);\n\n  exports.timeoutsShape = timeoutsShape;\n\n  var classNamesShape = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n    enter: _propTypes.default.string,\n    exit: _propTypes.default.string,\n    active: _propTypes.default.string\n  }), _propTypes.default.shape({\n    enter: _propTypes.default.string,\n    enterDone: _propTypes.default.string,\n    enterActive: _propTypes.default.string,\n    exit: _propTypes.default.string,\n    exitDone: _propTypes.default.string,\n    exitActive: _propTypes.default.string\n  })]);\n\n  exports.classNamesShape = classNamesShape;\n});\nunwrapExports(PropTypes$1);\nvar PropTypes_1 = PropTypes$1.transitionTimeout;\nvar PropTypes_2 = PropTypes$1.classNamesShape;\nvar PropTypes_3 = PropTypes$1.timeoutsShape;\nvar Transition_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\n  var PropTypes$$1 = _interopRequireWildcard(PropTypes);\n\n  var _react = _interopRequireDefault(React);\n\n  var _reactDom = _interopRequireDefault(ReactDOM);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n            if (desc.get || desc.set) {\n              Object.defineProperty(newObj, key, desc);\n            } else {\n              newObj[key] = obj[key];\n            }\n          }\n        }\n      }\n\n      newObj.default = obj;\n      return newObj;\n    }\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  var UNMOUNTED = 'unmounted';\n  exports.UNMOUNTED = UNMOUNTED;\n  var EXITED = 'exited';\n  exports.EXITED = EXITED;\n  var ENTERING = 'entering';\n  exports.ENTERING = ENTERING;\n  var ENTERED = 'entered';\n  exports.ENTERED = ENTERED;\n  var EXITING = 'exiting';\n  /**\n   * The Transition component lets you describe a transition from one component\n   * state to another _over time_ with a simple declarative API. Most commonly\n   * it's used to animate the mounting and unmounting of a component, but can also\n   * be used to describe in-place transition states as well.\n   *\n   * By default the `Transition` component does not alter the behavior of the\n   * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n   * It's up to you to give meaning and effect to those states. For example we can\n   * add styles to a component when it enters or exits:\n   *\n   * ```jsx\n   * import Transition from 'react-transition-group/Transition';\n   *\n   * const duration = 300;\n   *\n   * const defaultStyle = {\n   *   transition: `opacity ${duration}ms ease-in-out`,\n   *   opacity: 0,\n   * }\n   *\n   * const transitionStyles = {\n   *   entering: { opacity: 0 },\n   *   entered:  { opacity: 1 },\n   * };\n   *\n   * const Fade = ({ in: inProp }) => (\n   *   <Transition in={inProp} timeout={duration}>\n   *     {(state) => (\n   *       <div style={{\n   *         ...defaultStyle,\n   *         ...transitionStyles[state]\n   *       }}>\n   *         I'm a fade Transition!\n   *       </div>\n   *     )}\n   *   </Transition>\n   * );\n   * ```\n   *\n   * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n   * What it does do is track transition states over time so you can update the\n   * component (such as by adding styles or classes) when it changes states.\n   *\n   * There are 4 main states a Transition can be in:\n   *  - `'entering'`\n   *  - `'entered'`\n   *  - `'exiting'`\n   *  - `'exited'`\n   *\n   * Transition state is toggled via the `in` prop. When `true` the component begins the\n   * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n   * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n   * it's complete. Let's take the following example:\n   *\n   * ```jsx\n   * state = { in: false };\n   *\n   * toggleEnterState = () => {\n   *   this.setState({ in: true });\n   * }\n   *\n   * render() {\n   *   return (\n   *     <div>\n   *       <Transition in={this.state.in} timeout={500} />\n   *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n   *     </div>\n   *   );\n   * }\n   * ```\n   *\n   * When the button is clicked the component will shift to the `'entering'` state and\n   * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.\n   *\n   * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n   *\n   * ## Timing\n   *\n   * Timing is often the trickiest part of animation, mistakes can result in slight delays\n   * that are hard to pin down. A common example is when you want to add an exit transition,\n   * you should set the desired final styles when the state is `'exiting'`. That's when the\n   * transition to those styles will start and, if you matched the `timeout` prop with the\n   * CSS Transition duration, it will end exactly when the state changes to `'exited'`.\n   *\n   * > **Note**: For simpler transitions the `Transition` component might be enough, but\n   * > take into account that it's platform-agnostic, while the `CSSTransition` component\n   * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n   * > in order to make more complex transitions more predictable. For example, even though\n   * > classes `example-enter` and `example-enter-active` are applied immediately one after\n   * > another, you can still transition from one to the other because of the forced reflow\n   * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)\n   * > for more info). Take this into account when choosing between `Transition` and\n   * > `CSSTransition`.\n   */\n\n  exports.EXITING = EXITING;\n\n  var Transition =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Transition, _React$Component);\n\n    function Transition(props, context) {\n      var _this;\n\n      _this = _React$Component.call(this, props, context) || this;\n      var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n      var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n      var initialStatus;\n      _this.appearStatus = null;\n\n      if (props.in) {\n        if (appear) {\n          initialStatus = EXITED;\n          _this.appearStatus = ENTERING;\n        } else {\n          initialStatus = ENTERED;\n        }\n      } else {\n        if (props.unmountOnExit || props.mountOnEnter) {\n          initialStatus = UNMOUNTED;\n        } else {\n          initialStatus = EXITED;\n        }\n      }\n\n      _this.state = {\n        status: initialStatus\n      };\n      _this.nextCallback = null;\n      return _this;\n    }\n\n    var _proto = Transition.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      return {\n        transitionGroup: null // allows for nested Transitions\n\n      };\n    };\n\n    Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n      var nextIn = _ref.in;\n\n      if (nextIn && prevState.status === UNMOUNTED) {\n        return {\n          status: EXITED\n        };\n      }\n\n      return null;\n    }; // getSnapshotBeforeUpdate(prevProps) {\n    //   let nextStatus = null\n    //   if (prevProps !== this.props) {\n    //     const { status } = this.state\n    //     if (this.props.in) {\n    //       if (status !== ENTERING && status !== ENTERED) {\n    //         nextStatus = ENTERING\n    //       }\n    //     } else {\n    //       if (status === ENTERING || status === ENTERED) {\n    //         nextStatus = EXITING\n    //       }\n    //     }\n    //   }\n    //   return { nextStatus }\n    // }\n\n\n    _proto.componentDidMount = function componentDidMount() {\n      this.updateStatus(true, this.appearStatus);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      var nextStatus = null;\n\n      if (prevProps !== this.props) {\n        var status = this.state.status;\n\n        if (this.props.in) {\n          if (status !== ENTERING && status !== ENTERED) {\n            nextStatus = ENTERING;\n          }\n        } else {\n          if (status === ENTERING || status === ENTERED) {\n            nextStatus = EXITING;\n          }\n        }\n      }\n\n      this.updateStatus(false, nextStatus);\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.cancelNextCallback();\n    };\n\n    _proto.getTimeouts = function getTimeouts() {\n      var timeout = this.props.timeout;\n      var exit, enter, appear;\n      exit = enter = appear = timeout;\n\n      if (timeout != null && typeof timeout !== 'number') {\n        exit = timeout.exit;\n        enter = timeout.enter;\n        appear = timeout.appear;\n      }\n\n      return {\n        exit: exit,\n        enter: enter,\n        appear: appear\n      };\n    };\n\n    _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n      if (mounting === void 0) {\n        mounting = false;\n      }\n\n      if (nextStatus !== null) {\n        // nextStatus will always be ENTERING or EXITING.\n        this.cancelNextCallback();\n\n        var node = _reactDom.default.findDOMNode(this);\n\n        if (nextStatus === ENTERING) {\n          this.performEnter(node, mounting);\n        } else {\n          this.performExit(node);\n        }\n      } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n        this.setState({\n          status: UNMOUNTED\n        });\n      }\n    };\n\n    _proto.performEnter = function performEnter(node, mounting) {\n      var _this2 = this;\n\n      var enter = this.props.enter;\n      var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n      var timeouts = this.getTimeouts(); // no enter animation skip right to ENTERED\n      // if we are mounting and running this it means appear _must_ be set\n\n      if (!mounting && !enter) {\n        this.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node);\n        });\n        return;\n      }\n\n      this.props.onEnter(node, appearing);\n      this.safeSetState({\n        status: ENTERING\n      }, function () {\n        _this2.props.onEntering(node, appearing); // FIXME: appear timeout?\n\n\n        _this2.onTransitionEnd(node, timeouts.enter, function () {\n          _this2.safeSetState({\n            status: ENTERED\n          }, function () {\n            _this2.props.onEntered(node, appearing);\n          });\n        });\n      });\n    };\n\n    _proto.performExit = function performExit(node) {\n      var _this3 = this;\n\n      var exit = this.props.exit;\n      var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n      if (!exit) {\n        this.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n        return;\n      }\n\n      this.props.onExit(node);\n      this.safeSetState({\n        status: EXITING\n      }, function () {\n        _this3.props.onExiting(node);\n\n        _this3.onTransitionEnd(node, timeouts.exit, function () {\n          _this3.safeSetState({\n            status: EXITED\n          }, function () {\n            _this3.props.onExited(node);\n          });\n        });\n      });\n    };\n\n    _proto.cancelNextCallback = function cancelNextCallback() {\n      if (this.nextCallback !== null) {\n        this.nextCallback.cancel();\n        this.nextCallback = null;\n      }\n    };\n\n    _proto.safeSetState = function safeSetState(nextState, callback) {\n      // This shouldn't be necessary, but there are weird race conditions with\n      // setState callbacks and unmounting in testing, so always make sure that\n      // we can cancel any pending setState callbacks after we unmount.\n      callback = this.setNextCallback(callback);\n      this.setState(nextState, callback);\n    };\n\n    _proto.setNextCallback = function setNextCallback(callback) {\n      var _this4 = this;\n\n      var active = true;\n\n      this.nextCallback = function (event) {\n        if (active) {\n          active = false;\n          _this4.nextCallback = null;\n          callback(event);\n        }\n      };\n\n      this.nextCallback.cancel = function () {\n        active = false;\n      };\n\n      return this.nextCallback;\n    };\n\n    _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n      this.setNextCallback(handler);\n\n      if (node) {\n        if (this.props.addEndListener) {\n          this.props.addEndListener(node, this.nextCallback);\n        }\n\n        if (timeout != null) {\n          setTimeout(this.nextCallback, timeout);\n        }\n      } else {\n        setTimeout(this.nextCallback, 0);\n      }\n    };\n\n    _proto.render = function render() {\n      var status = this.state.status;\n\n      if (status === UNMOUNTED) {\n        return null;\n      }\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n      delete childProps.in;\n      delete childProps.mountOnEnter;\n      delete childProps.unmountOnExit;\n      delete childProps.appear;\n      delete childProps.enter;\n      delete childProps.exit;\n      delete childProps.timeout;\n      delete childProps.addEndListener;\n      delete childProps.onEnter;\n      delete childProps.onEntering;\n      delete childProps.onEntered;\n      delete childProps.onExit;\n      delete childProps.onExiting;\n      delete childProps.onExited;\n\n      if (typeof children === 'function') {\n        return children(status, childProps);\n      }\n\n      var child = _react.default.Children.only(children);\n\n      return _react.default.cloneElement(child, childProps);\n    };\n\n    return Transition;\n  }(_react.default.Component);\n\n  Transition.contextTypes = {\n    transitionGroup: PropTypes$$1.object\n  };\n  Transition.childContextTypes = {\n    transitionGroup: function transitionGroup() {}\n  };\n  Transition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n    /**\n     * A `function` child can be used instead of a React element.\n     * This function is called with the current transition status\n     * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used\n     * to apply context specific props to a component.\n     *\n     * ```jsx\n     * <Transition timeout={150}>\n     *   {(status) => (\n     *     <MyComponent className={`fade fade-${status}`} />\n     *   )}\n     * </Transition>\n     * ```\n     */\n    children: PropTypes$$1.oneOfType([PropTypes$$1.func.isRequired, PropTypes$$1.element.isRequired]).isRequired,\n\n    /**\n     * Show the component; triggers the enter or exit states\n     */\n    in: PropTypes$$1.bool,\n\n    /**\n     * By default the child component is mounted immediately along with\n     * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n     * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n     * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n     */\n    mountOnEnter: PropTypes$$1.bool,\n\n    /**\n     * By default the child component stays mounted after it reaches the `'exited'` state.\n     * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n     */\n    unmountOnExit: PropTypes$$1.bool,\n\n    /**\n     * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n     * If you want to transition on the first mount set `appear` to `true`, and the\n     * component will transition in as soon as the `<Transition>` mounts.\n     *\n     * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n     */\n    appear: PropTypes$$1.bool,\n\n    /**\n     * Enable or disable enter transitions.\n     */\n    enter: PropTypes$$1.bool,\n\n    /**\n     * Enable or disable exit transitions.\n     */\n    exit: PropTypes$$1.bool,\n\n    /**\n     * The duration of the transition, in milliseconds.\n     * Required unless `addEndListener` is provided\n     *\n     * You may specify a single timeout for all transitions like: `timeout={500}`,\n     * or individually like:\n     *\n     * ```jsx\n     * timeout={{\n     *  enter: 300,\n     *  exit: 500,\n     * }}\n     * ```\n     *\n     * @type {number | { enter?: number, exit?: number }}\n     */\n    timeout: function timeout(props) {\n      var pt = process.env.NODE_ENV !== \"production\" ? PropTypes$1.timeoutsShape : {};\n      if (!props.addEndListener) pt = pt.isRequired;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return pt.apply(void 0, [props].concat(args));\n    },\n\n    /**\n     * Add a custom transition end trigger. Called with the transitioning\n     * DOM node and a `done` callback. Allows for more fine grained transition end\n     * logic. **Note:** Timeouts are still used as a fallback if provided.\n     *\n     * ```jsx\n     * addEndListener={(node, done) => {\n     *   // use the css transitionend event to mark the finish of a transition\n     *   node.addEventListener('transitionend', done, false);\n     * }}\n     * ```\n     */\n    addEndListener: PropTypes$$1.func,\n\n    /**\n     * Callback fired before the \"entering\" status is applied. An extra parameter\n     * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n     *\n     * @type Function(node: HtmlElement, isAppearing: bool) -> void\n     */\n    onEnter: PropTypes$$1.func,\n\n    /**\n     * Callback fired after the \"entering\" status is applied. An extra parameter\n     * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n     *\n     * @type Function(node: HtmlElement, isAppearing: bool)\n     */\n    onEntering: PropTypes$$1.func,\n\n    /**\n     * Callback fired after the \"entered\" status is applied. An extra parameter\n     * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n     *\n     * @type Function(node: HtmlElement, isAppearing: bool) -> void\n     */\n    onEntered: PropTypes$$1.func,\n\n    /**\n     * Callback fired before the \"exiting\" status is applied.\n     *\n     * @type Function(node: HtmlElement) -> void\n     */\n    onExit: PropTypes$$1.func,\n\n    /**\n     * Callback fired after the \"exiting\" status is applied.\n     *\n     * @type Function(node: HtmlElement) -> void\n     */\n    onExiting: PropTypes$$1.func,\n\n    /**\n     * Callback fired after the \"exited\" status is applied.\n     *\n     * @type Function(node: HtmlElement) -> void\n     */\n    onExited: PropTypes$$1.func // Name the function so it is clearer in the documentation\n\n  } : {};\n\n  function noop() {}\n\n  Transition.defaultProps = {\n    in: false,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    enter: true,\n    exit: true,\n    onEnter: noop,\n    onEntering: noop,\n    onEntered: noop,\n    onExit: noop,\n    onExiting: noop,\n    onExited: noop\n  };\n  Transition.UNMOUNTED = 0;\n  Transition.EXITED = 1;\n  Transition.ENTERING = 2;\n  Transition.ENTERED = 3;\n  Transition.EXITING = 4;\n\n  var _default = (0, reactLifecyclesCompat_es.polyfill)(Transition);\n\n  exports.default = _default;\n});\nvar Transition = unwrapExports(Transition_1);\nvar Transition_2 = Transition_1.EXITING;\nvar Transition_3 = Transition_1.ENTERED;\nvar Transition_4 = Transition_1.ENTERING;\nvar Transition_5 = Transition_1.EXITED;\nvar Transition_6 = Transition_1.UNMOUNTED;\n\nvar _collapseStyles;\n\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n}; // reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\n\nfunction triggerBrowserReflow(node) {\n  node.offsetHeight; // eslint-disable-line no-unused-expressions\n}\n\nfunction getDimensionValue(dimension, elem) {\n  var value = elem[\"offset\" + capitalize(dimension)];\n  var margins = MARGINS[dimension];\n  return value + _parseInt$2(css(elem, margins[0]), 10) + _parseInt$2(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[Transition_5] = 'collapse', _collapseStyles[Transition_2] = 'collapsing', _collapseStyles[Transition_4] = 'collapsing', _collapseStyles[Transition_3] = 'collapse in', _collapseStyles);\nvar propTypes$g = {\n  /**\n   * Show the component; triggers the expand or collapse animation\n   */\n  in: PropTypes.bool,\n\n  /**\n   * Wait until the first \"enter\" transition to mount the component (add it to the DOM)\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * Unmount the component (remove it from the DOM) when it is collapsed\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Run the expand animation when the component mounts, if it is initially\n   * shown\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Duration of the collapse animation in milliseconds, to ensure that\n   * finishing callbacks are fired even if the original browser transition end\n   * events are canceled\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * Callback fired before the component expands\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the component starts to expand\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the component has expanded\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the component collapses\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the component starts to collapse\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the component has collapsed\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * The dimension used when collapsing, or a function that returns the\n   * dimension\n   *\n   * _Note: Bootstrap only partially supports 'width'!\n   * You will need to supply your own CSS animation for the `.width` CSS class._\n   */\n  dimension: PropTypes.oneOfType([PropTypes.oneOf(['height', 'width']), PropTypes.func]),\n\n  /**\n   * Function that returns the height or width of the animating DOM node\n   *\n   * Allows for providing some custom logic for how much the Collapse component\n   * should animate in its specified dimension. Called with the current\n   * dimension prop value and the DOM node.\n   */\n  getDimensionValue: PropTypes.func,\n\n  /**\n   * ARIA role of collapsible element\n   */\n  role: PropTypes.string\n};\nvar defaultProps$f = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  dimension: 'height',\n  getDimensionValue: getDimensionValue\n};\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Collapse, _React$Component);\n\n  function Collapse() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleEnter = function (elem) {\n      elem.style[_this.getDimension()] = '0';\n    };\n\n    _this.handleEntering = function (elem) {\n      var dimension = _this.getDimension();\n\n      elem.style[dimension] = _this._getScrollDimensionValue(elem, dimension);\n    };\n\n    _this.handleEntered = function (elem) {\n      elem.style[_this.getDimension()] = null;\n    };\n\n    _this.handleExit = function (elem) {\n      var dimension = _this.getDimension();\n\n      elem.style[dimension] = _this.props.getDimensionValue(dimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    };\n\n    _this.handleExiting = function (elem) {\n      elem.style[_this.getDimension()] = '0';\n    };\n\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.getDimension = function getDimension() {\n    return typeof this.props.dimension === 'function' ? this.props.dimension() : this.props.dimension;\n  }; // for testing\n\n\n  _proto._getScrollDimensionValue = function _getScrollDimensionValue(elem, dimension) {\n    return elem[\"scroll\" + capitalize(dimension)] + \"px\";\n  };\n  /* -- Expanding -- */\n\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        onEnter = _this$props.onEnter,\n        onEntering = _this$props.onEntering,\n        onEntered = _this$props.onEntered,\n        onExit = _this$props.onExit,\n        onExiting = _this$props.onExiting,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\"]);\n\n    delete props.dimension;\n    delete props.getDimensionValue;\n    var handleEnter = createChainedFunction(this.handleEnter, onEnter);\n    var handleEntering = createChainedFunction(this.handleEntering, onEntering);\n    var handleEntered = createChainedFunction(this.handleEntered, onEntered);\n    var handleExit = createChainedFunction(this.handleExit, onExit);\n    var handleExiting = createChainedFunction(this.handleExiting, onExiting);\n    return React.createElement(Transition, _extends({}, props, {\n      \"aria-expanded\": props.role ? props.in : null,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: handleEntered,\n      onExit: handleExit,\n      onExiting: handleExiting\n    }), function (state, innerProps) {\n      return React.cloneElement(children, _extends({}, innerProps, {\n        className: classnames(className, children.props.className, collapseStyles[state], _this2.getDimension() === 'width' && 'width')\n      }));\n    });\n  };\n\n  return Collapse;\n}(React.Component);\n\nCollapse.propTypes = propTypes$g;\nCollapse.defaultProps = defaultProps$f;\nvar ownerDocument_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ownerDocument;\n\n  function ownerDocument(node) {\n    return node && node.ownerDocument || document;\n  }\n\n  module.exports = exports[\"default\"];\n});\nvar ownerDocument = unwrapExports(ownerDocument_1);\nvar activeElement_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = activeElement;\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function activeElement() {\n    var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _ownerDocument2.default)();\n\n    try {\n      return doc.activeElement;\n    } catch (e) {\n      /* ie throws if no active element */\n    }\n  }\n\n  module.exports = exports['default'];\n});\nvar activeElement = unwrapExports(activeElement_1);\nvar contains = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _inDOM2 = _interopRequireDefault(inDOM);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.default = function () {\n    // HTML DOM and SVG DOM may have different support levels,\n    // so we need to check on context instead of a document root element.\n    return _inDOM2.default ? function (context, node) {\n      if (context.contains) {\n        return context.contains(node);\n      } else if (context.compareDocumentPosition) {\n        return context === node || !!(context.compareDocumentPosition(node) & 16);\n      } else {\n        return fallback(context, node);\n      }\n    } : fallback;\n  }();\n\n  function fallback(context, node) {\n    if (node) do {\n      if (node === context) return true;\n    } while (node = node.parentNode);\n    return false;\n  }\n\n  module.exports = exports['default'];\n});\nvar contains$1 = unwrapExports(contains);\nvar keycode = createCommonjsModule(function (module, exports) {\n  // Source: http://jsfiddle.net/vWx8V/\n  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n  /**\n   * Conenience method returns corresponding value for given keyName or keyCode.\n   *\n   * @param {Mixed} keyCode {Number} or keyName {String}\n   * @return {Mixed}\n   * @api public\n   */\n  function keyCode(searchInput) {\n    // Keyboard Events\n    if (searchInput && 'object' === typeof searchInput) {\n      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n      if (hasKeyCode) searchInput = hasKeyCode;\n    } // Numbers\n\n\n    if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n    var search = String(searchInput); // check codes\n\n    var foundNamedKey = codes[search.toLowerCase()];\n    if (foundNamedKey) return foundNamedKey; // check aliases\n\n    var foundNamedKey = aliases[search.toLowerCase()];\n    if (foundNamedKey) return foundNamedKey; // weird character?\n\n    if (search.length === 1) return search.charCodeAt(0);\n    return undefined;\n  }\n  /**\n   * Compares a keyboard event with a given keyCode or keyName.\n   *\n   * @param {Event} event Keyboard event that should be tested\n   * @param {Mixed} keyCode {Number} or keyName {String}\n   * @return {Boolean}\n   * @api public\n   */\n\n\n  keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n    if (event && 'object' === typeof event) {\n      var keyCode = event.which || event.keyCode || event.charCode;\n\n      if (keyCode === null || keyCode === undefined) {\n        return false;\n      }\n\n      if (typeof nameOrCode === 'string') {\n        // check codes\n        var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n        if (foundNamedKey) {\n          return foundNamedKey === keyCode;\n        } // check aliases\n\n\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n        if (foundNamedKey) {\n          return foundNamedKey === keyCode;\n        }\n      } else if (typeof nameOrCode === 'number') {\n        return nameOrCode === keyCode;\n      }\n\n      return false;\n    }\n  };\n\n  exports = module.exports = keyCode;\n  /**\n   * Get by name\n   *\n   *   exports.code['enter'] // => 13\n   */\n\n  var codes = exports.code = exports.codes = {\n    'backspace': 8,\n    'tab': 9,\n    'enter': 13,\n    'shift': 16,\n    'ctrl': 17,\n    'alt': 18,\n    'pause/break': 19,\n    'caps lock': 20,\n    'esc': 27,\n    'space': 32,\n    'page up': 33,\n    'page down': 34,\n    'end': 35,\n    'home': 36,\n    'left': 37,\n    'up': 38,\n    'right': 39,\n    'down': 40,\n    'insert': 45,\n    'delete': 46,\n    'command': 91,\n    'left command': 91,\n    'right command': 93,\n    'numpad *': 106,\n    'numpad +': 107,\n    'numpad -': 109,\n    'numpad .': 110,\n    'numpad /': 111,\n    'num lock': 144,\n    'scroll lock': 145,\n    'my computer': 182,\n    'my calculator': 183,\n    ';': 186,\n    '=': 187,\n    ',': 188,\n    '-': 189,\n    '.': 190,\n    '/': 191,\n    '`': 192,\n    '[': 219,\n    '\\\\': 220,\n    ']': 221,\n    \"'\": 222\n  }; // Helper aliases\n\n  var aliases = exports.aliases = {\n    'windows': 91,\n    'â§': 16,\n    'â¥': 18,\n    'â': 17,\n    'â': 91,\n    'ctl': 17,\n    'control': 17,\n    'option': 18,\n    'pause': 19,\n    'break': 19,\n    'caps': 20,\n    'return': 13,\n    'escape': 27,\n    'spc': 32,\n    'spacebar': 32,\n    'pgup': 33,\n    'pgdn': 34,\n    'ins': 45,\n    'del': 46,\n    'cmd': 91\n  };\n  /*!\n   * Programatically add the following\n   */\n  // lower case chars\n\n  for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32; // numbers\n\n\n  for (var i = 48; i < 58; i++) codes[i - 48] = i; // function keys\n\n\n  for (i = 1; i < 13; i++) codes['f' + i] = i + 111; // numpad keys\n\n\n  for (i = 0; i < 10; i++) codes['numpad ' + i] = i + 96;\n  /**\n   * Get by code\n   *\n   *   exports.name[13] // => 'Enter'\n   */\n\n\n  var names = exports.names = exports.title = {}; // title for backward compat\n  // Create reverse mapping\n\n  for (i in codes) names[codes[i]] = i; // Add aliases\n\n\n  for (var alias in aliases) {\n    codes[alias] = aliases[alias];\n  }\n});\nvar keycode_1 = keycode.code;\nvar keycode_2 = keycode.codes;\nvar keycode_3 = keycode.aliases;\nvar keycode_4 = keycode.names;\nvar keycode_5 = keycode.title;\nvar isRequiredForA11y_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isRequiredForA11y;\n\n  function isRequiredForA11y(validator) {\n    return function validate(props, propName, componentName, location, propFullName) {\n      var componentNameSafe = componentName || '<<anonymous>>';\n      var propFullNameSafe = propFullName || propName;\n\n      if (props[propName] == null) {\n        return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n      }\n\n      for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n        args[_key - 5] = arguments[_key];\n      }\n\n      return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n    };\n  }\n\n  module.exports = exports['default'];\n});\nvar isRequiredForA11y = unwrapExports(isRequiredForA11y_1); // true  -> String#at\n// false -> String#codePointAt\n\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n\n    var i = _toInteger(pos);\n\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _redefine = _hide;\nvar _iterators = {};\n\nvar _wks = createCommonjsModule(function (module) {\n  var store = _shared('wks');\n\n  var Symbol = _global.Symbol;\n  var USE_SYMBOL = typeof Symbol == 'function';\n\n  var $exports = module.exports = function (name) {\n    return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n  };\n\n  $exports.store = store;\n});\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\nvar IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\n_hide(IteratorPrototype, _wks('iterator'), function () {\n  return this;\n});\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, {\n    next: _propertyDesc(1, next)\n  });\n\n  _setToStringTag(Constructor, NAME + ' Iterator');\n}; // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\n\nvar ObjectProto = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n\n  return O instanceof Object ? ObjectProto : null;\n};\n\nvar ITERATOR = _wks('iterator');\n\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\n\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () {\n  return this;\n};\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype; // Fix native\n\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n\n    $default = function values() {\n      return $native.call(this);\n    };\n  } // Define iterator\n\n\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  } // Plug for library\n\n\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n\n  return methods;\n};\n\nvar $at = _stringAt(true); // 21.1.3.27 String.prototype[@@iterator]()\n\n\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n\n  this._i = 0; // next index\n  // 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n}); // call something on iterator step with safe closing on error\n\n\nvar _iterCall = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(_anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) _anObject(ret.call(iterator));\n    throw e;\n  }\n}; // check on default Array iterator\n\n\nvar ITERATOR$1 = _wks('iterator');\n\nvar ArrayProto = Array.prototype;\n\nvar _isArrayIter = function (it) {\n  return it !== undefined && (_iterators.Array === it || ArrayProto[ITERATOR$1] === it);\n};\n\nvar _createProperty = function (object, index, value) {\n  if (index in object) _objectDp.f(object, index, _propertyDesc(0, value));else object[index] = value;\n}; // getting tag from 19.1.3.6 Object.prototype.toString()\n\n\nvar TAG$1 = _wks('toStringTag'); // ES3 wrong here\n\n\nvar ARG = _cof(function () {\n  return arguments;\n}()) == 'Arguments'; // fallback for IE11 Script Access Denied error\n\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) {\n    /* empty */\n  }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\n  : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T // builtinTag case\n  : ARG ? _cof(O) // ES3 arguments fallback\n  : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\nvar ITERATOR$2 = _wks('iterator');\n\nvar core_getIteratorMethod = _core.getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR$2] || it['@@iterator'] || _iterators[_classof(it)];\n};\n\nvar ITERATOR$3 = _wks('iterator');\n\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR$3]();\n\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n} catch (e) {\n  /* empty */\n}\n\nvar _iterDetect = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR$3]();\n\n    iter.next = function () {\n      return {\n        done: safe = true\n      };\n    };\n\n    arr[ITERATOR$3] = function () {\n      return iter;\n    };\n\n    exec(arr);\n  } catch (e) {\n    /* empty */\n  }\n\n  return safe;\n};\n\n_export(_export.S + _export.F * !_iterDetect(function (iter) {}), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike\n  /* , mapfn = undefined, thisArg = undefined */\n  ) {\n    var O = _toObject(arrayLike);\n\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = core_getIteratorMethod(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = _ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2); // if object isn't iterable or it's array with default iterator - use simple case\n\n    if (iterFn != undefined && !(C == Array && _isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        _createProperty(result, index, mapping ? _iterCall(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = _toLength(O.length);\n\n      for (result = new C(length); length > index; index++) {\n        _createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n\n    result.length = index;\n    return result;\n  }\n});\n\nvar from_1 = _core.Array.from;\nvar from_1$1 = from_1;\nvar on_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _inDOM2 = _interopRequireDefault(inDOM);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var on = function on() {};\n\n  if (_inDOM2.default) {\n    on = function () {\n      if (document.addEventListener) return function (node, eventName, handler, capture) {\n        return node.addEventListener(eventName, handler, capture || false);\n      };else if (document.attachEvent) return function (node, eventName, handler) {\n        return node.attachEvent('on' + eventName, function (e) {\n          e = e || window.event;\n          e.target = e.target || e.srcElement;\n          e.currentTarget = node;\n          handler.call(node, e);\n        });\n      };\n    }();\n  }\n\n  exports.default = on;\n  module.exports = exports['default'];\n});\nunwrapExports(on_1);\nvar off_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _inDOM2 = _interopRequireDefault(inDOM);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var off = function off() {};\n\n  if (_inDOM2.default) {\n    off = function () {\n      if (document.addEventListener) return function (node, eventName, handler, capture) {\n        return node.removeEventListener(eventName, handler, capture || false);\n      };else if (document.attachEvent) return function (node, eventName, handler) {\n        return node.detachEvent('on' + eventName, handler);\n      };\n    }();\n  }\n\n  exports.default = off;\n  module.exports = exports['default'];\n});\nunwrapExports(off_1);\nvar addEventListener = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  exports.default = function (node, event, handler, capture) {\n    (0, _on2.default)(node, event, handler, capture);\n    return {\n      remove: function remove() {\n        (0, _off2.default)(node, event, handler, capture);\n      }\n    };\n  };\n\n  var _on2 = _interopRequireDefault(on_1);\n\n  var _off2 = _interopRequireDefault(off_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(addEventListener);\nvar ownerDocument$1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  exports.default = function (componentOrElement) {\n    return (0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(componentOrElement));\n  };\n\n  var _reactDom2 = _interopRequireDefault(ReactDOM);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(ownerDocument$1);\nvar RootCloseWrapper_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _contains2 = _interopRequireDefault(contains);\n\n  var _propTypes2 = _interopRequireDefault(PropTypes);\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _reactDom2 = _interopRequireDefault(ReactDOM);\n\n  var _addEventListener2 = _interopRequireDefault(addEventListener);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument$1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var escapeKeyCode = 27;\n\n  function isLeftClickEvent(event) {\n    return event.button === 0;\n  }\n\n  function isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n  }\n  /**\n   * The `<RootCloseWrapper/>` component registers your callback on the document\n   * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n   * style behavior where your callback is triggered when the user tries to\n   * interact with the rest of the document or hits the `esc` key.\n   */\n\n\n  var RootCloseWrapper = function (_React$Component) {\n    _inherits(RootCloseWrapper, _React$Component);\n\n    function RootCloseWrapper(props, context) {\n      _classCallCheck(this, RootCloseWrapper);\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n      _this.addEventListeners = function () {\n        var event = _this.props.event;\n        var doc = (0, _ownerDocument2.default)(_this); // Use capture for this listener so it fires before React's listener, to\n        // avoid false positives in the contains() check below if the target DOM\n        // element is removed in the React mouse callback.\n\n        _this.documentMouseCaptureListener = (0, _addEventListener2.default)(doc, event, _this.handleMouseCapture, true);\n        _this.documentMouseListener = (0, _addEventListener2.default)(doc, event, _this.handleMouse);\n        _this.documentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', _this.handleKeyUp);\n      };\n\n      _this.removeEventListeners = function () {\n        if (_this.documentMouseCaptureListener) {\n          _this.documentMouseCaptureListener.remove();\n        }\n\n        if (_this.documentMouseListener) {\n          _this.documentMouseListener.remove();\n        }\n\n        if (_this.documentKeyupListener) {\n          _this.documentKeyupListener.remove();\n        }\n      };\n\n      _this.handleMouseCapture = function (e) {\n        _this.preventMouseRootClose = isModifiedEvent(e) || !isLeftClickEvent(e) || (0, _contains2.default)(_reactDom2.default.findDOMNode(_this), e.target);\n      };\n\n      _this.handleMouse = function (e) {\n        if (!_this.preventMouseRootClose && _this.props.onRootClose) {\n          _this.props.onRootClose(e);\n        }\n      };\n\n      _this.handleKeyUp = function (e) {\n        if (e.keyCode === escapeKeyCode && _this.props.onRootClose) {\n          _this.props.onRootClose(e);\n        }\n      };\n\n      _this.preventMouseRootClose = false;\n      return _this;\n    }\n\n    RootCloseWrapper.prototype.componentDidMount = function componentDidMount() {\n      if (!this.props.disabled) {\n        this.addEventListeners();\n      }\n    };\n\n    RootCloseWrapper.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n      if (!this.props.disabled && prevProps.disabled) {\n        this.addEventListeners();\n      } else if (this.props.disabled && !prevProps.disabled) {\n        this.removeEventListeners();\n      }\n    };\n\n    RootCloseWrapper.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (!this.props.disabled) {\n        this.removeEventListeners();\n      }\n    };\n\n    RootCloseWrapper.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return RootCloseWrapper;\n  }(_react2.default.Component);\n\n  RootCloseWrapper.displayName = 'RootCloseWrapper';\n  RootCloseWrapper.propTypes = {\n    /**\n     * Callback fired after click or mousedown. Also triggers when user hits `esc`.\n     */\n    onRootClose: _propTypes2.default.func,\n\n    /**\n     * Children to render.\n     */\n    children: _propTypes2.default.element,\n\n    /**\n     * Disable the the RootCloseWrapper, preventing it from triggering `onRootClose`.\n     */\n    disabled: _propTypes2.default.bool,\n\n    /**\n     * Choose which document mouse event to bind to.\n     */\n    event: _propTypes2.default.oneOf(['click', 'mousedown'])\n  };\n  RootCloseWrapper.defaultProps = {\n    event: 'click'\n  };\n  exports.default = RootCloseWrapper;\n  module.exports = exports['default'];\n});\nvar RootCloseWrapper = unwrapExports(RootCloseWrapper_1);\nvar propTypes$h = {\n  open: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  onClose: PropTypes.func,\n  labelledBy: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onSelect: PropTypes.func,\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown'])\n};\nvar defaultProps$g = {\n  bsRole: 'menu',\n  pullRight: false\n};\n\nvar DropdownMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownMenu, _React$Component);\n\n  function DropdownMenu(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.handleRootClose = _this.handleRootClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = DropdownMenu.prototype;\n\n  _proto.getFocusableMenuItems = function getFocusableMenuItems() {\n    var node = ReactDOM.findDOMNode(this);\n\n    if (!node) {\n      return [];\n    }\n\n    return from_1$1(node.querySelectorAll('[tabIndex=\"-1\"]'));\n  };\n\n  _proto.getItemsAndActiveIndex = function getItemsAndActiveIndex() {\n    var items = this.getFocusableMenuItems();\n    var activeIndex = items.indexOf(document.activeElement);\n    return {\n      items: items,\n      activeIndex: activeIndex\n    };\n  };\n\n  _proto.focusNext = function focusNext() {\n    var _this$getItemsAndActi = this.getItemsAndActiveIndex(),\n        items = _this$getItemsAndActi.items,\n        activeIndex = _this$getItemsAndActi.activeIndex;\n\n    if (items.length === 0) {\n      return;\n    }\n\n    var nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    items[nextIndex].focus();\n  };\n\n  _proto.focusPrevious = function focusPrevious() {\n    var _this$getItemsAndActi2 = this.getItemsAndActiveIndex(),\n        items = _this$getItemsAndActi2.items,\n        activeIndex = _this$getItemsAndActi2.activeIndex;\n\n    if (items.length === 0) {\n      return;\n    }\n\n    var prevIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    items[prevIndex].focus();\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    switch (event.keyCode) {\n      case keycode.codes.down:\n        this.focusNext();\n        event.preventDefault();\n        break;\n\n      case keycode.codes.up:\n        this.focusPrevious();\n        event.preventDefault();\n        break;\n\n      case keycode.codes.esc:\n      case keycode.codes.tab:\n        this.props.onClose(event, {\n          source: 'keydown'\n        });\n        break;\n\n      default:\n    }\n  };\n\n  _proto.handleRootClose = function handleRootClose(event) {\n    this.props.onClose(event, {\n      source: 'rootClose'\n    });\n  };\n\n  _proto.render = function render() {\n    var _extends2,\n        _this2 = this;\n\n    var _this$props = this.props,\n        open = _this$props.open,\n        pullRight = _this$props.pullRight,\n        labelledBy = _this$props.labelledBy,\n        onSelect = _this$props.onSelect,\n        className = _this$props.className,\n        rootCloseEvent = _this$props.rootCloseEvent,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"open\", \"pullRight\", \"labelledBy\", \"onSelect\", \"className\", \"rootCloseEvent\", \"children\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['onClose']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, 'right')] = pullRight, _extends2));\n\n    return React.createElement(RootCloseWrapper, {\n      disabled: !open,\n      onRootClose: this.handleRootClose,\n      event: rootCloseEvent\n    }, React.createElement(\"ul\", _extends({}, elementProps, {\n      role: \"menu\",\n      className: classnames(className, classes),\n      \"aria-labelledby\": labelledBy\n    }), ValidComponentChildren.map(children, function (child) {\n      return React.cloneElement(child, {\n        onKeyDown: createChainedFunction(child.props.onKeyDown, _this2.handleKeyDown),\n        onSelect: createChainedFunction(child.props.onSelect, onSelect)\n      });\n    })));\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\nDropdownMenu.propTypes = propTypes$h;\nDropdownMenu.defaultProps = defaultProps$g;\nvar DropdownMenu$1 = bsClass('dropdown-menu', DropdownMenu);\nvar propTypes$i = {\n  noCaret: PropTypes.bool,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  useAnchor: PropTypes.bool\n};\nvar defaultProps$h = {\n  open: false,\n  useAnchor: false,\n  bsRole: 'toggle'\n};\n\nvar DropdownToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownToggle, _React$Component);\n\n  function DropdownToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DropdownToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        noCaret = _this$props.noCaret,\n        open = _this$props.open,\n        useAnchor = _this$props.useAnchor,\n        bsClass$$1 = _this$props.bsClass,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"noCaret\", \"open\", \"useAnchor\", \"bsClass\", \"className\", \"children\"]);\n\n    delete props.bsRole;\n    var Component$$1 = useAnchor ? SafeAnchor : Button$1;\n    var useCaret = !noCaret; // This intentionally forwards bsSize and bsStyle (if set) to the\n    // underlying component, to allow it to render size and style variants.\n    // FIXME: Should this really fall back to `title` as children?\n\n    return React.createElement(Component$$1, _extends({}, props, {\n      role: \"button\",\n      className: classnames(className, bsClass$$1),\n      \"aria-haspopup\": true,\n      \"aria-expanded\": open\n    }), children || props.title, useCaret && ' ', useCaret && React.createElement(\"span\", {\n      className: \"caret\"\n    }));\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes$i;\nDropdownToggle.defaultProps = defaultProps$h;\nvar DropdownToggle$1 = bsClass('dropdown-toggle', DropdownToggle);\nvar TOGGLE_ROLE = DropdownToggle$1.defaultProps.bsRole;\nvar MENU_ROLE = DropdownMenu$1.defaultProps.bsRole;\nvar propTypes$j = {\n  /**\n   * The menu will open above the dropdown button, instead of below it.\n   */\n  dropup: PropTypes.bool,\n\n  /**\n   * An html id attribute, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  componentClass: elementType,\n\n  /**\n   * The children of a Dropdown may be a `<Dropdown.Toggle>` or a `<Dropdown.Menu>`.\n   * @type {node}\n   */\n  children: all(requiredRoles(TOGGLE_ROLE, MENU_ROLE), exclusiveRoles(MENU_ROLE)),\n\n  /**\n   * Whether or not component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Align the menu to the right side of the Dropdown toggle\n   */\n  pullRight: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  open: PropTypes.bool,\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `open` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```js\n   * function(Boolean isOpen, Object event, { String source }) {}\n   * ```\n   * @controllable open\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * A callback fired when a menu item is selected.\n   *\n   * ```js\n   * (eventKey: any, event: Object) => any\n   * ```\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * If `'menuitem'`, causes the dropdown to behave like a menu item rather than\n   * a menu button.\n   */\n  role: PropTypes.string,\n\n  /**\n   * Which event when fired outside the component will cause it to be closed\n   *\n   * *Note: For custom dropdown components, you will have to pass the\n   * `rootCloseEvent` to `<RootCloseWrapper>` in your custom dropdown menu\n   * component ([similarly to how it is implemented in `<Dropdown.Menu>`](https://github.com/react-bootstrap/react-bootstrap/blob/v0.31.5/src/DropdownMenu.js#L115-L119)).*\n   */\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\n\n  /**\n   * @private\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @private\n   */\n  onMouseLeave: PropTypes.func\n};\nvar defaultProps$i = {\n  componentClass: ButtonGroup$1\n};\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Dropdown, _React$Component);\n\n  function Dropdown(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._focusInDropdown = false;\n    _this.lastOpenEventType = null;\n    return _this;\n  }\n\n  var _proto = Dropdown.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.focusNextOnOpen();\n  };\n\n  _proto.componentWillUpdate = function componentWillUpdate(nextProps) {\n    if (!nextProps.open && this.props.open) {\n      this._focusInDropdown = contains$1(ReactDOM.findDOMNode(this.menu), activeElement(document));\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var open = this.props.open;\n    var prevOpen = prevProps.open;\n\n    if (open && !prevOpen) {\n      this.focusNextOnOpen();\n    }\n\n    if (!open && prevOpen) {\n      // if focus hasn't already moved from the menu let's return it\n      // to the toggle\n      if (this._focusInDropdown) {\n        this._focusInDropdown = false;\n        this.focus();\n      }\n    }\n  };\n\n  _proto.focus = function focus() {\n    var toggle = ReactDOM.findDOMNode(this.toggle);\n\n    if (toggle && toggle.focus) {\n      toggle.focus();\n    }\n  };\n\n  _proto.focusNextOnOpen = function focusNextOnOpen() {\n    var menu = this.menu;\n\n    if (!menu || !menu.focusNext) {\n      return;\n    }\n\n    if (this.lastOpenEventType === 'keydown' || this.props.role === 'menuitem') {\n      menu.focusNext();\n    }\n  };\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.toggleOpen(event, {\n      source: 'click'\n    });\n  };\n\n  _proto.handleClose = function handleClose(event, eventDetails) {\n    if (!this.props.open) {\n      return;\n    }\n\n    this.toggleOpen(event, eventDetails);\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case keycode.codes.down:\n        if (!this.props.open) {\n          this.toggleOpen(event, {\n            source: 'keydown'\n          });\n        } else if (this.menu.focusNext) {\n          this.menu.focusNext();\n        }\n\n        event.preventDefault();\n        break;\n\n      case keycode.codes.esc:\n      case keycode.codes.tab:\n        this.handleClose(event, {\n          source: 'keydown'\n        });\n        break;\n\n      default:\n    }\n  };\n\n  _proto.toggleOpen = function toggleOpen(event, eventDetails) {\n    var open = !this.props.open;\n\n    if (open) {\n      this.lastOpenEventType = eventDetails.source;\n    }\n\n    if (this.props.onToggle) {\n      this.props.onToggle(open, event, eventDetails);\n    }\n  };\n\n  _proto.renderMenu = function renderMenu(child, _ref) {\n    var _this2 = this;\n\n    var id = _ref.id,\n        onSelect = _ref.onSelect,\n        rootCloseEvent = _ref.rootCloseEvent,\n        props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"onSelect\", \"rootCloseEvent\"]);\n\n    var ref = function ref(c) {\n      _this2.menu = c;\n    };\n\n    if (typeof child.ref === 'string') {\n      process.env.NODE_ENV !== \"production\" ? warning_1(false, 'String refs are not supported on `<Dropdown.Menu>` components. ' + 'To apply a ref to the component use the callback signature:\\n\\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : void 0;\n    } else {\n      ref = createChainedFunction(child.ref, ref);\n    }\n\n    return cloneElement(child, _extends({}, props, {\n      ref: ref,\n      labelledBy: id,\n      bsClass: prefix(props, 'menu'),\n      onClose: createChainedFunction(child.props.onClose, this.handleClose),\n      onSelect: createChainedFunction(child.props.onSelect, onSelect, function (key, event) {\n        return _this2.handleClose(event, {\n          source: 'select'\n        });\n      }),\n      rootCloseEvent: rootCloseEvent\n    }));\n  };\n\n  _proto.renderToggle = function renderToggle(child, props) {\n    var _this3 = this;\n\n    var ref = function ref(c) {\n      _this3.toggle = c;\n    };\n\n    if (typeof child.ref === 'string') {\n      process.env.NODE_ENV !== \"production\" ? warning_1(false, 'String refs are not supported on `<Dropdown.Toggle>` components. ' + 'To apply a ref to the component use the callback signature:\\n\\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : void 0;\n    } else {\n      ref = createChainedFunction(child.ref, ref);\n    }\n\n    return cloneElement(child, _extends({}, props, {\n      ref: ref,\n      bsClass: prefix(props, 'toggle'),\n      onClick: createChainedFunction(child.props.onClick, this.handleClick),\n      onKeyDown: createChainedFunction(child.props.onKeyDown, this.handleKeyDown)\n    }));\n  };\n\n  _proto.render = function render() {\n    var _classes,\n        _this4 = this;\n\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        id = _this$props.id,\n        dropup = _this$props.dropup,\n        disabled = _this$props.disabled,\n        pullRight = _this$props.pullRight,\n        open = _this$props.open,\n        onSelect = _this$props.onSelect,\n        role = _this$props.role,\n        bsClass$$1 = _this$props.bsClass,\n        className = _this$props.className,\n        rootCloseEvent = _this$props.rootCloseEvent,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"id\", \"dropup\", \"disabled\", \"pullRight\", \"open\", \"onSelect\", \"role\", \"bsClass\", \"className\", \"rootCloseEvent\", \"children\"]);\n\n    delete props.onToggle;\n    var classes = (_classes = {}, _classes[bsClass$$1] = true, _classes.open = open, _classes.disabled = disabled, _classes);\n\n    if (dropup) {\n      classes[bsClass$$1] = false;\n      classes.dropup = true;\n    } // This intentionally forwards bsSize and bsStyle (if set) to the\n    // underlying component, to allow it to render size and style variants.\n\n\n    return React.createElement(Component$$1, _extends({}, props, {\n      className: classnames(className, classes)\n    }), ValidComponentChildren.map(children, function (child) {\n      switch (child.props.bsRole) {\n        case TOGGLE_ROLE:\n          return _this4.renderToggle(child, {\n            id: id,\n            disabled: disabled,\n            open: open,\n            role: role,\n            bsClass: bsClass$$1\n          });\n\n        case MENU_ROLE:\n          return _this4.renderMenu(child, {\n            id: id,\n            open: open,\n            pullRight: pullRight,\n            bsClass: bsClass$$1,\n            onSelect: onSelect,\n            rootCloseEvent: rootCloseEvent\n          });\n\n        default:\n          return child;\n      }\n    }));\n  };\n\n  return Dropdown;\n}(React.Component);\n\nDropdown.propTypes = propTypes$j;\nDropdown.defaultProps = defaultProps$i;\nbsClass('dropdown', Dropdown);\nvar UncontrolledDropdown = uncontrollable(Dropdown, {\n  open: 'onToggle'\n});\nUncontrolledDropdown.Toggle = DropdownToggle$1;\nUncontrolledDropdown.Menu = DropdownMenu$1;\n\nfunction splitComponentProps(props, Component$$1) {\n  var componentPropTypes = Component$$1.propTypes;\n  var parentProps = {};\n  var childProps = {};\n  entries$1(props).forEach(function (_ref) {\n    var propName = _ref[0],\n        propValue = _ref[1];\n\n    if (componentPropTypes[propName]) {\n      parentProps[propName] = propValue;\n    } else {\n      childProps[propName] = propValue;\n    }\n  });\n  return [parentProps, childProps];\n}\n\nvar propTypes$k = _extends({}, UncontrolledDropdown.propTypes, {\n  // Toggle props.\n  bsStyle: PropTypes.string,\n  bsSize: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  noCaret: PropTypes.bool,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: PropTypes.node\n});\n\nvar DropdownButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownButton, _React$Component);\n\n  function DropdownButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DropdownButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsSize = _this$props.bsSize,\n        bsStyle = _this$props.bsStyle,\n        title = _this$props.title,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsSize\", \"bsStyle\", \"title\", \"children\"]);\n\n    var _splitComponentProps = splitComponentProps(props, UncontrolledDropdown.ControlledComponent),\n        dropdownProps = _splitComponentProps[0],\n        toggleProps = _splitComponentProps[1];\n\n    return React.createElement(UncontrolledDropdown, _extends({}, dropdownProps, {\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), React.createElement(UncontrolledDropdown.Toggle, _extends({}, toggleProps, {\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), title), React.createElement(UncontrolledDropdown.Menu, null, children));\n  };\n\n  return DropdownButton;\n}(React.Component);\n\nDropdownButton.propTypes = propTypes$k;\n\nvar _fadeStyles;\n\nvar propTypes$l = {\n  /**\n   * Show the component; triggers the fade in or fade out animation\n   */\n  in: PropTypes.bool,\n\n  /**\n   * Wait until the first \"enter\" transition to mount the component (add it to the DOM)\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * Unmount the component (remove it from the DOM) when it is faded out\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Run the fade in animation when the component mounts, if it is initially\n   * shown\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Duration of the fade animation in milliseconds, to ensure that finishing\n   * callbacks are fired even if the original browser transition end events are\n   * canceled\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * Callback fired before the component fades in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the component starts to fade in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the has component faded in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the component fades out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the component starts to fade out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the component has faded out\n   */\n  onExited: PropTypes.func\n};\nvar defaultProps$j = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _fadeStyles[Transition_4] = 'in', _fadeStyles[Transition_3] = 'in', _fadeStyles);\n\nvar Fade =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Fade, _React$Component);\n\n  function Fade() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Fade.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"children\"]);\n\n    return React.createElement(Transition, props, function (status, innerProps) {\n      return React.cloneElement(children, _extends({}, innerProps, {\n        className: classnames('fade', className, children.props.className, fadeStyles[status])\n      }));\n    });\n  };\n\n  return Fade;\n}(React.Component);\n\nFade.propTypes = propTypes$l;\nFade.defaultProps = defaultProps$j;\nvar propTypes$m = {\n  horizontal: PropTypes.bool,\n  inline: PropTypes.bool,\n  componentClass: elementType\n};\nvar defaultProps$k = {\n  horizontal: false,\n  inline: false,\n  componentClass: 'form'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Form, _React$Component);\n\n  function Form() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        horizontal = _this$props.horizontal,\n        inline = _this$props.inline,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"horizontal\", \"inline\", \"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = [];\n\n    if (horizontal) {\n      classes.push(prefix(bsProps, 'horizontal'));\n    }\n\n    if (inline) {\n      classes.push(prefix(bsProps, 'inline'));\n    }\n\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Form;\n}(React.Component);\n\nForm.propTypes = propTypes$m;\nForm.defaultProps = defaultProps$k;\nbsClass('form', Form);\nvar defaultProps$l = {\n  bsRole: 'feedback'\n};\nvar contextTypes$1 = {\n  $bs_formGroup: PropTypes.object\n};\n\nvar FormControlFeedback =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(FormControlFeedback, _React$Component);\n\n  function FormControlFeedback() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = FormControlFeedback.prototype;\n\n  _proto.getGlyph = function getGlyph(validationState) {\n    switch (validationState) {\n      case 'success':\n        return 'ok';\n\n      case 'warning':\n        return 'warning-sign';\n\n      case 'error':\n        return 'remove';\n\n      default:\n        return null;\n    }\n  };\n\n  _proto.renderDefaultFeedback = function renderDefaultFeedback(formGroup, className, classes, elementProps) {\n    var glyph = this.getGlyph(formGroup && formGroup.validationState);\n\n    if (!glyph) {\n      return null;\n    }\n\n    return React.createElement(Glyphicon$1, _extends({}, elementProps, {\n      glyph: glyph,\n      className: classnames(className, classes)\n    }));\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n\n    if (!children) {\n      return this.renderDefaultFeedback(this.context.$bs_formGroup, className, classes, elementProps);\n    }\n\n    var child = React.Children.only(children);\n    return React.cloneElement(child, _extends({}, elementProps, {\n      className: classnames(child.props.className, className, classes)\n    }));\n  };\n\n  return FormControlFeedback;\n}(React.Component);\n\nFormControlFeedback.defaultProps = defaultProps$l;\nFormControlFeedback.contextTypes = contextTypes$1;\nvar FormControlFeedback$1 = bsClass('form-control-feedback', FormControlFeedback);\nvar propTypes$n = {\n  componentClass: elementType\n};\nvar defaultProps$m = {\n  componentClass: 'p'\n};\n\nvar FormControlStatic =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(FormControlStatic, _React$Component);\n\n  function FormControlStatic() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = FormControlStatic.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return FormControlStatic;\n}(React.Component);\n\nFormControlStatic.propTypes = propTypes$n;\nFormControlStatic.defaultProps = defaultProps$m;\nvar FormControlStatic$1 = bsClass('form-control-static', FormControlStatic);\nvar propTypes$o = {\n  componentClass: elementType,\n\n  /**\n   * Only relevant if `componentClass` is `'input'`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * Uses `controlId` from `<FormGroup>` if not explicitly specified.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Attaches a ref to the `<input>` element. Only functions can be used here.\n   *\n   * ```js\n   * <FormControl inputRef={ref => { this.input = ref; }} />\n   * ```\n   */\n  inputRef: PropTypes.func\n};\nvar defaultProps$n = {\n  componentClass: 'input'\n};\nvar contextTypes$2 = {\n  $bs_formGroup: PropTypes.object\n};\n\nvar FormControl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(FormControl, _React$Component);\n\n  function FormControl() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = FormControl.prototype;\n\n  _proto.render = function render() {\n    var formGroup = this.context.$bs_formGroup;\n    var controlId = formGroup && formGroup.controlId;\n\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        type = _this$props.type,\n        _this$props$id = _this$props.id,\n        id = _this$props$id === void 0 ? controlId : _this$props$id,\n        inputRef = _this$props.inputRef,\n        className = _this$props.className,\n        bsSize = _this$props.bsSize,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"type\", \"id\", \"inputRef\", \"className\", \"bsSize\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    process.env.NODE_ENV !== \"production\" ? warning_1(controlId == null || id === controlId, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0; // input[type=\"file\"] should not have .form-control.\n\n    var classes;\n\n    if (type !== 'file') {\n      classes = getClassSet(bsProps);\n    } // If user provides a size, make sure to append it to classes as input-\n    // e.g. if bsSize is small, it will append input-sm\n\n\n    if (bsSize) {\n      var size = SIZE_MAP[bsSize] || bsSize;\n      classes[prefix({\n        bsClass: 'input'\n      }, size)] = true;\n    }\n\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      type: type,\n      id: id,\n      ref: inputRef,\n      className: classnames(className, classes)\n    }));\n  };\n\n  return FormControl;\n}(React.Component);\n\nFormControl.propTypes = propTypes$o;\nFormControl.defaultProps = defaultProps$n;\nFormControl.contextTypes = contextTypes$2;\nFormControl.Feedback = FormControlFeedback$1;\nFormControl.Static = FormControlStatic$1;\nvar FormControl$1 = bsClass('form-control', bsSizes([Size.SMALL, Size.LARGE], FormControl));\nvar propTypes$p = {\n  /**\n   * Sets `id` on `<FormControl>` and `htmlFor` on `<FormGroup.Label>`.\n   */\n  controlId: PropTypes.string,\n  validationState: PropTypes.oneOf(['success', 'warning', 'error', null])\n};\nvar childContextTypes$1 = {\n  $bs_formGroup: PropTypes.object.isRequired\n};\n\nvar FormGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(FormGroup, _React$Component);\n\n  function FormGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = FormGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        controlId = _this$props.controlId,\n        validationState = _this$props.validationState;\n    return {\n      $bs_formGroup: {\n        controlId: controlId,\n        validationState: validationState\n      }\n    };\n  };\n\n  _proto.hasFeedback = function hasFeedback(children) {\n    var _this = this;\n\n    return ValidComponentChildren.some(children, function (child) {\n      return child.props.bsRole === 'feedback' || child.props.children && _this.hasFeedback(child.props.children);\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        validationState = _this$props2.validationState,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"validationState\", \"className\", \"children\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['controlId']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      'has-feedback': this.hasFeedback(children)\n    });\n\n    if (validationState) {\n      classes[\"has-\" + validationState] = true;\n    }\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), children);\n  };\n\n  return FormGroup;\n}(React.Component);\n\nFormGroup.propTypes = propTypes$p;\nFormGroup.childContextTypes = childContextTypes$1;\nvar FormGroup$1 = bsClass('form-group', bsSizes([Size.LARGE, Size.SMALL], FormGroup));\nvar propTypes$q = {\n  /**\n   * Turn any fixed-width grid layout into a full-width layout by this property.\n   *\n   * Adds `container-fluid` class.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * You can use a custom element for this component\n   */\n  componentClass: elementType\n};\nvar defaultProps$o = {\n  componentClass: 'div',\n  fluid: false\n};\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Grid, _React$Component);\n\n  function Grid() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Grid.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        fluid = _this$props.fluid,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"fluid\", \"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = prefix(bsProps, fluid && 'fluid');\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Grid;\n}(React.Component);\n\nGrid.propTypes = propTypes$q;\nGrid.defaultProps = defaultProps$o;\nvar Grid$1 = bsClass('container', Grid);\n\nvar HelpBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HelpBlock, _React$Component);\n\n  function HelpBlock() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = HelpBlock.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"span\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return HelpBlock;\n}(React.Component);\n\nbsClass('help-block', HelpBlock);\nvar propTypes$r = {\n  /**\n   * Sets image as responsive image\n   */\n  responsive: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle\n   */\n  circle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail\n   */\n  thumbnail: PropTypes.bool\n};\nvar defaultProps$p = {\n  responsive: false,\n  rounded: false,\n  circle: false,\n  thumbnail: false\n};\n\nvar Image =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Image, _React$Component);\n\n  function Image() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.render = function render() {\n    var _classes;\n\n    var _this$props = this.props,\n        responsive = _this$props.responsive,\n        rounded = _this$props.rounded,\n        circle = _this$props.circle,\n        thumbnail = _this$props.thumbnail,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"responsive\", \"rounded\", \"circle\", \"thumbnail\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = (_classes = {}, _classes[prefix(bsProps, 'responsive')] = responsive, _classes[prefix(bsProps, 'rounded')] = rounded, _classes[prefix(bsProps, 'circle')] = circle, _classes[prefix(bsProps, 'thumbnail')] = thumbnail, _classes);\n    return React.createElement(\"img\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Image;\n}(React.Component);\n\nImage.propTypes = propTypes$r;\nImage.defaultProps = defaultProps$p;\nbsClass('img', Image);\n\nvar InputGroupAddon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputGroupAddon, _React$Component);\n\n  function InputGroupAddon() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputGroupAddon.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"span\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return InputGroupAddon;\n}(React.Component);\n\nvar InputGroupAddon$1 = bsClass('input-group-addon', InputGroupAddon);\n\nvar InputGroupButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputGroupButton, _React$Component);\n\n  function InputGroupButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputGroupButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"span\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return InputGroupButton;\n}(React.Component);\n\nvar InputGroupButton$1 = bsClass('input-group-btn', InputGroupButton);\n\nvar InputGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputGroup, _React$Component);\n\n  function InputGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputGroup.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"span\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return InputGroup;\n}(React.Component);\n\nInputGroup.Addon = InputGroupAddon$1;\nInputGroup.Button = InputGroupButton$1;\nbsClass('input-group', bsSizes([Size.LARGE, Size.SMALL], InputGroup));\nvar propTypes$s = {\n  componentClass: elementType\n};\nvar defaultProps$q = {\n  componentClass: 'div'\n};\n\nvar Jumbotron =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Jumbotron, _React$Component);\n\n  function Jumbotron() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Jumbotron.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Jumbotron;\n}(React.Component);\n\nJumbotron.propTypes = propTypes$s;\nJumbotron.defaultProps = defaultProps$q;\nbsClass('jumbotron', Jumbotron);\n\nvar Label =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Label, _React$Component);\n\n  function Label() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Label.prototype;\n\n  _proto.hasContent = function hasContent(children) {\n    var result = false;\n    React.Children.forEach(children, function (child) {\n      if (result) {\n        return;\n      }\n\n      if (child || child === 0) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      // Hack for collapsing on IE8.\n      hidden: !this.hasContent(children)\n    });\n\n    return React.createElement(\"span\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), children);\n  };\n\n  return Label;\n}(React.Component);\n\nbsClass('label', bsStyles(values$1(State).concat([Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Label));\nvar propTypes$t = {\n  active: PropTypes.any,\n  disabled: PropTypes.any,\n  header: PropTypes.node,\n  listItem: PropTypes.bool,\n  onClick: PropTypes.func,\n  href: PropTypes.string,\n  type: PropTypes.string\n};\nvar defaultProps$r = {\n  listItem: false\n};\n\nvar ListGroupItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ListGroupItem, _React$Component);\n\n  function ListGroupItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ListGroupItem.prototype;\n\n  _proto.renderHeader = function renderHeader(header, headingClassName) {\n    if (React.isValidElement(header)) {\n      return cloneElement(header, {\n        className: classnames(header.props.className, headingClassName)\n      });\n    }\n\n    return React.createElement(\"h4\", {\n      className: headingClassName\n    }, header);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        disabled = _this$props.disabled,\n        className = _this$props.className,\n        header = _this$props.header,\n        listItem = _this$props.listItem,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"disabled\", \"className\", \"header\", \"listItem\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      active: active,\n      disabled: disabled\n    });\n\n    var Component$$1;\n\n    if (elementProps.href) {\n      Component$$1 = 'a';\n    } else if (elementProps.onClick) {\n      Component$$1 = 'button';\n      elementProps.type = elementProps.type || 'button';\n    } else if (listItem) {\n      Component$$1 = 'li';\n    } else {\n      Component$$1 = 'span';\n    }\n\n    elementProps.className = classnames(className, classes); // TODO: Deprecate `header` prop.\n\n    if (header) {\n      return React.createElement(Component$$1, elementProps, this.renderHeader(header, prefix(bsProps, 'heading')), React.createElement(\"p\", {\n        className: prefix(bsProps, 'text')\n      }, children));\n    }\n\n    return React.createElement(Component$$1, elementProps, children);\n  };\n\n  return ListGroupItem;\n}(React.Component);\n\nListGroupItem.propTypes = propTypes$t;\nListGroupItem.defaultProps = defaultProps$r;\nvar ListGroupItem$1 = bsClass('list-group-item', bsStyles(values$1(State), ListGroupItem));\nvar propTypes$u = {\n  /**\n   * You can use a custom element type for this component.\n   *\n   * If not specified, it will be treated as `'li'` if every child is a\n   * non-actionable `<ListGroupItem>`, and `'div'` otherwise.\n   */\n  componentClass: elementType\n};\n\nfunction getDefaultComponent(children) {\n  if (!children) {\n    // FIXME: This is the old behavior. Is this right?\n    return 'div';\n  }\n\n  if (ValidComponentChildren.some(children, function (child) {\n    return child.type !== ListGroupItem$1 || child.props.href || child.props.onClick;\n  })) {\n    return 'div';\n  }\n\n  return 'ul';\n}\n\nvar ListGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ListGroup, _React$Component);\n\n  function ListGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ListGroup.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        _this$props$component = _this$props.componentClass,\n        Component$$1 = _this$props$component === void 0 ? getDefaultComponent(children) : _this$props$component,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    var useListItem = Component$$1 === 'ul' && ValidComponentChildren.every(children, function (child) {\n      return child.type === ListGroupItem$1;\n    });\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), useListItem ? ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        listItem: true\n      });\n    }) : children);\n  };\n\n  return ListGroup;\n}(React.Component);\n\nListGroup.propTypes = propTypes$u;\nvar ListGroup$1 = bsClass('list-group', ListGroup);\nvar propTypes$v = {\n  /**\n   * Align the media to the top, middle, or bottom of the media object.\n   */\n  align: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  componentClass: elementType\n};\nvar defaultProps$s = {\n  componentClass: 'div'\n};\n\nvar MediaBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MediaBody, _React$Component);\n\n  function MediaBody() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MediaBody.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        align = _this$props.align,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"align\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n\n    if (align) {\n      // The class is e.g. `media-top`, not `media-left-top`.\n      classes[prefix(Media$1.defaultProps, align)] = true;\n    }\n\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return MediaBody;\n}(React.Component);\n\nMediaBody.propTypes = propTypes$v;\nMediaBody.defaultProps = defaultProps$s;\nvar MediaBody$1 = bsClass('media-body', MediaBody);\nvar propTypes$w = {\n  componentClass: elementType\n};\nvar defaultProps$t = {\n  componentClass: 'h4'\n};\n\nvar MediaHeading =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MediaHeading, _React$Component);\n\n  function MediaHeading() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MediaHeading.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return MediaHeading;\n}(React.Component);\n\nMediaHeading.propTypes = propTypes$w;\nMediaHeading.defaultProps = defaultProps$t;\nvar MediaHeading$1 = bsClass('media-heading', MediaHeading);\nvar propTypes$x = {\n  /**\n   * Align the media to the top, middle, or bottom of the media object.\n   */\n  align: PropTypes.oneOf(['top', 'middle', 'bottom'])\n};\n\nvar MediaLeft =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MediaLeft, _React$Component);\n\n  function MediaLeft() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MediaLeft.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        align = _this$props.align,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"align\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n\n    if (align) {\n      // The class is e.g. `media-top`, not `media-left-top`.\n      classes[prefix(Media$1.defaultProps, align)] = true;\n    }\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return MediaLeft;\n}(React.Component);\n\nMediaLeft.propTypes = propTypes$x;\nvar MediaLeft$1 = bsClass('media-left', MediaLeft);\n\nvar MediaList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MediaList, _React$Component);\n\n  function MediaList() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MediaList.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"ul\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return MediaList;\n}(React.Component);\n\nvar MediaList$1 = bsClass('media-list', MediaList);\n\nvar MediaListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MediaListItem, _React$Component);\n\n  function MediaListItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MediaListItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"li\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return MediaListItem;\n}(React.Component);\n\nvar MediaListItem$1 = bsClass('media', MediaListItem);\nvar propTypes$y = {\n  /**\n   * Align the media to the top, middle, or bottom of the media object.\n   */\n  align: PropTypes.oneOf(['top', 'middle', 'bottom'])\n};\n\nvar MediaRight =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MediaRight, _React$Component);\n\n  function MediaRight() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MediaRight.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        align = _this$props.align,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"align\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n\n    if (align) {\n      // The class is e.g. `media-top`, not `media-right-top`.\n      classes[prefix(Media$1.defaultProps, align)] = true;\n    }\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return MediaRight;\n}(React.Component);\n\nMediaRight.propTypes = propTypes$y;\nvar MediaRight$1 = bsClass('media-right', MediaRight);\nvar propTypes$z = {\n  componentClass: elementType\n};\nvar defaultProps$u = {\n  componentClass: 'div'\n};\n\nvar Media =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Media, _React$Component);\n\n  function Media() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Media.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Media;\n}(React.Component);\n\nMedia.propTypes = propTypes$z;\nMedia.defaultProps = defaultProps$u;\nMedia.Heading = MediaHeading$1;\nMedia.Body = MediaBody$1;\nMedia.Left = MediaLeft$1;\nMedia.Right = MediaRight$1;\nMedia.List = MediaList$1;\nMedia.ListItem = MediaListItem$1;\nvar Media$1 = bsClass('media', Media);\nvar propTypes$A = {\n  /**\n   * Highlight the menu item as active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Disable the menu item, making it unselectable.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Styles the menu item as a horizontal rule, providing visual separation between\n   * groups of menu items.\n   */\n  divider: all(PropTypes.bool, function (_ref) {\n    var divider = _ref.divider,\n        children = _ref.children;\n    return divider && children ? new Error('Children will not be rendered for dividers') : null;\n  }),\n\n  /**\n   * Value passed to the `onSelect` handler, useful for identifying the selected menu item.\n   */\n  eventKey: PropTypes.any,\n\n  /**\n   * Styles the menu item as a header label, useful for describing a group of menu items.\n   */\n  header: PropTypes.bool,\n\n  /**\n   * HTML `href` attribute corresponding to `a.href`.\n   */\n  href: PropTypes.string,\n\n  /**\n   * Callback fired when the menu item is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the menu item is selected.\n   *\n   * ```js\n   * (eventKey: any, event: Object) => any\n   * ```\n   */\n  onSelect: PropTypes.func\n};\nvar defaultProps$v = {\n  divider: false,\n  disabled: false,\n  header: false\n};\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MenuItem, _React$Component);\n\n  function MenuItem(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = MenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var _this$props = this.props,\n        href = _this$props.href,\n        disabled = _this$props.disabled,\n        onSelect = _this$props.onSelect,\n        eventKey = _this$props.eventKey;\n\n    if (!href || disabled) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      return;\n    }\n\n    if (onSelect) {\n      onSelect(eventKey, event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        active = _this$props2.active,\n        disabled = _this$props2.disabled,\n        divider = _this$props2.divider,\n        header = _this$props2.header,\n        onClick = _this$props2.onClick,\n        className = _this$props2.className,\n        style = _this$props2.style,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"active\", \"disabled\", \"divider\", \"header\", \"onClick\", \"className\", \"style\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['eventKey', 'onSelect']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    if (divider) {\n      // Forcibly blank out the children; separators shouldn't render any.\n      elementProps.children = undefined;\n      return React.createElement(\"li\", _extends({}, elementProps, {\n        role: \"separator\",\n        className: classnames(className, 'divider'),\n        style: style\n      }));\n    }\n\n    if (header) {\n      return React.createElement(\"li\", _extends({}, elementProps, {\n        role: \"heading\",\n        className: classnames(className, prefix(bsProps, 'header')),\n        style: style\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      role: \"presentation\",\n      className: classnames(className, {\n        active: active,\n        disabled: disabled\n      }),\n      style: style\n    }, React.createElement(SafeAnchor, _extends({}, elementProps, {\n      role: \"menuitem\",\n      tabIndex: \"-1\",\n      onClick: createChainedFunction(onClick, this.handleClick)\n    })));\n  };\n\n  return MenuItem;\n}(React.Component);\n\nMenuItem.propTypes = propTypes$A;\nMenuItem.defaultProps = defaultProps$v;\nbsClass('dropdown', MenuItem);\nvar querySelectorAll = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = qsa; // Zepto.js\n  // (c) 2010-2015 Thomas Fuchs\n  // Zepto.js may be freely distributed under the MIT license.\n\n  var simpleSelectorRE = /^[\\w-]*$/;\n  var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n\n  function qsa(element, selector) {\n    var maybeID = selector[0] === '#',\n        maybeClass = selector[0] === '.',\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector,\n        isSimple = simpleSelectorRE.test(nameOnly),\n        found;\n\n    if (isSimple) {\n      if (maybeID) {\n        element = element.getElementById ? element : document;\n        return (found = element.getElementById(nameOnly)) ? [found] : [];\n      }\n\n      if (element.getElementsByClassName && maybeClass) return toArray(element.getElementsByClassName(nameOnly));\n      return toArray(element.getElementsByTagName(selector));\n    }\n\n    return toArray(element.querySelectorAll(selector));\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(querySelectorAll);\nvar filter$1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = filterEvents;\n\n  var _contains2 = _interopRequireDefault(contains);\n\n  var _querySelectorAll2 = _interopRequireDefault(querySelectorAll);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function filterEvents(selector, handler) {\n    return function filterHandler(e) {\n      var top = e.currentTarget,\n          target = e.target,\n          matches = (0, _querySelectorAll2.default)(top, selector);\n      if (matches.some(function (match) {\n        return (0, _contains2.default)(match, target);\n      })) handler.call(this, e);\n    };\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(filter$1);\nvar listen_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _inDOM2 = _interopRequireDefault(inDOM);\n\n  var _on2 = _interopRequireDefault(on_1);\n\n  var _off2 = _interopRequireDefault(off_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var listen = function listen() {};\n\n  if (_inDOM2.default) {\n    listen = function listen(node, eventName, handler, capture) {\n      (0, _on2.default)(node, eventName, handler, capture);\n      return function () {\n        (0, _off2.default)(node, eventName, handler, capture);\n      };\n    };\n  }\n\n  exports.default = listen;\n  module.exports = exports['default'];\n});\nunwrapExports(listen_1);\nvar events = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.listen = exports.filter = exports.off = exports.on = undefined;\n\n  var _on2 = _interopRequireDefault(on_1);\n\n  var _off2 = _interopRequireDefault(off_1);\n\n  var _filter2 = _interopRequireDefault(filter$1);\n\n  var _listen2 = _interopRequireDefault(listen_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.on = _on2.default;\n  exports.off = _off2.default;\n  exports.filter = _filter2.default;\n  exports.listen = _listen2.default;\n  exports.default = {\n    on: _on2.default,\n    off: _off2.default,\n    filter: _filter2.default,\n    listen: _listen2.default\n  };\n});\nvar events$1 = unwrapExports(events);\nvar events_1 = events.listen;\nvar events_2 = events.filter;\nvar events_3 = events.off;\nvar events_4 = events.on;\nvar scrollbarSize = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (recalc) {\n    if (!size && size !== 0 || recalc) {\n      if (_inDOM2.default) {\n        var scrollDiv = document.createElement('div');\n        scrollDiv.style.position = 'absolute';\n        scrollDiv.style.top = '-9999px';\n        scrollDiv.style.width = '50px';\n        scrollDiv.style.height = '50px';\n        scrollDiv.style.overflow = 'scroll';\n        document.body.appendChild(scrollDiv);\n        size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n      }\n    }\n\n    return size;\n  };\n\n  var _inDOM2 = _interopRequireDefault(inDOM);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var size = void 0;\n  module.exports = exports['default'];\n});\nvar getScrollbarSize = unwrapExports(scrollbarSize);\nvar componentOrElement = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _createChainableTypeChecker2 = _interopRequireDefault(createChainableTypeChecker_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n\n    if (_react2.default.isValidElement(propValue)) {\n      return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`, expected a ReactComponent or a ') + 'DOMElement. You can usually obtain a ReactComponent or DOMElement ' + 'from a ReactElement by attaching a ref to it.');\n    }\n\n    if ((propType !== 'object' || typeof propValue.render !== 'function') && propValue.nodeType !== 1) {\n      return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected a ReactComponent or a ') + 'DOMElement.');\n    }\n\n    return null;\n  }\n\n  exports.default = (0, _createChainableTypeChecker2.default)(validate);\n  module.exports = exports['default'];\n});\nunwrapExports(componentOrElement);\nvar deprecated_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = deprecated;\n\n  var _warning2 = _interopRequireDefault(warning_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var warned = {};\n\n  function deprecated(validator, reason) {\n    return function validate(props, propName, componentName, location, propFullName) {\n      var componentNameSafe = componentName || '<<anonymous>>';\n      var propFullNameSafe = propFullName || propName;\n\n      if (props[propName] != null) {\n        var messageKey = componentName + '.' + propName;\n        (0, _warning2.default)(warned[messageKey], 'The ' + location + ' `' + propFullNameSafe + '` of ' + ('`' + componentNameSafe + '` is deprecated. ' + reason + '.'));\n        warned[messageKey] = true;\n      }\n\n      for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n        args[_key - 5] = arguments[_key];\n      }\n\n      return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n    };\n  }\n  /* eslint-disable no-underscore-dangle */\n\n\n  function _resetWarned() {\n    warned = {};\n  }\n\n  deprecated._resetWarned = _resetWarned;\n  /* eslint-enable no-underscore-dangle */\n\n  module.exports = exports['default'];\n});\nunwrapExports(deprecated_1);\nvar hasClass_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = hasClass;\n\n  function hasClass(element, className) {\n    if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n  }\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(hasClass_1);\nvar addClass_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = addClass;\n\n  var _hasClass2 = _interopRequireDefault(hasClass_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function addClass(element, className) {\n    if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(addClass_1);\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nvar removeClass = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};\n\nvar _class = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.hasClass = exports.removeClass = exports.addClass = undefined;\n\n  var _addClass2 = _interopRequireDefault(addClass_1);\n\n  var _removeClass2 = _interopRequireDefault(removeClass);\n\n  var _hasClass2 = _interopRequireDefault(hasClass_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.addClass = _addClass2.default;\n  exports.removeClass = _removeClass2.default;\n  exports.hasClass = _hasClass2.default;\n  exports.default = {\n    addClass: _addClass2.default,\n    removeClass: _removeClass2.default,\n    hasClass: _hasClass2.default\n  };\n});\n\nunwrapExports(_class);\nvar _class_1 = _class.hasClass;\nvar _class_2 = _class.removeClass;\nvar _class_3 = _class.addClass;\nvar isWindow = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getWindow;\n\n  function getWindow(node) {\n    return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;\n  }\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(isWindow);\nvar isOverflowing_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.default = isOverflowing;\n\n  var _isWindow2 = _interopRequireDefault(isWindow);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function isBody(node) {\n    return node && node.tagName.toLowerCase() === 'body';\n  }\n\n  function bodyIsOverflowing(node) {\n    var doc = (0, _ownerDocument2.default)(node);\n    var win = (0, _isWindow2.default)(doc);\n    var fullWidth = win.innerWidth; // Support: ie8, no innerWidth\n\n    if (!fullWidth) {\n      var documentElementRect = doc.documentElement.getBoundingClientRect();\n      fullWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n    }\n\n    return doc.body.clientWidth < fullWidth;\n  }\n\n  function isOverflowing(container) {\n    var win = (0, _isWindow2.default)(container);\n    return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;\n  }\n\n  module.exports = exports['default'];\n});\nvar isOverflowing = unwrapExports(isOverflowing_1);\nvar manageAriaHidden = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.ariaHidden = ariaHidden;\n  exports.hideSiblings = hideSiblings;\n  exports.showSiblings = showSiblings;\n  var BLACKLIST = ['template', 'script', 'style'];\n\n  var isHidable = function isHidable(_ref) {\n    var nodeType = _ref.nodeType,\n        tagName = _ref.tagName;\n    return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;\n  };\n\n  var siblings = function siblings(container, mount, cb) {\n    mount = [].concat(mount);\n    [].forEach.call(container.children, function (node) {\n      if (mount.indexOf(node) === -1 && isHidable(node)) {\n        cb(node);\n      }\n    });\n  };\n\n  function ariaHidden(show, node) {\n    if (!node) {\n      return;\n    }\n\n    if (show) {\n      node.setAttribute('aria-hidden', 'true');\n    } else {\n      node.removeAttribute('aria-hidden');\n    }\n  }\n\n  function hideSiblings(container, mountNode) {\n    siblings(container, mountNode, function (node) {\n      return ariaHidden(true, node);\n    });\n  }\n\n  function showSiblings(container, mountNode) {\n    siblings(container, mountNode, function (node) {\n      return ariaHidden(false, node);\n    });\n  }\n});\nunwrapExports(manageAriaHidden);\nvar manageAriaHidden_1 = manageAriaHidden.ariaHidden;\nvar manageAriaHidden_2 = manageAriaHidden.hideSiblings;\nvar manageAriaHidden_3 = manageAriaHidden.showSiblings;\nvar ModalManager_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _class2 = _interopRequireDefault(_class);\n\n  var _style2 = _interopRequireDefault(style_1);\n\n  var _scrollbarSize2 = _interopRequireDefault(scrollbarSize);\n\n  var _isOverflowing2 = _interopRequireDefault(isOverflowing_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function findIndexOf(arr, cb) {\n    var idx = -1;\n    arr.some(function (d, i) {\n      if (cb(d, i)) {\n        idx = i;\n        return true;\n      }\n    });\n    return idx;\n  }\n\n  function findContainer(data, modal) {\n    return findIndexOf(data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  }\n\n  function setContainerStyle(state, container) {\n    var style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // becasue we will override it\n\n    state.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (state.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt((0, _style2.default)(container, 'paddingRight') || 0, 10) + (0, _scrollbarSize2.default)() + 'px';\n    }\n\n    (0, _style2.default)(container, style);\n  }\n\n  function removeContainerStyle(_ref, container) {\n    var style = _ref.style;\n    Object.keys(style).forEach(function (key) {\n      return container.style[key] = style[key];\n    });\n  }\n  /**\n   * Proper state managment for containers and the modals in those containers.\n   *\n   * @internal Used by the Modal to ensure proper styling of containers.\n   */\n\n\n  var ModalManager = function ModalManager() {\n    var _this = this;\n\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$hideSiblingNode = _ref2.hideSiblingNodes,\n        hideSiblingNodes = _ref2$hideSiblingNode === undefined ? true : _ref2$hideSiblingNode,\n        _ref2$handleContainer = _ref2.handleContainerOverflow,\n        handleContainerOverflow = _ref2$handleContainer === undefined ? true : _ref2$handleContainer;\n\n    _classCallCheck(this, ModalManager);\n\n    this.add = function (modal, container, className) {\n      var modalIdx = _this.modals.indexOf(modal);\n\n      var containerIdx = _this.containers.indexOf(container);\n\n      if (modalIdx !== -1) {\n        return modalIdx;\n      }\n\n      modalIdx = _this.modals.length;\n\n      _this.modals.push(modal);\n\n      if (_this.hideSiblingNodes) {\n        (0, manageAriaHidden.hideSiblings)(container, modal.mountNode);\n      }\n\n      if (containerIdx !== -1) {\n        _this.data[containerIdx].modals.push(modal);\n\n        return modalIdx;\n      }\n\n      var data = {\n        modals: [modal],\n        //right now only the first modal of a container will have its classes applied\n        classes: className ? className.split(/\\s+/) : [],\n        overflowing: (0, _isOverflowing2.default)(container)\n      };\n\n      if (_this.handleContainerOverflow) {\n        setContainerStyle(data, container);\n      }\n\n      data.classes.forEach(_class2.default.addClass.bind(null, container));\n\n      _this.containers.push(container);\n\n      _this.data.push(data);\n\n      return modalIdx;\n    };\n\n    this.remove = function (modal) {\n      var modalIdx = _this.modals.indexOf(modal);\n\n      if (modalIdx === -1) {\n        return;\n      }\n\n      var containerIdx = findContainer(_this.data, modal);\n      var data = _this.data[containerIdx];\n      var container = _this.containers[containerIdx];\n      data.modals.splice(data.modals.indexOf(modal), 1);\n\n      _this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n      // clean up the container\n\n\n      if (data.modals.length === 0) {\n        data.classes.forEach(_class2.default.removeClass.bind(null, container));\n\n        if (_this.handleContainerOverflow) {\n          removeContainerStyle(data, container);\n        }\n\n        if (_this.hideSiblingNodes) {\n          (0, manageAriaHidden.showSiblings)(container, modal.mountNode);\n        }\n\n        _this.containers.splice(containerIdx, 1);\n\n        _this.data.splice(containerIdx, 1);\n      } else if (_this.hideSiblingNodes) {\n        //otherwise make sure the next top modal is visible to a SR\n        (0, manageAriaHidden.ariaHidden)(false, data.modals[data.modals.length - 1].mountNode);\n      }\n    };\n\n    this.isTopModal = function (modal) {\n      return !!_this.modals.length && _this.modals[_this.modals.length - 1] === modal;\n    };\n\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n  };\n\n  exports.default = ModalManager;\n  module.exports = exports['default'];\n});\nunwrapExports(ModalManager_1);\nvar getContainer_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.default = getContainer;\n\n  var _reactDom2 = _interopRequireDefault(ReactDOM);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function getContainer(container, defaultContainer) {\n    container = typeof container === 'function' ? container() : container;\n    return _reactDom2.default.findDOMNode(container) || defaultContainer;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(getContainer_1);\nvar LegacyPortal = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _propTypes2 = _interopRequireDefault(PropTypes);\n\n  var _componentOrElement2 = _interopRequireDefault(componentOrElement);\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _reactDom2 = _interopRequireDefault(ReactDOM);\n\n  var _getContainer2 = _interopRequireDefault(getContainer_1);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument$1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n  /**\n   * The `<Portal/>` component renders its children into a new \"subtree\" outside of current component hierarchy.\n   * You can think of it as a declarative `appendChild()`, or jQuery's `$.fn.appendTo()`.\n   * The children of `<Portal/>` component will be appended to the `container` specified.\n   */\n\n\n  var Portal = function (_React$Component) {\n    _inherits(Portal, _React$Component);\n\n    function Portal() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Portal);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._mountOverlayTarget = function () {\n        if (!_this._overlayTarget) {\n          _this._overlayTarget = document.createElement('div');\n          _this._portalContainerNode = (0, _getContainer2.default)(_this.props.container, (0, _ownerDocument2.default)(_this).body);\n\n          _this._portalContainerNode.appendChild(_this._overlayTarget);\n        }\n      }, _this._unmountOverlayTarget = function () {\n        if (_this._overlayTarget) {\n          _this._portalContainerNode.removeChild(_this._overlayTarget);\n\n          _this._overlayTarget = null;\n        }\n\n        _this._portalContainerNode = null;\n      }, _this._renderOverlay = function () {\n        var overlay = !_this.props.children ? null : _react2.default.Children.only(_this.props.children); // Save reference for future access.\n\n        if (overlay !== null) {\n          _this._mountOverlayTarget();\n\n          var initialRender = !_this._overlayInstance;\n          _this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(_this, overlay, _this._overlayTarget, function () {\n            if (initialRender && _this.props.onRendered) {\n              _this.props.onRendered();\n            }\n          });\n        } else {\n          // Unrender if the component is null for transitions to null\n          _this._unrenderOverlay();\n\n          _this._unmountOverlayTarget();\n        }\n      }, _this._unrenderOverlay = function () {\n        if (_this._overlayTarget) {\n          _reactDom2.default.unmountComponentAtNode(_this._overlayTarget);\n\n          _this._overlayInstance = null;\n        }\n      }, _this.getMountNode = function () {\n        return _this._overlayTarget;\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Portal.prototype.componentDidMount = function componentDidMount() {\n      this._isMounted = true;\n\n      this._renderOverlay();\n    };\n\n    Portal.prototype.componentDidUpdate = function componentDidUpdate() {\n      this._renderOverlay();\n    };\n\n    Portal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this._overlayTarget && nextProps.container !== this.props.container) {\n        this._portalContainerNode.removeChild(this._overlayTarget);\n\n        this._portalContainerNode = (0, _getContainer2.default)(nextProps.container, (0, _ownerDocument2.default)(this).body);\n\n        this._portalContainerNode.appendChild(this._overlayTarget);\n      }\n    };\n\n    Portal.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._isMounted = false;\n\n      this._unrenderOverlay();\n\n      this._unmountOverlayTarget();\n    };\n\n    Portal.prototype.render = function render() {\n      return null;\n    };\n\n    return Portal;\n  }(_react2.default.Component);\n\n  Portal.displayName = 'Portal';\n  Portal.propTypes = {\n    /**\n     * A Node, Component instance, or function that returns either. The `container` will have the Portal children\n     * appended to it.\n     */\n    container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),\n    onRendered: _propTypes2.default.func\n  };\n  exports.default = Portal;\n  module.exports = exports['default'];\n});\nunwrapExports(LegacyPortal);\nvar Portal_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _propTypes2 = _interopRequireDefault(PropTypes);\n\n  var _componentOrElement2 = _interopRequireDefault(componentOrElement);\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _reactDom2 = _interopRequireDefault(ReactDOM);\n\n  var _getContainer2 = _interopRequireDefault(getContainer_1);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument$1);\n\n  var _LegacyPortal2 = _interopRequireDefault(LegacyPortal);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n  /**\n   * The `<Portal/>` component renders its children into a new \"subtree\" outside of current component hierarchy.\n   * You can think of it as a declarative `appendChild()`, or jQuery's `$.fn.appendTo()`.\n   * The children of `<Portal/>` component will be appended to the `container` specified.\n   */\n\n\n  var Portal = function (_React$Component) {\n    _inherits(Portal, _React$Component);\n\n    function Portal() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Portal);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.setContainer = function () {\n        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n        _this._portalContainerNode = (0, _getContainer2.default)(props.container, (0, _ownerDocument2.default)(_this).body);\n      }, _this.getMountNode = function () {\n        return _this._portalContainerNode;\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Portal.prototype.componentDidMount = function componentDidMount() {\n      this.setContainer();\n      this.forceUpdate(this.props.onRendered);\n    };\n\n    Portal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (nextProps.container !== this.props.container) {\n        this.setContainer(nextProps);\n      }\n    };\n\n    Portal.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._portalContainerNode = null;\n    };\n\n    Portal.prototype.render = function render() {\n      return this.props.children && this._portalContainerNode ? _reactDom2.default.createPortal(this.props.children, this._portalContainerNode) : null;\n    };\n\n    return Portal;\n  }(_react2.default.Component);\n\n  Portal.displayName = 'Portal';\n  Portal.propTypes = {\n    /**\n     * A Node, Component instance, or function that returns either. The `container` will have the Portal children\n     * appended to it.\n     */\n    container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),\n    onRendered: _propTypes2.default.func\n  };\n  exports.default = _reactDom2.default.createPortal ? Portal : _LegacyPortal2.default;\n  module.exports = exports['default'];\n});\nunwrapExports(Portal_1);\nvar RefHolder_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _propTypes2 = _interopRequireDefault(PropTypes);\n\n  var _react2 = _interopRequireDefault(React);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var propTypes = {\n    children: _propTypes2.default.node\n  };\n  /**\n   * Internal helper component to allow attaching a non-conflicting ref to a\n   * child element that may not accept refs.\n   */\n\n  var RefHolder = function (_React$Component) {\n    _inherits(RefHolder, _React$Component);\n\n    function RefHolder() {\n      _classCallCheck(this, RefHolder);\n\n      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n    }\n\n    RefHolder.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return RefHolder;\n  }(_react2.default.Component);\n\n  RefHolder.propTypes = propTypes;\n  exports.default = RefHolder;\n  module.exports = exports['default'];\n});\nunwrapExports(RefHolder_1);\nvar addFocusListener_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.default = addFocusListener;\n  /**\n   * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling\n   * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8\n   *\n   * We only allow one Listener at a time to avoid stack overflows\n   */\n\n  function addFocusListener(handler) {\n    var useFocusin = !document.addEventListener;\n    var remove = void 0;\n\n    if (useFocusin) {\n      document.attachEvent('onfocusin', handler);\n\n      remove = function remove() {\n        return document.detachEvent('onfocusin', handler);\n      };\n    } else {\n      document.addEventListener('focus', handler, true);\n\n      remove = function remove() {\n        return document.removeEventListener('focus', handler, true);\n      };\n    }\n\n    return {\n      remove: remove\n    };\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(addFocusListener_1);\nvar Modal_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _activeElement2 = _interopRequireDefault(activeElement_1);\n\n  var _contains2 = _interopRequireDefault(contains);\n\n  var _inDOM2 = _interopRequireDefault(inDOM);\n\n  var _propTypes2 = _interopRequireDefault(PropTypes);\n\n  var _componentOrElement2 = _interopRequireDefault(componentOrElement);\n\n  var _deprecated2 = _interopRequireDefault(deprecated_1);\n\n  var _elementType2 = _interopRequireDefault(elementType_1);\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _reactDom2 = _interopRequireDefault(ReactDOM);\n\n  var _warning2 = _interopRequireDefault(warning_1);\n\n  var _ModalManager2 = _interopRequireDefault(ModalManager_1);\n\n  var _Portal2 = _interopRequireDefault(Portal_1);\n\n  var _RefHolder2 = _interopRequireDefault(RefHolder_1);\n\n  var _addEventListener2 = _interopRequireDefault(addEventListener);\n\n  var _addFocusListener2 = _interopRequireDefault(addFocusListener_1);\n\n  var _getContainer2 = _interopRequireDefault(getContainer_1);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument$1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n  /* eslint-disable react/prop-types */\n\n\n  var modalManager = new _ModalManager2.default();\n  /**\n   * Love them or hate them, `<Modal/>` provides a solid foundation for creating dialogs, lightboxes, or whatever else.\n   * The Modal component renders its `children` node in front of a backdrop component.\n   *\n   * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:\n   *\n   * - Manages dialog stacking when one-at-a-time just isn't enough.\n   * - Creates a backdrop, for disabling interaction below the modal.\n   * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\n   * - It disables scrolling of the page content while open.\n   * - Adds the appropriate ARIA roles are automatically.\n   * - Easily pluggable animations via a `<Transition/>` component.\n   *\n   * Note that, in the same way the backdrop element prevents users from clicking or interacting\n   * with the page content underneath the Modal, Screen readers also need to be signaled to not to\n   * interact with page content while the Modal is open. To do this, we use a common technique of applying\n   * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for\n   * a Modal to be truly modal, it should have a `container` that is _outside_ your app's\n   * React hierarchy (such as the default: document.body).\n   */\n\n  var Modal = function (_React$Component) {\n    _inherits(Modal, _React$Component);\n\n    function Modal() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Modal);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Modal.prototype.omitProps = function omitProps(props, propTypes) {\n      var keys = Object.keys(props);\n      var newProps = {};\n      keys.map(function (prop) {\n        if (!Object.prototype.hasOwnProperty.call(propTypes, prop)) {\n          newProps[prop] = props[prop];\n        }\n      });\n      return newProps;\n    };\n\n    Modal.prototype.render = function render() {\n      var _props = this.props,\n          show = _props.show,\n          container = _props.container,\n          children = _props.children,\n          Transition = _props.transition,\n          backdrop = _props.backdrop,\n          className = _props.className,\n          style = _props.style,\n          onExit = _props.onExit,\n          onExiting = _props.onExiting,\n          onEnter = _props.onEnter,\n          onEntering = _props.onEntering,\n          onEntered = _props.onEntered;\n\n      var dialog = _react2.default.Children.only(children);\n\n      var filteredProps = this.omitProps(this.props, Modal.propTypes);\n      var mountModal = show || Transition && !this.state.exited;\n\n      if (!mountModal) {\n        return null;\n      }\n\n      var _dialog$props = dialog.props,\n          role = _dialog$props.role,\n          tabIndex = _dialog$props.tabIndex;\n\n      if (role === undefined || tabIndex === undefined) {\n        dialog = (0, React.cloneElement)(dialog, {\n          role: role === undefined ? 'document' : role,\n          tabIndex: tabIndex == null ? '-1' : tabIndex\n        });\n      }\n\n      if (Transition) {\n        dialog = _react2.default.createElement(Transition, {\n          appear: true,\n          unmountOnExit: true,\n          'in': show,\n          onExit: onExit,\n          onExiting: onExiting,\n          onExited: this.handleHidden,\n          onEnter: onEnter,\n          onEntering: onEntering,\n          onEntered: onEntered\n        }, dialog);\n      }\n\n      return _react2.default.createElement(_Portal2.default, {\n        ref: this.setMountNode,\n        container: container,\n        onRendered: this.onPortalRendered\n      }, _react2.default.createElement('div', _extends({\n        ref: this.setModalNodeRef,\n        role: role || 'dialog'\n      }, filteredProps, {\n        style: style,\n        className: className\n      }), backdrop && this.renderBackdrop(), _react2.default.createElement(_RefHolder2.default, {\n        ref: this.setDialogRef\n      }, dialog)));\n    };\n\n    Modal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (nextProps.show) {\n        this.setState({\n          exited: false\n        });\n      } else if (!nextProps.transition) {\n        // Otherwise let handleHidden take care of marking exited.\n        this.setState({\n          exited: true\n        });\n      }\n    };\n\n    Modal.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {\n      if (!this.props.show && nextProps.show) {\n        this.checkForFocus();\n      }\n    };\n\n    Modal.prototype.componentDidMount = function componentDidMount() {\n      this._isMounted = true;\n\n      if (this.props.show) {\n        this.onShow();\n      }\n    };\n\n    Modal.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n      var transition = this.props.transition;\n\n      if (prevProps.show && !this.props.show && !transition) {\n        // Otherwise handleHidden will call this.\n        this.onHide();\n      } else if (!prevProps.show && this.props.show) {\n        this.onShow();\n      }\n    };\n\n    Modal.prototype.componentWillUnmount = function componentWillUnmount() {\n      var _props2 = this.props,\n          show = _props2.show,\n          transition = _props2.transition;\n      this._isMounted = false;\n\n      if (show || transition && !this.state.exited) {\n        this.onHide();\n      }\n    };\n\n    Modal.prototype.autoFocus = function autoFocus() {\n      if (!this.props.autoFocus) {\n        return;\n      }\n\n      var dialogElement = this.getDialogElement();\n      var currentActiveElement = (0, _activeElement2.default)((0, _ownerDocument2.default)(this));\n\n      if (dialogElement && !(0, _contains2.default)(dialogElement, currentActiveElement)) {\n        this.lastFocus = currentActiveElement;\n\n        if (!dialogElement.hasAttribute('tabIndex')) {\n          (0, _warning2.default)(false, 'The modal content node does not accept focus. For the benefit of ' + 'assistive technologies, the tabIndex of the node is being set ' + 'to \"-1\".');\n          dialogElement.setAttribute('tabIndex', -1);\n        }\n\n        dialogElement.focus();\n      }\n    };\n\n    Modal.prototype.restoreLastFocus = function restoreLastFocus() {\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      if (this.lastFocus && this.lastFocus.focus) {\n        this.lastFocus.focus();\n        this.lastFocus = null;\n      }\n    };\n\n    Modal.prototype.getDialogElement = function getDialogElement() {\n      return _reactDom2.default.findDOMNode(this.dialog);\n    };\n\n    Modal.prototype.isTopModal = function isTopModal() {\n      return this.props.manager.isTopModal(this);\n    };\n\n    return Modal;\n  }(_react2.default.Component);\n\n  Modal.propTypes = _extends({}, _Portal2.default.propTypes, {\n    /**\n     * Set the visibility of the Modal\n     */\n    show: _propTypes2.default.bool,\n\n    /**\n     * A Node, Component instance, or function that returns either. The Modal is appended to it's container element.\n     *\n     * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n     * page content can be placed behind a virtual backdrop as well as a visual one.\n     */\n    container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),\n\n    /**\n     * A callback fired when the Modal is opening.\n     */\n    onShow: _propTypes2.default.func,\n\n    /**\n     * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n     *\n     * The `onHide` callback only signals intent from the Modal,\n     * you must actually set the `show` prop to `false` for the Modal to close.\n     */\n    onHide: _propTypes2.default.func,\n\n    /**\n     * Include a backdrop component.\n     */\n    backdrop: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['static'])]),\n\n    /**\n     * A function that returns a backdrop component. Useful for custom\n     * backdrop rendering.\n     *\n     * ```js\n     *  renderBackdrop={props => <MyBackdrop {...props} />}\n     * ```\n     */\n    renderBackdrop: _propTypes2.default.func,\n\n    /**\n     * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n     */\n    onEscapeKeyDown: _propTypes2.default.func,\n\n    /**\n     * Support for this function will be deprecated. Please use `onEscapeKeyDown` instead\n     * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n     * @deprecated\n     */\n    onEscapeKeyUp: (0, _deprecated2.default)(_propTypes2.default.func, 'Please use onEscapeKeyDown instead for consistency'),\n\n    /**\n     * A callback fired when the backdrop, if specified, is clicked.\n     */\n    onBackdropClick: _propTypes2.default.func,\n\n    /**\n     * A style object for the backdrop component.\n     */\n    backdropStyle: _propTypes2.default.object,\n\n    /**\n     * A css class or classes for the backdrop component.\n     */\n    backdropClassName: _propTypes2.default.string,\n\n    /**\n     * A css class or set of classes applied to the modal container when the modal is open,\n     * and removed when it is closed.\n     */\n    containerClassName: _propTypes2.default.string,\n\n    /**\n     * Close the modal when escape key is pressed\n     */\n    keyboard: _propTypes2.default.bool,\n\n    /**\n     * A `react-transition-group@2.0.0` `<Transition/>` component used\n     * to control animations for the dialog component.\n     */\n    transition: _elementType2.default,\n\n    /**\n     * A `react-transition-group@2.0.0` `<Transition/>` component used\n     * to control animations for the backdrop components.\n     */\n    backdropTransition: _elementType2.default,\n\n    /**\n     * When `true` The modal will automatically shift focus to itself when it opens, and\n     * replace it to the last focused element when it closes. This also\n     * works correctly with any Modal children that have the `autoFocus` prop.\n     *\n     * Generally this should never be set to `false` as it makes the Modal less\n     * accessible to assistive technologies, like screen readers.\n     */\n    autoFocus: _propTypes2.default.bool,\n\n    /**\n     * When `true` The modal will prevent focus from leaving the Modal while open.\n     *\n     * Generally this should never be set to `false` as it makes the Modal less\n     * accessible to assistive technologies, like screen readers.\n     */\n    enforceFocus: _propTypes2.default.bool,\n\n    /**\n     * When `true` The modal will restore focus to previously focused element once\n     * modal is hidden\n     */\n    restoreFocus: _propTypes2.default.bool,\n\n    /**\n     * Callback fired before the Modal transitions in\n     */\n    onEnter: _propTypes2.default.func,\n\n    /**\n     * Callback fired as the Modal begins to transition in\n     */\n    onEntering: _propTypes2.default.func,\n\n    /**\n     * Callback fired after the Modal finishes transitioning in\n     */\n    onEntered: _propTypes2.default.func,\n\n    /**\n     * Callback fired right before the Modal transitions out\n     */\n    onExit: _propTypes2.default.func,\n\n    /**\n     * Callback fired as the Modal begins to transition out\n     */\n    onExiting: _propTypes2.default.func,\n\n    /**\n     * Callback fired after the Modal finishes transitioning out\n     */\n    onExited: _propTypes2.default.func,\n\n    /**\n     * A ModalManager instance used to track and manage the state of open\n     * Modals. Useful when customizing how modals interact within a container\n     */\n    manager: _propTypes2.default.object.isRequired\n  });\n  Modal.defaultProps = {\n    show: false,\n    backdrop: true,\n    keyboard: true,\n    autoFocus: true,\n    enforceFocus: true,\n    restoreFocus: true,\n    onHide: function onHide() {},\n    manager: modalManager,\n    renderBackdrop: function renderBackdrop(props) {\n      return _react2.default.createElement('div', props);\n    }\n  };\n\n  var _initialiseProps = function _initialiseProps() {\n    var _this2 = this;\n\n    this.state = {\n      exited: !this.props.show\n    };\n\n    this.renderBackdrop = function () {\n      var _props3 = _this2.props,\n          backdropStyle = _props3.backdropStyle,\n          backdropClassName = _props3.backdropClassName,\n          renderBackdrop = _props3.renderBackdrop,\n          Transition = _props3.backdropTransition;\n\n      var backdropRef = function backdropRef(ref) {\n        return _this2.backdrop = ref;\n      };\n\n      var backdrop = renderBackdrop({\n        ref: backdropRef,\n        style: backdropStyle,\n        className: backdropClassName,\n        onClick: _this2.handleBackdropClick\n      });\n\n      if (Transition) {\n        backdrop = _react2.default.createElement(Transition, {\n          appear: true,\n          'in': _this2.props.show\n        }, backdrop);\n      }\n\n      return backdrop;\n    };\n\n    this.onPortalRendered = function () {\n      _this2.autoFocus();\n\n      if (_this2.props.onShow) {\n        _this2.props.onShow();\n      }\n    };\n\n    this.onShow = function () {\n      var doc = (0, _ownerDocument2.default)(_this2);\n      var container = (0, _getContainer2.default)(_this2.props.container, doc.body);\n\n      _this2.props.manager.add(_this2, container, _this2.props.containerClassName);\n\n      _this2._onDocumentKeydownListener = (0, _addEventListener2.default)(doc, 'keydown', _this2.handleDocumentKeyDown);\n      _this2._onDocumentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', _this2.handleDocumentKeyUp);\n      _this2._onFocusinListener = (0, _addFocusListener2.default)(_this2.enforceFocus);\n    };\n\n    this.onHide = function () {\n      _this2.props.manager.remove(_this2);\n\n      _this2._onDocumentKeydownListener.remove();\n\n      _this2._onDocumentKeyupListener.remove();\n\n      _this2._onFocusinListener.remove();\n\n      if (_this2.props.restoreFocus) {\n        _this2.restoreLastFocus();\n      }\n    };\n\n    this.setMountNode = function (ref) {\n      _this2.mountNode = ref ? ref.getMountNode() : ref;\n    };\n\n    this.setModalNodeRef = function (ref) {\n      _this2.modalNode = ref;\n    };\n\n    this.setDialogRef = function (ref) {\n      _this2.dialog = ref;\n    };\n\n    this.handleHidden = function () {\n      _this2.setState({\n        exited: true\n      });\n\n      _this2.onHide();\n\n      if (_this2.props.onExited) {\n        var _props4;\n\n        (_props4 = _this2.props).onExited.apply(_props4, arguments);\n      }\n    };\n\n    this.handleBackdropClick = function (e) {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n\n      if (_this2.props.onBackdropClick) {\n        _this2.props.onBackdropClick(e);\n      }\n\n      if (_this2.props.backdrop === true) {\n        _this2.props.onHide();\n      }\n    };\n\n    this.handleDocumentKeyDown = function (e) {\n      if (_this2.props.keyboard && e.keyCode === 27 && _this2.isTopModal()) {\n        if (_this2.props.onEscapeKeyDown) {\n          _this2.props.onEscapeKeyDown(e);\n        }\n\n        _this2.props.onHide();\n      }\n    };\n\n    this.handleDocumentKeyUp = function (e) {\n      if (_this2.props.keyboard && e.keyCode === 27 && _this2.isTopModal()) {\n        if (_this2.props.onEscapeKeyUp) {\n          _this2.props.onEscapeKeyUp(e);\n        }\n      }\n    };\n\n    this.checkForFocus = function () {\n      if (_inDOM2.default) {\n        _this2.lastFocus = (0, _activeElement2.default)();\n      }\n    };\n\n    this.enforceFocus = function () {\n      if (!_this2.props.enforceFocus || !_this2._isMounted || !_this2.isTopModal()) {\n        return;\n      }\n\n      var dialogElement = _this2.getDialogElement();\n\n      var currentActiveElement = (0, _activeElement2.default)((0, _ownerDocument2.default)(_this2));\n\n      if (dialogElement && !(0, _contains2.default)(dialogElement, currentActiveElement)) {\n        dialogElement.focus();\n      }\n    };\n  };\n\n  Modal.Manager = _ModalManager2.default;\n  exports.default = Modal;\n  module.exports = exports['default'];\n});\nvar BaseModal = unwrapExports(Modal_1);\nvar propTypes$B = {\n  componentClass: elementType\n};\nvar defaultProps$w = {\n  componentClass: 'div'\n};\n\nvar ModalBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ModalBody, _React$Component);\n\n  function ModalBody() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ModalBody.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return ModalBody;\n}(React.Component);\n\nModalBody.propTypes = propTypes$B;\nModalBody.defaultProps = defaultProps$w;\nvar Body = bsClass('modal-body', ModalBody);\nvar propTypes$C = {\n  /**\n   * A css class to apply to the Modal dialog DOM node.\n   */\n  dialogClassName: PropTypes.string\n};\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ModalDialog, _React$Component);\n\n  function ModalDialog() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        dialogClassName = _this$props.dialogClassName,\n        className = _this$props.className,\n        style = _this$props.style,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"dialogClassName\", \"className\", \"style\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var bsClassName = prefix(bsProps);\n\n    var modalStyle = _extends({\n      display: 'block'\n    }, style);\n\n    var dialogClasses = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[bsClassName] = false, _extends2[prefix(bsProps, 'dialog')] = true, _extends2));\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      style: modalStyle,\n      className: classnames(className, bsClassName)\n    }), React.createElement(\"div\", {\n      className: classnames(dialogClassName, dialogClasses)\n    }, React.createElement(\"div\", {\n      className: prefix(bsProps, 'content'),\n      role: \"document\"\n    }, children)));\n  };\n\n  return ModalDialog;\n}(React.Component);\n\nModalDialog.propTypes = propTypes$C;\nvar ModalDialog$1 = bsClass('modal', bsSizes([Size.LARGE, Size.SMALL], ModalDialog));\nvar propTypes$D = {\n  componentClass: elementType\n};\nvar defaultProps$x = {\n  componentClass: 'div'\n};\n\nvar ModalFooter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ModalFooter, _React$Component);\n\n  function ModalFooter() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ModalFooter.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return ModalFooter;\n}(React.Component);\n\nModalFooter.propTypes = propTypes$D;\nModalFooter.defaultProps = defaultProps$x;\nvar Footer = bsClass('modal-footer', ModalFooter);\nvar propTypes$E = {\n  /**\n   * Provides an accessible label for the close\n   * button. It is used for Assistive Technology when the label text is not\n   * readable.\n   */\n  closeLabel: PropTypes.string,\n\n  /**\n   * Specify whether the Component should contain a close button\n   */\n  closeButton: PropTypes.bool,\n\n  /**\n   * A Callback fired when the close button is clicked. If used directly inside\n   * a Modal component, the onHide will automatically be propagated up to the\n   * parent Modal `onHide`.\n   */\n  onHide: PropTypes.func\n};\nvar defaultProps$y = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nvar contextTypes$3 = {\n  $bs_modal: PropTypes.shape({\n    onHide: PropTypes.func\n  })\n};\n\nvar ModalHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ModalHeader, _React$Component);\n\n  function ModalHeader() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ModalHeader.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        closeLabel = _this$props.closeLabel,\n        closeButton = _this$props.closeButton,\n        onHide = _this$props.onHide,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"closeLabel\", \"closeButton\", \"onHide\", \"className\", \"children\"]);\n\n    var modal = this.context.$bs_modal;\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), closeButton && React.createElement(CloseButton, {\n      label: closeLabel,\n      onClick: createChainedFunction(modal && modal.onHide, onHide)\n    }), children);\n  };\n\n  return ModalHeader;\n}(React.Component);\n\nModalHeader.propTypes = propTypes$E;\nModalHeader.defaultProps = defaultProps$y;\nModalHeader.contextTypes = contextTypes$3;\nvar Header = bsClass('modal-header', ModalHeader);\nvar propTypes$F = {\n  componentClass: elementType\n};\nvar defaultProps$z = {\n  componentClass: 'h4'\n};\n\nvar ModalTitle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ModalTitle, _React$Component);\n\n  function ModalTitle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ModalTitle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return ModalTitle;\n}(React.Component);\n\nModalTitle.propTypes = propTypes$F;\nModalTitle.defaultProps = defaultProps$z;\nvar Title = bsClass('modal-title', ModalTitle);\n\nvar propTypes$G = _extends({}, BaseModal.propTypes, ModalDialog$1.propTypes, {\n  /**\n   * Include a backdrop component. Specify 'static' for a backdrop that doesn't\n   * trigger an \"onHide\" when clicked.\n   */\n  backdrop: PropTypes.oneOf(['static', true, false]),\n\n  /**\n   * Add an optional extra class name to .modal-backdrop\n   * It could end up looking like class=\"modal-backdrop foo-modal-backdrop in\".\n   */\n  backdropClassName: PropTypes.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * Open and close the Modal with a slide and fade animation.\n   */\n  animation: PropTypes.bool,\n\n  /**\n   * A Component type that provides the modal content Markup. This is a useful\n   * prop when you want to use your own styles and markup to create a custom\n   * modal component.\n   */\n  dialogComponentClass: elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it\n   * opens, and replace it to the last focused element when it closes.\n   * Generally this should never be set to false as it makes the Modal less\n   * accessible to assistive technologies, like screen-readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while\n   * open. Consider leaving the default value here, as it is necessary to make\n   * the Modal work well with assistive technologies, such as screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will show itself.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A callback fired when the header closeButton or non-static backdrop is\n   * clicked. Required if either are specified.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @private\n   */\n  container: BaseModal.propTypes.container\n});\n\nvar defaultProps$A = _extends({}, BaseModal.defaultProps, {\n  animation: true,\n  dialogComponentClass: ModalDialog$1\n});\n\nvar childContextTypes$2 = {\n  $bs_modal: PropTypes.shape({\n    onHide: PropTypes.func\n  })\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return React.createElement(Fade, _extends({}, props, {\n    timeout: Modal.TRANSITION_DURATION\n  }));\n}\n\nfunction BackdropTransition(props) {\n  return React.createElement(Fade, _extends({}, props, {\n    timeout: Modal.BACKDROP_TRANSITION_DURATION\n  }));\n}\n/* eslint-enable no-use-before-define */\n\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Modal, _React$Component);\n\n  function Modal(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleEntering = _this.handleEntering.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleWindowResize = _this.handleWindowResize.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDialogClick = _this.handleDialogClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setModalRef = _this.setModalRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      style: {}\n    };\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      $bs_modal: {\n        onHide: this.props.onHide\n      }\n    };\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    // Clean up the listener if we need to.\n    this.handleExited();\n  };\n\n  _proto.setModalRef = function setModalRef(ref) {\n    this._modal = ref;\n  };\n\n  _proto.handleDialogClick = function handleDialogClick(e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    this.props.onHide();\n  };\n\n  _proto.handleEntering = function handleEntering() {\n    // FIXME: This should work even when animation is disabled.\n    events$1.on(window, 'resize', this.handleWindowResize);\n    this.updateStyle();\n  };\n\n  _proto.handleExited = function handleExited() {\n    // FIXME: This should work even when animation is disabled.\n    events$1.off(window, 'resize', this.handleWindowResize);\n  };\n\n  _proto.handleWindowResize = function handleWindowResize() {\n    this.updateStyle();\n  };\n\n  _proto.updateStyle = function updateStyle() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var dialogNode = this._modal.getDialogElement();\n\n    var dialogHeight = dialogNode.scrollHeight;\n    var document = ownerDocument(dialogNode);\n    var bodyIsOverflowing = isOverflowing(ReactDOM.findDOMNode(this.props.container || document.body));\n    var modalIsOverflowing = dialogHeight > document.documentElement.clientHeight;\n    this.setState({\n      style: {\n        paddingRight: bodyIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n        paddingLeft: !bodyIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n      }\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        backdrop = _this$props.backdrop,\n        backdropClassName = _this$props.backdropClassName,\n        animation = _this$props.animation,\n        show = _this$props.show,\n        Dialog = _this$props.dialogComponentClass,\n        className = _this$props.className,\n        style = _this$props.style,\n        children = _this$props.children,\n        onEntering = _this$props.onEntering,\n        onExited = _this$props.onExited,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"backdrop\", \"backdropClassName\", \"animation\", \"show\", \"dialogComponentClass\", \"className\", \"style\", \"children\", \"onEntering\", \"onExited\"]);\n\n    var _splitComponentProps = splitComponentProps(props, BaseModal),\n        baseModalProps = _splitComponentProps[0],\n        dialogProps = _splitComponentProps[1];\n\n    var inClassName = show && !animation && 'in';\n    return React.createElement(BaseModal, _extends({}, baseModalProps, {\n      ref: this.setModalRef,\n      show: show,\n      containerClassName: prefix(props, 'open'),\n      transition: animation ? DialogTransition : undefined,\n      backdrop: backdrop,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      backdropClassName: classnames(prefix(props, 'backdrop'), backdropClassName, inClassName),\n      onEntering: createChainedFunction(onEntering, this.handleEntering),\n      onExited: createChainedFunction(onExited, this.handleExited)\n    }), React.createElement(Dialog, _extends({}, dialogProps, {\n      style: _extends({}, this.state.style, style),\n      className: classnames(className, inClassName),\n      onClick: backdrop === true ? this.handleDialogClick : null\n    }), children));\n  };\n\n  return Modal;\n}(React.Component);\n\nModal.propTypes = propTypes$G;\nModal.defaultProps = defaultProps$A;\nModal.childContextTypes = childContextTypes$2;\nModal.Body = Body;\nModal.Header = Header;\nModal.Title = Title;\nModal.Footer = Footer;\nModal.Dialog = ModalDialog$1;\nModal.TRANSITION_DURATION = 300;\nModal.BACKDROP_TRANSITION_DURATION = 150;\nbsClass('modal', bsSizes([Size.LARGE, Size.SMALL], Modal)); // TODO: This `bsStyle` is very unlike the others. Should we rename it?\n// TODO: `pullRight` and `pullLeft` don't render right outside of `navbar`.\n// Consider renaming or replacing them.\n\nvar propTypes$H = {\n  /**\n   * Marks the NavItem with a matching `eventKey` as active. Has a\n   * higher precedence over `activeHref`.\n   */\n  activeKey: PropTypes.any,\n\n  /**\n   * Marks the child NavItem with a matching `href` prop as active.\n   */\n  activeHref: PropTypes.string,\n\n  /**\n   * NavItems are be positioned vertically.\n   */\n  stacked: PropTypes.bool,\n  justified: all(PropTypes.bool, function (_ref) {\n    var justified = _ref.justified,\n        navbar = _ref.navbar;\n    return justified && navbar ? Error('justified navbar `Nav`s are not supported') : null;\n  }),\n\n  /**\n   * A callback fired when a NavItem is selected.\n   *\n   * ```js\n   * function (\n   *  Any eventKey,\n   *  SyntheticEvent event?\n   * )\n   * ```\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * ARIA role for the Nav, in the context of a TabContainer, the default will\n   * be set to \"tablist\", but can be overridden by the Nav when set explicitly.\n   *\n   * When the role is set to \"tablist\" NavItem focus is managed according to\n   * the ARIA authoring practices for tabs:\n   * https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel\n   */\n  role: PropTypes.string,\n\n  /**\n   * Apply styling an alignment for use in a Navbar. This prop will be set\n   * automatically when the Nav is used inside a Navbar.\n   */\n  navbar: PropTypes.bool,\n\n  /**\n   * Float the Nav to the right. When `navbar` is `true` the appropriate\n   * contextual classes are added as well.\n   */\n  pullRight: PropTypes.bool,\n\n  /**\n   * Float the Nav to the left. When `navbar` is `true` the appropriate\n   * contextual classes are added as well.\n   */\n  pullLeft: PropTypes.bool\n};\nvar defaultProps$B = {\n  justified: false,\n  pullRight: false,\n  pullLeft: false,\n  stacked: false\n};\nvar contextTypes$4 = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string,\n    onSelect: PropTypes.func\n  }),\n  $bs_tabContainer: PropTypes.shape({\n    activeKey: PropTypes.any,\n    onSelect: PropTypes.func.isRequired,\n    getTabId: PropTypes.func.isRequired,\n    getPaneId: PropTypes.func.isRequired\n  })\n};\n\nvar Nav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Nav, _React$Component);\n\n  function Nav() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Nav.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this = this;\n\n    if (!this._needsRefocus) {\n      return;\n    }\n\n    this._needsRefocus = false;\n    var children = this.props.children;\n\n    var _this$getActiveProps = this.getActiveProps(),\n        activeKey = _this$getActiveProps.activeKey,\n        activeHref = _this$getActiveProps.activeHref;\n\n    var activeChild = ValidComponentChildren.find(children, function (child) {\n      return _this.isActive(child, activeKey, activeHref);\n    });\n    var childrenArray = ValidComponentChildren.toArray(children);\n    var activeChildIndex = childrenArray.indexOf(activeChild);\n    var childNodes = ReactDOM.findDOMNode(this).children;\n    var activeNode = childNodes && childNodes[activeChildIndex];\n\n    if (!activeNode || !activeNode.firstChild) {\n      return;\n    }\n\n    activeNode.firstChild.focus();\n  };\n\n  _proto.getActiveProps = function getActiveProps() {\n    var tabContainer = this.context.$bs_tabContainer;\n\n    if (tabContainer) {\n      process.env.NODE_ENV !== \"production\" ? warning_1(this.props.activeKey == null && !this.props.activeHref, 'Specifying a `<Nav>` `activeKey` or `activeHref` in the context of ' + 'a `<TabContainer>` is not supported. Instead use `<TabContainer ' + (\"activeKey={\" + this.props.activeKey + \"} />`.\")) : void 0;\n      return tabContainer;\n    }\n\n    return this.props;\n  };\n\n  _proto.getNextActiveChild = function getNextActiveChild(offset) {\n    var _this2 = this;\n\n    var children = this.props.children;\n    var validChildren = children.filter(function (child) {\n      return child.props.eventKey != null && !child.props.disabled;\n    });\n\n    var _this$getActiveProps2 = this.getActiveProps(),\n        activeKey = _this$getActiveProps2.activeKey,\n        activeHref = _this$getActiveProps2.activeHref;\n\n    var activeChild = ValidComponentChildren.find(children, function (child) {\n      return _this2.isActive(child, activeKey, activeHref);\n    }); // This assumes the active child is not disabled.\n\n    var activeChildIndex = validChildren.indexOf(activeChild);\n\n    if (activeChildIndex === -1) {\n      // Something has gone wrong. Select the first valid child we can find.\n      return validChildren[0];\n    }\n\n    var nextIndex = activeChildIndex + offset;\n    var numValidChildren = validChildren.length;\n\n    if (nextIndex >= numValidChildren) {\n      nextIndex = 0;\n    } else if (nextIndex < 0) {\n      nextIndex = numValidChildren - 1;\n    }\n\n    return validChildren[nextIndex];\n  };\n\n  _proto.getTabProps = function getTabProps(child, tabContainer, navRole, active, onSelect) {\n    var _this3 = this;\n\n    if (!tabContainer && navRole !== 'tablist') {\n      // No tab props here.\n      return null;\n    }\n\n    var _child$props = child.props,\n        id = _child$props.id,\n        controls = _child$props['aria-controls'],\n        eventKey = _child$props.eventKey,\n        role = _child$props.role,\n        onKeyDown = _child$props.onKeyDown,\n        tabIndex = _child$props.tabIndex;\n\n    if (tabContainer) {\n      process.env.NODE_ENV !== \"production\" ? warning_1(!id && !controls, 'In the context of a `<TabContainer>`, `<NavItem>`s are given ' + 'generated `id` and `aria-controls` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly, provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : void 0;\n      id = tabContainer.getTabId(eventKey);\n      controls = tabContainer.getPaneId(eventKey);\n    }\n\n    if (navRole === 'tablist') {\n      role = role || 'tab';\n      onKeyDown = createChainedFunction(function (event) {\n        return _this3.handleTabKeyDown(onSelect, event);\n      }, onKeyDown);\n      tabIndex = active ? tabIndex : -1;\n    }\n\n    return {\n      id: id,\n      role: role,\n      onKeyDown: onKeyDown,\n      'aria-controls': controls,\n      tabIndex: tabIndex\n    };\n  };\n\n  _proto.handleTabKeyDown = function handleTabKeyDown(onSelect, event) {\n    var nextActiveChild;\n\n    switch (event.keyCode) {\n      case keycode.codes.left:\n      case keycode.codes.up:\n        nextActiveChild = this.getNextActiveChild(-1);\n        break;\n\n      case keycode.codes.right:\n      case keycode.codes.down:\n        nextActiveChild = this.getNextActiveChild(1);\n        break;\n\n      default:\n        // It was a different key; don't handle this keypress.\n        return;\n    }\n\n    event.preventDefault();\n\n    if (onSelect && nextActiveChild && nextActiveChild.props.eventKey != null) {\n      onSelect(nextActiveChild.props.eventKey);\n    }\n\n    this._needsRefocus = true;\n  };\n\n  _proto.isActive = function isActive(_ref2, activeKey, activeHref) {\n    var props = _ref2.props;\n\n    if (props.active || activeKey != null && props.eventKey === activeKey || activeHref && props.href === activeHref) {\n      return true;\n    }\n\n    return props.active;\n  };\n\n  _proto.render = function render() {\n    var _extends2,\n        _this4 = this;\n\n    var _this$props = this.props,\n        stacked = _this$props.stacked,\n        justified = _this$props.justified,\n        onSelect = _this$props.onSelect,\n        propsRole = _this$props.role,\n        propsNavbar = _this$props.navbar,\n        pullRight = _this$props.pullRight,\n        pullLeft = _this$props.pullLeft,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"stacked\", \"justified\", \"onSelect\", \"role\", \"navbar\", \"pullRight\", \"pullLeft\", \"className\", \"children\"]);\n\n    var tabContainer = this.context.$bs_tabContainer;\n    var role = propsRole || (tabContainer ? 'tablist' : null);\n\n    var _this$getActiveProps3 = this.getActiveProps(),\n        activeKey = _this$getActiveProps3.activeKey,\n        activeHref = _this$getActiveProps3.activeHref;\n\n    delete props.activeKey; // Accessed via this.getActiveProps().\n\n    delete props.activeHref; // Accessed via this.getActiveProps().\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, 'stacked')] = stacked, _extends2[prefix(bsProps, 'justified')] = justified, _extends2));\n\n    var navbar = propsNavbar != null ? propsNavbar : this.context.$bs_navbar;\n    var pullLeftClassName;\n    var pullRightClassName;\n\n    if (navbar) {\n      var navbarProps = this.context.$bs_navbar || {\n        bsClass: 'navbar'\n      };\n      classes[prefix(navbarProps, 'nav')] = true;\n      pullRightClassName = prefix(navbarProps, 'right');\n      pullLeftClassName = prefix(navbarProps, 'left');\n    } else {\n      pullRightClassName = 'pull-right';\n      pullLeftClassName = 'pull-left';\n    }\n\n    classes[pullRightClassName] = pullRight;\n    classes[pullLeftClassName] = pullLeft;\n    return React.createElement(\"ul\", _extends({}, elementProps, {\n      role: role,\n      className: classnames(className, classes)\n    }), ValidComponentChildren.map(children, function (child) {\n      var active = _this4.isActive(child, activeKey, activeHref);\n\n      var childOnSelect = createChainedFunction(child.props.onSelect, onSelect, navbar && navbar.onSelect, tabContainer && tabContainer.onSelect);\n      return cloneElement(child, _extends({}, _this4.getTabProps(child, tabContainer, role, active, childOnSelect), {\n        active: active,\n        activeKey: activeKey,\n        activeHref: activeHref,\n        onSelect: childOnSelect\n      }));\n    }));\n  };\n\n  return Nav;\n}(React.Component);\n\nNav.propTypes = propTypes$H;\nNav.defaultProps = defaultProps$B;\nNav.contextTypes = contextTypes$4;\nvar Nav$1 = bsClass('nav', bsStyles(['tabs', 'pills'], Nav));\nvar contextTypes$5 = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\n\nvar NavbarBrand =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavbarBrand, _React$Component);\n\n  function NavbarBrand() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavbarBrand.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"children\"]);\n\n    var navbarProps = this.context.$bs_navbar || {\n      bsClass: 'navbar'\n    };\n    var bsClassName = prefix(navbarProps, 'brand');\n\n    if (React.isValidElement(children)) {\n      return React.cloneElement(children, {\n        className: classnames(children.props.className, className, bsClassName)\n      });\n    }\n\n    return React.createElement(\"span\", _extends({}, props, {\n      className: classnames(className, bsClassName)\n    }), children);\n  };\n\n  return NavbarBrand;\n}(React.Component);\n\nNavbarBrand.contextTypes = contextTypes$5;\nvar contextTypes$6 = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string,\n    expanded: PropTypes.bool\n  })\n};\n\nvar NavbarCollapse =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavbarCollapse, _React$Component);\n\n  function NavbarCollapse() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavbarCollapse.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n    var navbarProps = this.context.$bs_navbar || {\n      bsClass: 'navbar'\n    };\n    var bsClassName = prefix(navbarProps, 'collapse');\n    return React.createElement(Collapse, _extends({\n      in: navbarProps.expanded\n    }, props), React.createElement(\"div\", {\n      className: bsClassName\n    }, children));\n  };\n\n  return NavbarCollapse;\n}(React.Component);\n\nNavbarCollapse.contextTypes = contextTypes$6;\nvar contextTypes$7 = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\n\nvar NavbarHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavbarHeader, _React$Component);\n\n  function NavbarHeader() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavbarHeader.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var navbarProps = this.context.$bs_navbar || {\n      bsClass: 'navbar'\n    };\n    var bsClassName = prefix(navbarProps, 'header');\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classnames(className, bsClassName)\n    }));\n  };\n\n  return NavbarHeader;\n}(React.Component);\n\nNavbarHeader.contextTypes = contextTypes$7;\nvar propTypes$I = {\n  onClick: PropTypes.func,\n\n  /**\n   * The toggle content, if left empty it will render the default toggle (seen above).\n   */\n  children: PropTypes.node\n};\nvar contextTypes$8 = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string,\n    expanded: PropTypes.bool,\n    onToggle: PropTypes.func.isRequired\n  })\n};\n\nvar NavbarToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavbarToggle, _React$Component);\n\n  function NavbarToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavbarToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        onClick = _this$props.onClick,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"onClick\", \"className\", \"children\"]);\n\n    var navbarProps = this.context.$bs_navbar || {\n      bsClass: 'navbar'\n    };\n\n    var buttonProps = _extends({\n      type: 'button'\n    }, props, {\n      onClick: createChainedFunction(onClick, navbarProps.onToggle),\n      className: classnames(className, prefix(navbarProps, 'toggle'), !navbarProps.expanded && 'collapsed')\n    });\n\n    if (children) {\n      return React.createElement(\"button\", buttonProps, children);\n    }\n\n    return React.createElement(\"button\", buttonProps, React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, \"Toggle navigation\"), React.createElement(\"span\", {\n      className: \"icon-bar\"\n    }), React.createElement(\"span\", {\n      className: \"icon-bar\"\n    }), React.createElement(\"span\", {\n      className: \"icon-bar\"\n    }));\n  };\n\n  return NavbarToggle;\n}(React.Component);\n\nNavbarToggle.propTypes = propTypes$I;\nNavbarToggle.contextTypes = contextTypes$8;\nvar propTypes$J = {\n  /**\n   * Create a fixed navbar along the top of the screen, that scrolls with the\n   * page\n   */\n  fixedTop: PropTypes.bool,\n\n  /**\n   * Create a fixed navbar along the bottom of the screen, that scrolls with\n   * the page\n   */\n  fixedBottom: PropTypes.bool,\n\n  /**\n   * Create a full-width navbar that scrolls away with the page\n   */\n  staticTop: PropTypes.bool,\n\n  /**\n   * An alternative dark visual style for the Navbar\n   */\n  inverse: PropTypes.bool,\n\n  /**\n   * Allow the Navbar to fluidly adjust to the page or container width, instead\n   * of at the predefined screen breakpoints\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Set a custom element for this component.\n   */\n  componentClass: elementType,\n\n  /**\n   * A callback fired when the `<Navbar>` body collapses or expands. Fired when\n   * a `<Navbar.Toggle>` is clicked and called with the new `expanded`\n   * boolean value.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * A callback fired when a descendant of a child `<Nav>` is selected. Should\n   * be used to execute complex closing or other miscellaneous actions desired\n   * after selecting a descendant of `<Nav>`. Does nothing if no `<Nav>` or `<Nav>`\n   * descendants exist. The callback is called with an eventKey, which is a\n   * prop from the selected `<Nav>` descendant, and an event.\n   *\n   * ```js\n   * function (\n   *  Any eventKey,\n   *  SyntheticEvent event?\n   * )\n   * ```\n   *\n   * For basic closing behavior after all `<Nav>` descendant onSelect events in\n   * mobile viewports, try using collapseOnSelect.\n   *\n   * Note: If you are manually closing the navbar using this `OnSelect` prop,\n   * ensure that you are setting `expanded` to false and not *toggling* between\n   * true and false.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Sets `expanded` to `false` after the onSelect event of a descendant of a\n   * child `<Nav>`. Does nothing if no `<Nav>` or `<Nav>` descendants exist.\n   *\n   * The onSelect callback should be used instead for more complex operations\n   * that need to be executed after the `select` event of `<Nav>` descendants.\n   */\n  collapseOnSelect: PropTypes.bool,\n\n  /**\n   * Explicitly set the visiblity of the navbar body\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n  role: PropTypes.string\n};\nvar defaultProps$C = {\n  componentClass: 'nav',\n  fixedTop: false,\n  fixedBottom: false,\n  staticTop: false,\n  inverse: false,\n  fluid: false,\n  collapseOnSelect: false\n};\nvar childContextTypes$3 = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string,\n    expanded: PropTypes.bool,\n    onToggle: PropTypes.func.isRequired,\n    onSelect: PropTypes.func\n  })\n};\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Navbar, _React$Component);\n\n  function Navbar(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCollapse = _this.handleCollapse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Navbar.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        bsClass$$1 = _this$props.bsClass,\n        expanded = _this$props.expanded,\n        onSelect = _this$props.onSelect,\n        collapseOnSelect = _this$props.collapseOnSelect;\n    return {\n      $bs_navbar: {\n        bsClass: bsClass$$1,\n        expanded: expanded,\n        onToggle: this.handleToggle,\n        onSelect: createChainedFunction(onSelect, collapseOnSelect ? this.handleCollapse : null)\n      }\n    };\n  };\n\n  _proto.handleCollapse = function handleCollapse() {\n    var _this$props2 = this.props,\n        onToggle = _this$props2.onToggle,\n        expanded = _this$props2.expanded;\n\n    if (expanded) {\n      onToggle(false);\n    }\n  };\n\n  _proto.handleToggle = function handleToggle() {\n    var _this$props3 = this.props,\n        onToggle = _this$props3.onToggle,\n        expanded = _this$props3.expanded;\n    onToggle(!expanded);\n  };\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props4 = this.props,\n        Component$$1 = _this$props4.componentClass,\n        fixedTop = _this$props4.fixedTop,\n        fixedBottom = _this$props4.fixedBottom,\n        staticTop = _this$props4.staticTop,\n        inverse = _this$props4.inverse,\n        fluid = _this$props4.fluid,\n        className = _this$props4.className,\n        children = _this$props4.children,\n        props = _objectWithoutPropertiesLoose(_this$props4, [\"componentClass\", \"fixedTop\", \"fixedBottom\", \"staticTop\", \"inverse\", \"fluid\", \"className\", \"children\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['expanded', 'onToggle', 'onSelect', 'collapseOnSelect']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1]; // will result in some false positives but that seems better\n    // than false negatives. strict `undefined` check allows explicit\n    // \"nulling\" of the role if the user really doesn't want one\n\n\n    if (elementProps.role === undefined && Component$$1 !== 'nav') {\n      elementProps.role = 'navigation';\n    }\n\n    if (inverse) {\n      bsProps.bsStyle = Style.INVERSE;\n    }\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, 'fixed-top')] = fixedTop, _extends2[prefix(bsProps, 'fixed-bottom')] = fixedBottom, _extends2[prefix(bsProps, 'static-top')] = staticTop, _extends2));\n\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), React.createElement(Grid$1, {\n      fluid: fluid\n    }, children));\n  };\n\n  return Navbar;\n}(React.Component);\n\nNavbar.propTypes = propTypes$J;\nNavbar.defaultProps = defaultProps$C;\nNavbar.childContextTypes = childContextTypes$3;\nbsClass('navbar', Navbar);\nvar UncontrollableNavbar = uncontrollable(Navbar, {\n  expanded: 'onToggle'\n});\n\nfunction createSimpleWrapper(tag, suffix, displayName) {\n  var Wrapper = function Wrapper(_ref, _ref2) {\n    var Component$$1 = _ref.componentClass,\n        className = _ref.className,\n        pullRight = _ref.pullRight,\n        pullLeft = _ref.pullLeft,\n        props = _objectWithoutPropertiesLoose(_ref, [\"componentClass\", \"className\", \"pullRight\", \"pullLeft\"]);\n\n    var _ref2$$bs_navbar = _ref2.$bs_navbar,\n        navbarProps = _ref2$$bs_navbar === void 0 ? {\n      bsClass: 'navbar'\n    } : _ref2$$bs_navbar;\n    return React.createElement(Component$$1, _extends({}, props, {\n      className: classnames(className, prefix(navbarProps, suffix), pullRight && prefix(navbarProps, 'right'), pullLeft && prefix(navbarProps, 'left'))\n    }));\n  };\n\n  Wrapper.displayName = displayName;\n  Wrapper.propTypes = {\n    componentClass: elementType,\n    pullRight: PropTypes.bool,\n    pullLeft: PropTypes.bool\n  };\n  Wrapper.defaultProps = {\n    componentClass: tag,\n    pullRight: false,\n    pullLeft: false\n  };\n  Wrapper.contextTypes = {\n    $bs_navbar: PropTypes.shape({\n      bsClass: PropTypes.string\n    })\n  };\n  return Wrapper;\n}\n\nUncontrollableNavbar.Brand = NavbarBrand;\nUncontrollableNavbar.Header = NavbarHeader;\nUncontrollableNavbar.Toggle = NavbarToggle;\nUncontrollableNavbar.Collapse = NavbarCollapse;\nUncontrollableNavbar.Form = createSimpleWrapper('div', 'form', 'NavbarForm');\nUncontrollableNavbar.Text = createSimpleWrapper('p', 'text', 'NavbarText');\nUncontrollableNavbar.Link = createSimpleWrapper('a', 'link', 'NavbarLink'); // Set bsStyles here so they can be overridden.\n\nbsStyles([Style.DEFAULT, Style.INVERSE], Style.DEFAULT, UncontrollableNavbar);\n\nvar propTypes$K = _extends({}, UncontrolledDropdown.propTypes, {\n  // Toggle props.\n  title: PropTypes.node.isRequired,\n  noCaret: PropTypes.bool,\n  active: PropTypes.bool,\n  activeKey: PropTypes.any,\n  activeHref: PropTypes.string,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: PropTypes.node\n});\n\nvar NavDropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavDropdown, _React$Component);\n\n  function NavDropdown() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavDropdown.prototype;\n\n  _proto.isActive = function isActive(_ref, activeKey, activeHref) {\n    var _this = this;\n\n    var props = _ref.props;\n\n    if (props.active || activeKey != null && props.eventKey === activeKey || activeHref && props.href === activeHref) {\n      return true;\n    }\n\n    if (ValidComponentChildren.some(props.children, function (child) {\n      return _this.isActive(child, activeKey, activeHref);\n    })) {\n      return true;\n    }\n\n    return props.active;\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        title = _this$props.title,\n        activeKey = _this$props.activeKey,\n        activeHref = _this$props.activeHref,\n        className = _this$props.className,\n        style = _this$props.style,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"title\", \"activeKey\", \"activeHref\", \"className\", \"style\", \"children\"]);\n\n    var active = this.isActive(this, activeKey, activeHref);\n    delete props.active; // Accessed via this.isActive().\n\n    delete props.eventKey; // Accessed via this.isActive().\n\n    var _splitComponentProps = splitComponentProps(props, UncontrolledDropdown.ControlledComponent),\n        dropdownProps = _splitComponentProps[0],\n        toggleProps = _splitComponentProps[1]; // Unlike for the other dropdowns, styling needs to go to the `<Dropdown>`\n    // rather than the `<Dropdown.Toggle>`.\n\n\n    return React.createElement(UncontrolledDropdown, _extends({}, dropdownProps, {\n      componentClass: \"li\",\n      className: classnames(className, {\n        active: active\n      }),\n      style: style\n    }), React.createElement(UncontrolledDropdown.Toggle, _extends({}, toggleProps, {\n      useAnchor: true\n    }), title), React.createElement(UncontrolledDropdown.Menu, null, ValidComponentChildren.map(children, function (child) {\n      return React.cloneElement(child, {\n        active: _this2.isActive(child, activeKey, activeHref)\n      });\n    })));\n  };\n\n  return NavDropdown;\n}(React.Component);\n\nNavDropdown.propTypes = propTypes$K;\nvar propTypes$L = {\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  role: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  onSelect: PropTypes.func,\n  eventKey: PropTypes.any\n};\nvar defaultProps$D = {\n  active: false,\n  disabled: false\n};\n\nvar NavItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavItem, _React$Component);\n\n  function NavItem(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = NavItem.prototype;\n\n  _proto.handleClick = function handleClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.eventKey, e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        disabled = _this$props.disabled,\n        onClick = _this$props.onClick,\n        className = _this$props.className,\n        style = _this$props.style,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"disabled\", \"onClick\", \"className\", \"style\"]);\n\n    delete props.onSelect;\n    delete props.eventKey; // These are injected down by `<Nav>` for building `<SubNav>`s.\n\n    delete props.activeKey;\n    delete props.activeHref;\n\n    if (!props.role) {\n      if (props.href === '#') {\n        props.role = 'button';\n      }\n    } else if (props.role === 'tab') {\n      props['aria-selected'] = active;\n    }\n\n    return React.createElement(\"li\", {\n      role: \"presentation\",\n      className: classnames(className, {\n        active: active,\n        disabled: disabled\n      }),\n      style: style\n    }, React.createElement(SafeAnchor, _extends({}, props, {\n      disabled: disabled,\n      onClick: createChainedFunction(onClick, this.handleClick)\n    })));\n  };\n\n  return NavItem;\n}(React.Component);\n\nNavItem.propTypes = propTypes$L;\nNavItem.defaultProps = defaultProps$D;\nvar offset_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = offset;\n\n  var _contains2 = _interopRequireDefault(contains);\n\n  var _isWindow2 = _interopRequireDefault(isWindow);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function offset(node) {\n    var doc = (0, _ownerDocument2.default)(node),\n        win = (0, _isWindow2.default)(doc),\n        docElem = doc && doc.documentElement,\n        box = {\n      top: 0,\n      left: 0,\n      height: 0,\n      width: 0\n    };\n    if (!doc) return; // Make sure it's not a disconnected DOM node\n\n    if (!(0, _contains2.default)(docElem, node)) return box;\n    if (node.getBoundingClientRect !== undefined) box = node.getBoundingClientRect(); // IE8 getBoundingClientRect doesn't support width & height\n\n    box = {\n      top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),\n      left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),\n      width: (box.width == null ? node.offsetWidth : box.width) || 0,\n      height: (box.height == null ? node.offsetHeight : box.height) || 0\n    };\n    return box;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(offset_1);\nvar offsetParent_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = offsetParent;\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument_1);\n\n  var _style2 = _interopRequireDefault(style_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function nodeName(node) {\n    return node.nodeName && node.nodeName.toLowerCase();\n  }\n\n  function offsetParent(node) {\n    var doc = (0, _ownerDocument2.default)(node),\n        offsetParent = node && node.offsetParent;\n\n    while (offsetParent && nodeName(node) !== 'html' && (0, _style2.default)(offsetParent, 'position') === 'static') {\n      offsetParent = offsetParent.offsetParent;\n    }\n\n    return offsetParent || doc.documentElement;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(offsetParent_1);\nvar scrollTop_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = scrollTop;\n\n  var _isWindow2 = _interopRequireDefault(isWindow);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function scrollTop(node, val) {\n    var win = (0, _isWindow2.default)(node);\n    if (val === undefined) return win ? 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop : node.scrollTop;\n    if (win) win.scrollTo('pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft, val);else node.scrollTop = val;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(scrollTop_1);\nvar scrollLeft = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = scrollTop;\n\n  var _isWindow2 = _interopRequireDefault(isWindow);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function scrollTop(node, val) {\n    var win = (0, _isWindow2.default)(node);\n    if (val === undefined) return win ? 'pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft : node.scrollLeft;\n    if (win) win.scrollTo(val, 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop);else node.scrollLeft = val;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(scrollLeft);\nvar position_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  exports.default = position;\n\n  var _offset2 = _interopRequireDefault(offset_1);\n\n  var _offsetParent2 = _interopRequireDefault(offsetParent_1);\n\n  var _scrollTop2 = _interopRequireDefault(scrollTop_1);\n\n  var _scrollLeft2 = _interopRequireDefault(scrollLeft);\n\n  var _style2 = _interopRequireDefault(style_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function nodeName(node) {\n    return node.nodeName && node.nodeName.toLowerCase();\n  }\n\n  function position(node, offsetParent) {\n    var parentOffset = {\n      top: 0,\n      left: 0\n    },\n        offset; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n    // because it is its only offset parent\n\n    if ((0, _style2.default)(node, 'position') === 'fixed') {\n      offset = node.getBoundingClientRect();\n    } else {\n      offsetParent = offsetParent || (0, _offsetParent2.default)(node);\n      offset = (0, _offset2.default)(node);\n      if (nodeName(offsetParent) !== 'html') parentOffset = (0, _offset2.default)(offsetParent);\n      parentOffset.top += parseInt((0, _style2.default)(offsetParent, 'borderTopWidth'), 10) - (0, _scrollTop2.default)(offsetParent) || 0;\n      parentOffset.left += parseInt((0, _style2.default)(offsetParent, 'borderLeftWidth'), 10) - (0, _scrollLeft2.default)(offsetParent) || 0;\n    } // Subtract parent offsets and node margins\n\n\n    return _extends({}, offset, {\n      top: offset.top - parentOffset.top - (parseInt((0, _style2.default)(node, 'marginTop'), 10) || 0),\n      left: offset.left - parentOffset.left - (parseInt((0, _style2.default)(node, 'marginLeft'), 10) || 0)\n    });\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(position_1);\nvar calculatePosition_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.default = calculatePosition;\n\n  var _offset2 = _interopRequireDefault(offset_1);\n\n  var _position2 = _interopRequireDefault(position_1);\n\n  var _scrollTop2 = _interopRequireDefault(scrollTop_1);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument$1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function getContainerDimensions(containerNode) {\n    var width = void 0,\n        height = void 0,\n        scroll = void 0;\n\n    if (containerNode.tagName === 'BODY') {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      scroll = (0, _scrollTop2.default)((0, _ownerDocument2.default)(containerNode).documentElement) || (0, _scrollTop2.default)(containerNode);\n    } else {\n      var _getOffset = (0, _offset2.default)(containerNode);\n\n      width = _getOffset.width;\n      height = _getOffset.height;\n      scroll = (0, _scrollTop2.default)(containerNode);\n    }\n\n    return {\n      width: width,\n      height: height,\n      scroll: scroll\n    };\n  }\n\n  function getTopDelta(top, overlayHeight, container, padding) {\n    var containerDimensions = getContainerDimensions(container);\n    var containerScroll = containerDimensions.scroll;\n    var containerHeight = containerDimensions.height;\n    var topEdgeOffset = top - padding - containerScroll;\n    var bottomEdgeOffset = top + padding - containerScroll + overlayHeight;\n\n    if (topEdgeOffset < 0) {\n      return -topEdgeOffset;\n    } else if (bottomEdgeOffset > containerHeight) {\n      return containerHeight - bottomEdgeOffset;\n    } else {\n      return 0;\n    }\n  }\n\n  function getLeftDelta(left, overlayWidth, container, padding) {\n    var containerDimensions = getContainerDimensions(container);\n    var containerWidth = containerDimensions.width;\n    var leftEdgeOffset = left - padding;\n    var rightEdgeOffset = left + padding + overlayWidth;\n\n    if (leftEdgeOffset < 0) {\n      return -leftEdgeOffset;\n    } else if (rightEdgeOffset > containerWidth) {\n      return containerWidth - rightEdgeOffset;\n    }\n\n    return 0;\n  }\n\n  function calculatePosition(placement, overlayNode, target, container, padding) {\n    var childOffset = container.tagName === 'BODY' ? (0, _offset2.default)(target) : (0, _position2.default)(target, container);\n\n    var _getOffset2 = (0, _offset2.default)(overlayNode),\n        overlayHeight = _getOffset2.height,\n        overlayWidth = _getOffset2.width;\n\n    var positionLeft = void 0,\n        positionTop = void 0,\n        arrowOffsetLeft = void 0,\n        arrowOffsetTop = void 0;\n\n    if (placement === 'left' || placement === 'right') {\n      positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;\n\n      if (placement === 'left') {\n        positionLeft = childOffset.left - overlayWidth;\n      } else {\n        positionLeft = childOffset.left + childOffset.width;\n      }\n\n      var topDelta = getTopDelta(positionTop, overlayHeight, container, padding);\n      positionTop += topDelta;\n      arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + '%';\n      arrowOffsetLeft = void 0;\n    } else if (placement === 'top' || placement === 'bottom') {\n      positionLeft = childOffset.left + (childOffset.width - overlayWidth) / 2;\n\n      if (placement === 'top') {\n        positionTop = childOffset.top - overlayHeight;\n      } else {\n        positionTop = childOffset.top + childOffset.height;\n      }\n\n      var leftDelta = getLeftDelta(positionLeft, overlayWidth, container, padding);\n      positionLeft += leftDelta;\n      arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + '%';\n      arrowOffsetTop = void 0;\n    } else {\n      throw new Error('calcOverlayPosition(): No such placement of \"' + placement + '\" found.');\n    }\n\n    return {\n      positionLeft: positionLeft,\n      positionTop: positionTop,\n      arrowOffsetLeft: arrowOffsetLeft,\n      arrowOffsetTop: arrowOffsetTop\n    };\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(calculatePosition_1);\nvar Position_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _classnames2 = _interopRequireDefault(classnames);\n\n  var _propTypes2 = _interopRequireDefault(PropTypes);\n\n  var _componentOrElement2 = _interopRequireDefault(componentOrElement);\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _reactDom2 = _interopRequireDefault(ReactDOM);\n\n  var _calculatePosition2 = _interopRequireDefault(calculatePosition_1);\n\n  var _getContainer2 = _interopRequireDefault(getContainer_1);\n\n  var _ownerDocument2 = _interopRequireDefault(ownerDocument$1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n  /**\n   * The Position component calculates the coordinates for its child, to position\n   * it relative to a `target` component or node. Useful for creating callouts\n   * and tooltips, the Position component injects a `style` props with `left` and\n   * `top` values for positioning your component.\n   *\n   * It also injects \"arrow\" `left`, and `top` values for styling callout arrows\n   * for giving your components a sense of directionality.\n   */\n\n\n  var Position = function (_React$Component) {\n    _inherits(Position, _React$Component);\n\n    function Position(props, context) {\n      _classCallCheck(this, Position);\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n      _this.getTarget = function () {\n        var target = _this.props.target;\n        var targetElement = typeof target === 'function' ? target() : target;\n        return targetElement && _reactDom2.default.findDOMNode(targetElement) || null;\n      };\n\n      _this.maybeUpdatePosition = function (placementChanged) {\n        var target = _this.getTarget();\n\n        if (!_this.props.shouldUpdatePosition && target === _this._lastTarget && !placementChanged) {\n          return;\n        }\n\n        _this.updatePosition(target);\n      };\n\n      _this.state = {\n        positionLeft: 0,\n        positionTop: 0,\n        arrowOffsetLeft: null,\n        arrowOffsetTop: null\n      };\n      _this._needsFlush = false;\n      _this._lastTarget = null;\n      return _this;\n    }\n\n    Position.prototype.componentDidMount = function componentDidMount() {\n      this.updatePosition(this.getTarget());\n    };\n\n    Position.prototype.componentWillReceiveProps = function componentWillReceiveProps() {\n      this._needsFlush = true;\n    };\n\n    Position.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n      if (this._needsFlush) {\n        this._needsFlush = false;\n        this.maybeUpdatePosition(this.props.placement !== prevProps.placement);\n      }\n    };\n\n    Position.prototype.render = function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          props = _objectWithoutProperties(_props, ['children', 'className']);\n\n      var _state = this.state,\n          positionLeft = _state.positionLeft,\n          positionTop = _state.positionTop,\n          arrowPosition = _objectWithoutProperties(_state, ['positionLeft', 'positionTop']); // These should not be forwarded to the child.\n\n\n      delete props.target;\n      delete props.container;\n      delete props.containerPadding;\n      delete props.shouldUpdatePosition;\n\n      var child = _react2.default.Children.only(children);\n\n      return (0, React.cloneElement)(child, _extends({}, props, arrowPosition, {\n        // FIXME: Don't forward `positionLeft` and `positionTop` via both props\n        // and `props.style`.\n        positionLeft: positionLeft,\n        positionTop: positionTop,\n        className: (0, _classnames2.default)(className, child.props.className),\n        style: _extends({}, child.props.style, {\n          left: positionLeft,\n          top: positionTop\n        })\n      }));\n    };\n\n    Position.prototype.updatePosition = function updatePosition(target) {\n      this._lastTarget = target;\n\n      if (!target) {\n        this.setState({\n          positionLeft: 0,\n          positionTop: 0,\n          arrowOffsetLeft: null,\n          arrowOffsetTop: null\n        });\n        return;\n      }\n\n      var overlay = _reactDom2.default.findDOMNode(this);\n\n      var container = (0, _getContainer2.default)(this.props.container, (0, _ownerDocument2.default)(this).body);\n      this.setState((0, _calculatePosition2.default)(this.props.placement, overlay, target, container, this.props.containerPadding));\n    };\n\n    return Position;\n  }(_react2.default.Component);\n\n  Position.propTypes = {\n    /**\n     * A node, element, or function that returns either. The child will be\n     * be positioned next to the `target` specified.\n     */\n    target: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),\n\n    /**\n     * \"offsetParent\" of the component\n     */\n    container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),\n\n    /**\n     * Minimum spacing in pixels between container border and component border\n     */\n    containerPadding: _propTypes2.default.number,\n\n    /**\n     * How to position the component relative to the target\n     */\n    placement: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Whether the position should be changed on each update\n     */\n    shouldUpdatePosition: _propTypes2.default.bool\n  };\n  Position.displayName = 'Position';\n  Position.defaultProps = {\n    containerPadding: 0,\n    placement: 'right',\n    shouldUpdatePosition: false\n  };\n  exports.default = Position;\n  module.exports = exports['default'];\n});\nunwrapExports(Position_1);\nvar Overlay_1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _propTypes2 = _interopRequireDefault(PropTypes);\n\n  var _elementType2 = _interopRequireDefault(elementType_1);\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _Portal2 = _interopRequireDefault(Portal_1);\n\n  var _Position2 = _interopRequireDefault(Position_1);\n\n  var _RootCloseWrapper2 = _interopRequireDefault(RootCloseWrapper_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n  /**\n   * Built on top of `<Position/>` and `<Portal/>`, the overlay component is great for custom tooltip overlays.\n   */\n\n\n  var Overlay = function (_React$Component) {\n    _inherits(Overlay, _React$Component);\n\n    function Overlay(props, context) {\n      _classCallCheck(this, Overlay);\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n      _this.handleHidden = function () {\n        _this.setState({\n          exited: true\n        });\n\n        if (_this.props.onExited) {\n          var _this$props;\n\n          (_this$props = _this.props).onExited.apply(_this$props, arguments);\n        }\n      };\n\n      _this.state = {\n        exited: !props.show\n      };\n      _this.onHiddenListener = _this.handleHidden.bind(_this);\n      return _this;\n    }\n\n    Overlay.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (nextProps.show) {\n        this.setState({\n          exited: false\n        });\n      } else if (!nextProps.transition) {\n        // Otherwise let handleHidden take care of marking exited.\n        this.setState({\n          exited: true\n        });\n      }\n    };\n\n    Overlay.prototype.render = function render() {\n      var _props = this.props,\n          container = _props.container,\n          containerPadding = _props.containerPadding,\n          target = _props.target,\n          placement = _props.placement,\n          shouldUpdatePosition = _props.shouldUpdatePosition,\n          rootClose = _props.rootClose,\n          children = _props.children,\n          Transition = _props.transition,\n          props = _objectWithoutProperties(_props, ['container', 'containerPadding', 'target', 'placement', 'shouldUpdatePosition', 'rootClose', 'children', 'transition']); // Don't un-render the overlay while it's transitioning out.\n\n\n      var mountOverlay = props.show || Transition && !this.state.exited;\n\n      if (!mountOverlay) {\n        // Don't bother showing anything if we don't have to.\n        return null;\n      }\n\n      var child = children; // Position is be inner-most because it adds inline styles into the child,\n      // which the other wrappers don't forward correctly.\n\n      child = _react2.default.createElement(_Position2.default, {\n        container: container,\n        containerPadding: containerPadding,\n        target: target,\n        placement: placement,\n        shouldUpdatePosition: shouldUpdatePosition\n      }, child);\n\n      if (Transition) {\n        var onExit = props.onExit,\n            onExiting = props.onExiting,\n            onEnter = props.onEnter,\n            onEntering = props.onEntering,\n            onEntered = props.onEntered; // This animates the child node by injecting props, so it must precede\n        // anything that adds a wrapping div.\n\n        child = _react2.default.createElement(Transition, {\n          'in': props.show,\n          appear: true,\n          onExit: onExit,\n          onExiting: onExiting,\n          onExited: this.onHiddenListener,\n          onEnter: onEnter,\n          onEntering: onEntering,\n          onEntered: onEntered\n        }, child);\n      } // This goes after everything else because it adds a wrapping div.\n\n\n      if (rootClose) {\n        child = _react2.default.createElement(_RootCloseWrapper2.default, {\n          onRootClose: props.onHide\n        }, child);\n      }\n\n      return _react2.default.createElement(_Portal2.default, {\n        container: container\n      }, child);\n    };\n\n    return Overlay;\n  }(_react2.default.Component);\n\n  Overlay.propTypes = _extends({}, _Portal2.default.propTypes, _Position2.default.propTypes, {\n    /**\n     * Set the visibility of the Overlay\n     */\n    show: _propTypes2.default.bool,\n\n    /**\n     * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay\n     */\n    rootClose: _propTypes2.default.bool,\n\n    /**\n     * A Callback fired by the Overlay when it wishes to be hidden.\n     *\n     * __required__ when `rootClose` is `true`.\n     *\n     * @type func\n     */\n    onHide: function onHide(props) {\n      var propType = _propTypes2.default.func;\n\n      if (props.rootClose) {\n        propType = propType.isRequired;\n      }\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return propType.apply(undefined, [props].concat(args));\n    },\n\n    /**\n     * A `react-transition-group@2.0.0` `<Transition/>` component\n     * used to animate the overlay as it changes visibility.\n     */\n    transition: _elementType2.default,\n\n    /**\n     * Callback fired before the Overlay transitions in\n     */\n    onEnter: _propTypes2.default.func,\n\n    /**\n     * Callback fired as the Overlay begins to transition in\n     */\n    onEntering: _propTypes2.default.func,\n\n    /**\n     * Callback fired after the Overlay finishes transitioning in\n     */\n    onEntered: _propTypes2.default.func,\n\n    /**\n     * Callback fired right before the Overlay transitions out\n     */\n    onExit: _propTypes2.default.func,\n\n    /**\n     * Callback fired as the Overlay begins to transition out\n     */\n    onExiting: _propTypes2.default.func,\n\n    /**\n     * Callback fired after the Overlay finishes transitioning out\n     */\n    onExited: _propTypes2.default.func\n  });\n  exports.default = Overlay;\n  module.exports = exports['default'];\n});\nvar BaseOverlay = unwrapExports(Overlay_1);\n\nvar propTypes$M = _extends({}, BaseOverlay.propTypes, {\n  /**\n   * Set the visibility of the Overlay\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Specify whether the overlay should trigger onHide when the user clicks outside the overlay\n   */\n  rootClose: PropTypes.bool,\n\n  /**\n   * A callback invoked by the overlay when it wishes to be hidden. Required if\n   * `rootClose` is specified.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Use animation\n   */\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n\n  /**\n   * Callback fired before the Overlay transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Overlay transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Sets the direction of the Overlay.\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left'])\n});\n\nvar defaultProps$E = {\n  animation: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'right'\n};\n\nvar Overlay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Overlay, _React$Component);\n\n  function Overlay() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Overlay.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        animation = _this$props.animation,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"animation\", \"children\"]);\n\n    var transition = animation === true ? Fade : animation || null;\n    var child;\n\n    if (!transition) {\n      child = cloneElement(children, {\n        className: classnames(children.props.className, 'in')\n      });\n    } else {\n      child = children;\n    }\n\n    return React.createElement(BaseOverlay, _extends({}, props, {\n      transition: transition\n    }), child);\n  };\n\n  return Overlay;\n}(React.Component);\n\nOverlay.propTypes = propTypes$M;\nOverlay.defaultProps = defaultProps$E; // 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n}; // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\n\n\n_export(_export.S, 'Array', {\n  isArray: _isArray\n});\n\nvar isArray = _core.Array.isArray;\nvar isArray$1 = isArray;\n/**\n * Check if value one is inside or equal to the of value\n *\n * @param {string} one\n * @param {string|array} of\n * @returns {boolean}\n */\n\nfunction isOneOf(one, of) {\n  if (isArray$1(of)) {\n    return of.indexOf(one) >= 0;\n  }\n\n  return one === of;\n}\n\nvar triggerType = PropTypes.oneOf(['click', 'hover', 'focus']);\n\nvar propTypes$N = _extends({}, Overlay.propTypes, {\n  /**\n   * Specify which action or actions trigger Overlay visibility\n   */\n  trigger: PropTypes.oneOfType([triggerType, PropTypes.arrayOf(triggerType)]),\n\n  /**\n   * A millisecond delay amount to show and hide the Overlay once triggered\n   */\n  delay: PropTypes.number,\n\n  /**\n   * A millisecond delay amount before showing the Overlay once triggered.\n   */\n  delayShow: PropTypes.number,\n\n  /**\n   * A millisecond delay amount before hiding the Overlay once triggered.\n   */\n  delayHide: PropTypes.number,\n  // FIXME: This should be `defaultShow`.\n\n  /**\n   * The initial visibility state of the Overlay. For more nuanced visibility\n   * control, consider using the Overlay component directly.\n   */\n  defaultOverlayShown: PropTypes.bool,\n\n  /**\n   * An element or text to overlay next to the target.\n   */\n  overlay: PropTypes.node.isRequired,\n\n  /**\n   * @private\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @private\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @private\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @private\n   */\n  onMouseOut: PropTypes.func,\n\n  /**\n   * @private\n   */\n  onMouseOver: PropTypes.func,\n  // Overridden props from `<Overlay>`.\n\n  /**\n   * @private\n   */\n  target: PropTypes.oneOf([null]),\n\n  /**\n   * @private\n   */\n  onHide: PropTypes.oneOf([null]),\n\n  /**\n   * @private\n   */\n  show: PropTypes.oneOf([null])\n});\n\nvar defaultProps$F = {\n  defaultOverlayShown: false,\n  trigger: ['hover', 'focus']\n};\n\nvar OverlayTrigger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OverlayTrigger, _React$Component);\n\n  function OverlayTrigger(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelayedShow = _this.handleDelayedShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelayedHide = _this.handleDelayedHide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHide = _this.handleHide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.handleMouseOver = function (e) {\n      return _this.handleMouseOverOut(_this.handleDelayedShow, e, 'fromElement');\n    };\n\n    _this.handleMouseOut = function (e) {\n      return _this.handleMouseOverOut(_this.handleDelayedHide, e, 'toElement');\n    };\n\n    _this._mountNode = null;\n    _this.state = {\n      show: props.defaultOverlayShown\n    };\n    return _this;\n  }\n\n  var _proto = OverlayTrigger.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._mountNode = document.createElement('div');\n    this.renderOverlay();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.renderOverlay();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    ReactDOM.unmountComponentAtNode(this._mountNode);\n    this._mountNode = null;\n    clearTimeout(this._hoverShowDelay);\n    clearTimeout(this._hoverHideDelay);\n  };\n\n  _proto.handleDelayedHide = function handleDelayedHide() {\n    var _this2 = this;\n\n    if (this._hoverShowDelay != null) {\n      clearTimeout(this._hoverShowDelay);\n      this._hoverShowDelay = null;\n      return;\n    }\n\n    if (!this.state.show || this._hoverHideDelay != null) {\n      return;\n    }\n\n    var delay = this.props.delayHide != null ? this.props.delayHide : this.props.delay;\n\n    if (!delay) {\n      this.hide();\n      return;\n    }\n\n    this._hoverHideDelay = setTimeout(function () {\n      _this2._hoverHideDelay = null;\n\n      _this2.hide();\n    }, delay);\n  };\n\n  _proto.handleDelayedShow = function handleDelayedShow() {\n    var _this3 = this;\n\n    if (this._hoverHideDelay != null) {\n      clearTimeout(this._hoverHideDelay);\n      this._hoverHideDelay = null;\n      return;\n    }\n\n    if (this.state.show || this._hoverShowDelay != null) {\n      return;\n    }\n\n    var delay = this.props.delayShow != null ? this.props.delayShow : this.props.delay;\n\n    if (!delay) {\n      this.show();\n      return;\n    }\n\n    this._hoverShowDelay = setTimeout(function () {\n      _this3._hoverShowDelay = null;\n\n      _this3.show();\n    }, delay);\n  };\n\n  _proto.handleHide = function handleHide() {\n    this.hide();\n  }; // Simple implementation of mouseEnter and mouseLeave.\n  // React's built version is broken: https://github.com/facebook/react/issues/4251\n  // for cases when the trigger is disabled and mouseOut/Over can cause flicker\n  // moving from one child element to another.\n\n\n  _proto.handleMouseOverOut = function handleMouseOverOut(handler, e, relatedNative) {\n    var target = e.currentTarget;\n    var related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n    if ((!related || related !== target) && !contains$1(target, related)) {\n      handler(e);\n    }\n  };\n\n  _proto.handleToggle = function handleToggle() {\n    if (this.state.show) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  _proto.hide = function hide() {\n    this.setState({\n      show: false\n    });\n  };\n\n  _proto.makeOverlay = function makeOverlay(overlay, props) {\n    return React.createElement(Overlay, _extends({}, props, {\n      show: this.state.show,\n      onHide: this.handleHide,\n      target: this\n    }), overlay);\n  };\n\n  _proto.show = function show() {\n    this.setState({\n      show: true\n    });\n  };\n\n  _proto.renderOverlay = function renderOverlay() {\n    ReactDOM.unstable_renderSubtreeIntoContainer(this, this._overlay, this._mountNode);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        trigger = _this$props.trigger,\n        overlay = _this$props.overlay,\n        children = _this$props.children,\n        onBlur = _this$props.onBlur,\n        onClick = _this$props.onClick,\n        onFocus = _this$props.onFocus,\n        onMouseOut = _this$props.onMouseOut,\n        onMouseOver = _this$props.onMouseOver,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"trigger\", \"overlay\", \"children\", \"onBlur\", \"onClick\", \"onFocus\", \"onMouseOut\", \"onMouseOver\"]);\n\n    delete props.delay;\n    delete props.delayShow;\n    delete props.delayHide;\n    delete props.defaultOverlayShown;\n    var child = React.Children.only(children);\n    var childProps = child.props;\n    var triggerProps = {};\n\n    if (this.state.show) {\n      triggerProps['aria-describedby'] = overlay.props.id;\n    } // FIXME: The logic here for passing through handlers on this component is\n    // inconsistent. We shouldn't be passing any of these props through.\n\n\n    triggerProps.onClick = createChainedFunction(childProps.onClick, onClick);\n\n    if (isOneOf('click', trigger)) {\n      triggerProps.onClick = createChainedFunction(triggerProps.onClick, this.handleToggle);\n    }\n\n    if (isOneOf('hover', trigger)) {\n      process.env.NODE_ENV !== \"production\" ? warning_1(!(trigger === 'hover'), '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the ' + 'visibility of the overlay to just mouse users. Consider also ' + 'including the `\"focus\"` trigger so that touch and keyboard only ' + 'users can see the overlay as well.') : void 0;\n      triggerProps.onMouseOver = createChainedFunction(childProps.onMouseOver, onMouseOver, this.handleMouseOver);\n      triggerProps.onMouseOut = createChainedFunction(childProps.onMouseOut, onMouseOut, this.handleMouseOut);\n    }\n\n    if (isOneOf('focus', trigger)) {\n      triggerProps.onFocus = createChainedFunction(childProps.onFocus, onFocus, this.handleDelayedShow);\n      triggerProps.onBlur = createChainedFunction(childProps.onBlur, onBlur, this.handleDelayedHide);\n    }\n\n    this._overlay = this.makeOverlay(overlay, props);\n    return cloneElement(child, triggerProps);\n  };\n\n  return OverlayTrigger;\n}(React.Component);\n\nOverlayTrigger.propTypes = propTypes$N;\nOverlayTrigger.defaultProps = defaultProps$F;\n\nvar PageHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PageHeader, _React$Component);\n\n  function PageHeader() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PageHeader.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), React.createElement(\"h1\", null, children));\n  };\n\n  return PageHeader;\n}(React.Component);\n\nbsClass('page-header', PageHeader);\nvar propTypes$O = {\n  disabled: PropTypes.bool,\n  previous: PropTypes.bool,\n  next: PropTypes.bool,\n  onClick: PropTypes.func,\n  onSelect: PropTypes.func,\n  eventKey: PropTypes.any\n};\nvar defaultProps$G = {\n  disabled: false,\n  previous: false,\n  next: false\n};\n\nvar PagerItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PagerItem, _React$Component);\n\n  function PagerItem(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = PagerItem.prototype;\n\n  _proto.handleSelect = function handleSelect(e) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        onSelect = _this$props.onSelect,\n        eventKey = _this$props.eventKey;\n\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (onSelect) {\n      onSelect(eventKey, e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        disabled = _this$props2.disabled,\n        previous = _this$props2.previous,\n        next = _this$props2.next,\n        onClick = _this$props2.onClick,\n        className = _this$props2.className,\n        style = _this$props2.style,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"disabled\", \"previous\", \"next\", \"onClick\", \"className\", \"style\"]);\n\n    delete props.onSelect;\n    delete props.eventKey;\n    return React.createElement(\"li\", {\n      className: classnames(className, {\n        disabled: disabled,\n        previous: previous,\n        next: next\n      }),\n      style: style\n    }, React.createElement(SafeAnchor, _extends({}, props, {\n      disabled: disabled,\n      onClick: createChainedFunction(onClick, this.handleSelect)\n    })));\n  };\n\n  return PagerItem;\n}(React.Component);\n\nPagerItem.propTypes = propTypes$O;\nPagerItem.defaultProps = defaultProps$G;\nvar warned = {};\n\nfunction deprecationWarning(oldname, newname, link) {\n  var message;\n\n  if (typeof oldname === 'object') {\n    message = oldname.message;\n  } else {\n    message = oldname + \" is deprecated. Use \" + newname + \" instead.\";\n\n    if (link) {\n      message += \"\\nYou can read more about it at \" + link;\n    }\n  }\n\n  if (warned[message]) {\n    return;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning_1(false, message) : void 0;\n  warned[message] = true;\n}\n\ndeprecationWarning.wrapper = function (Component$$1) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(DeprecatedComponent, _Component);\n\n      function DeprecatedComponent() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = DeprecatedComponent.prototype;\n\n      _proto.componentWillMount = function componentWillMount() {\n        deprecationWarning.apply(void 0, args);\n\n        if (_Component.prototype.componentWillMount) {\n          var _Component$prototype$;\n\n          for (var _len2 = arguments.length, methodArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            methodArgs[_key2] = arguments[_key2];\n          }\n\n          (_Component$prototype$ = _Component.prototype.componentWillMount).call.apply(_Component$prototype$, [this].concat(methodArgs));\n        }\n      };\n\n      return DeprecatedComponent;\n    }(Component$$1)\n  );\n};\n\ndeprecationWarning.wrapper(PagerItem, '`<PageItem>`', '`<Pager.Item>`');\nvar propTypes$P = {\n  onSelect: PropTypes.func\n};\n\nvar Pager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Pager, _React$Component);\n\n  function Pager() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Pager.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        onSelect = _this$props.onSelect,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"onSelect\", \"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"ul\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        onSelect: createChainedFunction(child.props.onSelect, onSelect)\n      });\n    }));\n  };\n\n  return Pager;\n}(React.Component);\n\nPager.propTypes = propTypes$P;\nPager.Item = PagerItem;\nbsClass('pager', Pager);\nvar propTypes$Q = {\n  eventKey: PropTypes.any,\n  className: PropTypes.string,\n  onSelect: PropTypes.func,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  activeLabel: PropTypes.string.isRequired\n};\nvar defaultProps$H = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\n\nfunction PaginationItem(_ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component$$1 = active || disabled ? 'span' : SafeAnchor;\n  return React.createElement(\"li\", {\n    style: style,\n    className: classnames(className, {\n      active: active,\n      disabled: disabled\n    })\n  }, React.createElement(Component$$1, _extends({\n    disabled: disabled\n  }, props), children, active && React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n}\n\nPaginationItem.propTypes = propTypes$Q;\nPaginationItem.defaultProps = defaultProps$H;\n\nfunction createButton(name, defaultValue, label) {\n  var _class, _temp;\n\n  if (label === void 0) {\n    label = name;\n  }\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(_class, _React$Component);\n\n    function _class() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = _class.prototype;\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          children = _this$props.children,\n          className = _this$props.className,\n          props = _objectWithoutPropertiesLoose(_this$props, [\"disabled\", \"children\", \"className\"]);\n\n      var Component$$1 = disabled ? 'span' : SafeAnchor;\n      return React.createElement(\"li\", _extends({\n        \"aria-label\": label,\n        className: classnames(className, {\n          disabled: disabled\n        })\n      }, props), React.createElement(Component$$1, null, children || defaultValue));\n    };\n\n    return _class;\n  }(React.Component), _class.displayName = name, _class.propTypes = {\n    disabled: PropTypes.bool\n  }, _temp;\n}\n\nvar First = createButton('First', \"\\xAB\");\nvar Prev = createButton('Prev', \"\\u2039\");\nvar Ellipsis = createButton('Ellipsis', \"\\u2026\", 'More');\nvar Next = createButton('Next', \"\\u203A\");\nvar Last = createButton('Last', \"\\xBB\");\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Pagination, _React$Component);\n\n  function Pagination() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Pagination.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"ul\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), children);\n  };\n\n  return Pagination;\n}(React.Component);\n\nbsClass('pagination', Pagination);\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PaginationItem;\nPagination.Next = Next;\nPagination.Last = Last;\nvar propTypes$R = {\n  /**\n   * Callback fired before the component expands\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the component starts to expand\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the component has expanded\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the component collapses\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the component starts to collapse\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the component has collapsed\n   */\n  onExited: PropTypes.func\n};\nvar contextTypes$9 = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    expanded: PropTypes.bool\n  })\n};\n\nvar PanelCollapse =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelCollapse, _React$Component);\n\n  function PanelCollapse() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PanelCollapse.prototype;\n\n  _proto.render = function render() {\n    var children = this.props.children;\n\n    var _ref = this.context.$bs_panel || {},\n        headingId = _ref.headingId,\n        bodyId = _ref.bodyId,\n        _bsClass = _ref.bsClass,\n        expanded = _ref.expanded;\n\n    var _splitBsProps = splitBsProps(this.props),\n        bsProps = _splitBsProps[0],\n        props = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    if (headingId && bodyId) {\n      props.id = bodyId;\n      props.role = props.role || 'tabpanel';\n      props['aria-labelledby'] = headingId;\n    }\n\n    return React.createElement(Collapse, _extends({\n      in: expanded\n    }, props), React.createElement(\"div\", {\n      className: prefix(bsProps, 'collapse')\n    }, children));\n  };\n\n  return PanelCollapse;\n}(React.Component);\n\nPanelCollapse.propTypes = propTypes$R;\nPanelCollapse.contextTypes = contextTypes$9;\nvar PanelCollapse$1 = bsClass('panel', PanelCollapse);\nvar propTypes$S = {\n  /**\n   * A convenience prop that renders a Collapse component around the Body for\n   * situations when the parent Panel only contains a single Panel.Body child.\n   *\n   * renders:\n   * ```jsx\n   * <Panel.Collapse>\n   *  <Panel.Body />\n   * </Panel.Collapse>\n   * ```\n   */\n  collapsible: PropTypes.bool.isRequired\n};\nvar defaultProps$I = {\n  collapsible: false\n};\nvar contextTypes$a = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\n\nvar PanelBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelBody, _React$Component);\n\n  function PanelBody() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PanelBody.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        collapsible = _this$props.collapsible;\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['collapsible']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n    var body = React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, prefix(bsProps, 'body'))\n    }), children);\n\n    if (collapsible) {\n      body = React.createElement(PanelCollapse$1, null, body);\n    }\n\n    return body;\n  };\n\n  return PanelBody;\n}(React.Component);\n\nPanelBody.propTypes = propTypes$S;\nPanelBody.defaultProps = defaultProps$I;\nPanelBody.contextTypes = contextTypes$a;\nvar Body$1 = bsClass('panel', PanelBody);\nvar createChainableTypeChecker_1$1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n  exports.default = createChainableTypeChecker;\n  /**\n   * Copyright 2013-present, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * LICENSE file in the root directory of this source tree. An additional grant\n   * of patent rights can be found in the PATENTS file in the same directory.\n   */\n  // Mostly taken from ReactPropTypes.\n\n  function createChainableTypeChecker(validate) {\n    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n      var componentNameSafe = componentName || '<<anonymous>>';\n      var propFullNameSafe = propFullName || propName;\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n        }\n\n        return null;\n      }\n\n      for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n        args[_key - 6] = arguments[_key];\n      }\n\n      return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n});\nunwrapExports(createChainableTypeChecker_1$1);\nvar elementType_1$1 = createCommonjsModule(function (module, exports) {\n  exports.__esModule = true;\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  var _react2 = _interopRequireDefault(React);\n\n  var _createChainableTypeChecker2 = _interopRequireDefault(createChainableTypeChecker_1$1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function elementType(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n\n    if (_react2.default.isValidElement(propValue)) {\n      return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');\n    }\n\n    if (propType !== 'function' && propType !== 'string') {\n      return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');\n    }\n\n    return null;\n  }\n\n  exports.default = (0, _createChainableTypeChecker2.default)(elementType);\n});\nvar elementType$1 = unwrapExports(elementType_1$1);\nvar propTypes$T = {\n  componentClass: elementType$1\n};\nvar defaultProps$J = {\n  componentClass: 'div'\n};\nvar contextTypes$b = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bsClass: PropTypes.string\n  })\n};\n\nvar PanelHeading =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelHeading, _React$Component);\n\n  function PanelHeading() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PanelHeading.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        Component$$1 = _this$props.componentClass,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"className\", \"componentClass\"]);\n\n    var _ref = this.context.$bs_panel || {},\n        headingId = _ref.headingId,\n        _bsClass = _ref.bsClass;\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    if (headingId) {\n      elementProps.role = elementProps.role || 'tab';\n      elementProps.id = headingId;\n    }\n\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, prefix(bsProps, 'heading'))\n    }), children);\n  };\n\n  return PanelHeading;\n}(React.Component);\n\nPanelHeading.propTypes = propTypes$T;\nPanelHeading.defaultProps = defaultProps$J;\nPanelHeading.contextTypes = contextTypes$b;\nvar Heading = bsClass('panel', PanelHeading);\nvar propTypes$U = {\n  /**\n   * only here to satisfy linting, just the html onClick handler.\n   *\n   * @private\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * You can use a custom element for this component\n   */\n  componentClass: elementType$1\n};\nvar defaultProps$K = {\n  componentClass: SafeAnchor\n};\nvar contextTypes$c = {\n  $bs_panel: PropTypes.shape({\n    bodyId: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\n\nvar PanelToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelToggle, _React$Component);\n\n  function PanelToggle() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = PanelToggle.prototype;\n\n  _proto.handleToggle = function handleToggle(event) {\n    var _ref = this.context.$bs_panel || {},\n        onToggle = _ref.onToggle;\n\n    if (onToggle) {\n      onToggle(event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        onClick = _this$props.onClick,\n        className = _this$props.className,\n        componentClass = _this$props.componentClass,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"onClick\", \"className\", \"componentClass\"]);\n\n    var _ref2 = this.context.$bs_panel || {},\n        expanded = _ref2.expanded,\n        bodyId = _ref2.bodyId;\n\n    var Component$$1 = componentClass;\n    props.onClick = createChainedFunction(onClick, this.handleToggle);\n    props['aria-expanded'] = expanded;\n    props.className = classnames(className, !expanded && 'collapsed');\n\n    if (bodyId) {\n      props['aria-controls'] = bodyId;\n    }\n\n    return React.createElement(Component$$1, props);\n  };\n\n  return PanelToggle;\n}(React.Component);\n\nPanelToggle.propTypes = propTypes$U;\nPanelToggle.defaultProps = defaultProps$K;\nPanelToggle.contextTypes = contextTypes$c;\nvar propTypes$V = {\n  componentClass: elementType$1,\n\n  /**\n   * A convenience prop that renders the Panel.Title as a panel collapse toggle component\n   * for the common use-case.\n   */\n  toggle: PropTypes.bool\n};\nvar contextTypes$d = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\nvar defaultProps$L = {\n  componentClass: 'div'\n};\n\nvar PanelTitle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelTitle, _React$Component);\n\n  function PanelTitle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PanelTitle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        toggle = _this$props.toggle,\n        Component$$1 = _this$props.componentClass,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"className\", \"toggle\", \"componentClass\"]);\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    if (toggle) {\n      children = React.createElement(PanelToggle, null, children);\n    }\n\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, prefix(bsProps, 'title'))\n    }), children);\n  };\n\n  return PanelTitle;\n}(React.Component);\n\nPanelTitle.propTypes = propTypes$V;\nPanelTitle.defaultProps = defaultProps$L;\nPanelTitle.contextTypes = contextTypes$d;\nvar Title$1 = bsClass('panel', PanelTitle);\nvar contextTypes$e = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\n\nvar PanelFooter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelFooter, _React$Component);\n\n  function PanelFooter() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PanelFooter.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className;\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsProps = splitBsProps(this.props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, prefix(bsProps, 'footer'))\n    }), children);\n  };\n\n  return PanelFooter;\n}(React.Component);\n\nPanelFooter.contextTypes = contextTypes$e;\nvar Footer$1 = bsClass('panel', PanelFooter);\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + \"--\" + type : null;\n};\n\nvar propTypes$W = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n  eventKey: PropTypes.any,\n\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: PropTypes.string\n};\nvar contextTypes$f = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\nvar childContextTypes$4 = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\n\nvar Panel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Panel, _React$Component);\n\n  function Panel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleToggle = function (e) {\n      var panelGroup = _this.context.$bs_panelGroup;\n      var expanded = !_this.getExpanded();\n\n      if (panelGroup && panelGroup.onToggle) {\n        panelGroup.onToggle(_this.props.eventKey, expanded, e);\n      } else {\n        _this.props.onToggle(expanded, e);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Panel.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        eventKey = _this$props.eventKey,\n        id = _this$props.id;\n    var idKey = eventKey == null ? id : eventKey;\n    var ids;\n\n    if (idKey !== null) {\n      var panelGroup = this.context.$bs_panelGroup;\n      var getId = panelGroup && panelGroup.getId || defaultGetId;\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n\n    return {\n      $bs_panel: _extends({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n\n  _proto.getExpanded = function getExpanded() {\n    var panelGroup = this.context.$bs_panelGroup;\n\n    if (panelGroup && has.call(panelGroup, 'activeKey')) {\n      process.env.NODE_ENV !== \"production\" ? warning_1(this.props.expanded == null, 'Specifying `<Panel>` `expanded` in the context of an accordion ' + '`<PanelGroup>` is not supported. Set `activeKey` on the ' + '`<PanelGroup>` instead.') : void 0;\n      return panelGroup.activeKey === this.props.eventKey;\n    }\n\n    return !!this.props.expanded;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        children = _this$props2.children;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['onToggle', 'eventKey', 'expanded']),\n        bsProps = _splitBsPropsAndOmit[0],\n        props = _splitBsPropsAndOmit[1];\n\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classnames(className, getClassSet(bsProps))\n    }), children);\n  };\n\n  return Panel;\n}(React.Component);\n\nPanel.propTypes = propTypes$W;\nPanel.contextTypes = contextTypes$f;\nPanel.childContextTypes = childContextTypes$4;\nvar UncontrolledPanel = uncontrollable(bsClass('panel', bsStyles(values$1(State).concat([Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Panel)), {\n  expanded: 'onToggle'\n});\nassign$1(UncontrolledPanel, {\n  Heading: Heading,\n  Title: Title$1,\n  Body: Body$1,\n  Footer: Footer$1,\n  Toggle: PanelToggle,\n  Collapse: PanelCollapse$1\n});\nvar propTypes$X = {\n  /**\n   * An html id attribute, necessary for accessibility\n   * @type {string}\n   * @required\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Sets the direction the Popover is positioned towards.\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * The \"top\" position value for the Popover.\n   */\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The \"left\" position value for the Popover.\n   */\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The \"top\" position value for the Popover arrow.\n   */\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The \"left\" position value for the Popover arrow.\n   */\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Title content\n   */\n  title: PropTypes.node\n};\nvar defaultProps$M = {\n  placement: 'right'\n};\n\nvar Popover =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Popover, _React$Component);\n\n  function Popover() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Popover.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        placement = _this$props.placement,\n        positionTop = _this$props.positionTop,\n        positionLeft = _this$props.positionLeft,\n        arrowOffsetTop = _this$props.arrowOffsetTop,\n        arrowOffsetLeft = _this$props.arrowOffsetLeft,\n        title = _this$props.title,\n        className = _this$props.className,\n        style = _this$props.style,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"placement\", \"positionTop\", \"positionLeft\", \"arrowOffsetTop\", \"arrowOffsetLeft\", \"title\", \"className\", \"style\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));\n\n    var outerStyle = _extends({\n      display: 'block',\n      top: positionTop,\n      left: positionLeft\n    }, style);\n\n    var arrowStyle = {\n      top: arrowOffsetTop,\n      left: arrowOffsetLeft\n    };\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      role: \"tooltip\",\n      className: classnames(className, classes),\n      style: outerStyle\n    }), React.createElement(\"div\", {\n      className: \"arrow\",\n      style: arrowStyle\n    }), title && React.createElement(\"h3\", {\n      className: prefix(bsProps, 'title')\n    }, title), React.createElement(\"div\", {\n      className: prefix(bsProps, 'content')\n    }, children));\n  };\n\n  return Popover;\n}(React.Component);\n\nPopover.propTypes = propTypes$X;\nPopover.defaultProps = defaultProps$M;\nbsClass('popover', Popover);\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n\n\n    var element = React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childIdentifier = React.isValidElement(child) ? child.type.displayName || child.type.name || child.type : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar propTypes$Y = {\n  min: PropTypes.number,\n  now: PropTypes.number,\n  max: PropTypes.number,\n  label: PropTypes.node,\n  srOnly: PropTypes.bool,\n  striped: PropTypes.bool,\n  active: PropTypes.bool,\n  children: onlyProgressBar,\n\n  /**\n   * @private\n   */\n  isChild: PropTypes.bool\n};\nvar defaultProps$N = {\n  min: 0,\n  max: 100,\n  active: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nvar ProgressBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ProgressBar, _React$Component);\n\n  function ProgressBar() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ProgressBar.prototype;\n\n  _proto.renderProgressBar = function renderProgressBar(_ref) {\n    var _extends2;\n\n    var min = _ref.min,\n        now = _ref.now,\n        max = _ref.max,\n        label = _ref.label,\n        srOnly = _ref.srOnly,\n        striped = _ref.striped,\n        active = _ref.active,\n        className = _ref.className,\n        style = _ref.style,\n        props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"active\", \"className\", \"style\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {\n      active: active\n    }, _extends2[prefix(bsProps, 'striped')] = active || striped, _extends2));\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      role: \"progressbar\",\n      className: classnames(className, classes),\n      style: _extends({\n        width: getPercentage(now, min, max) + \"%\"\n      }, style),\n      \"aria-valuenow\": now,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max\n    }), srOnly ? React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label) : label);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        isChild = _this$props.isChild,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"isChild\"]);\n\n    if (isChild) {\n      return this.renderProgressBar(props);\n    }\n\n    var min = props.min,\n        now = props.now,\n        max = props.max,\n        label = props.label,\n        srOnly = props.srOnly,\n        striped = props.striped,\n        active = props.active,\n        bsClass$$1 = props.bsClass,\n        bsStyle = props.bsStyle,\n        className = props.className,\n        children = props.children,\n        wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"active\", \"bsClass\", \"bsStyle\", \"className\", \"children\"]);\n\n    return React.createElement(\"div\", _extends({}, wrapperProps, {\n      className: classnames(className, 'progress')\n    }), children ? ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        isChild: true\n      });\n    }) : this.renderProgressBar({\n      min: min,\n      now: now,\n      max: max,\n      label: label,\n      srOnly: srOnly,\n      striped: striped,\n      active: active,\n      bsClass: bsClass$$1,\n      bsStyle: bsStyle\n    }));\n  };\n\n  return ProgressBar;\n}(React.Component);\n\nProgressBar.propTypes = propTypes$Y;\nProgressBar.defaultProps = defaultProps$N;\nbsClass('progress-bar', bsStyles(values$1(State), ProgressBar));\nvar propTypes$Z = {\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  title: PropTypes.string,\n\n  /**\n   * Only valid if `inline` is not set.\n   */\n  validationState: PropTypes.oneOf(['success', 'warning', 'error', null]),\n\n  /**\n   * Attaches a ref to the `<input>` element. Only functions can be used here.\n   *\n   * ```js\n   * <Radio inputRef={ref => { this.input = ref; }} />\n   * ```\n   */\n  inputRef: PropTypes.func\n};\nvar defaultProps$O = {\n  inline: false,\n  disabled: false,\n  title: ''\n};\n\nvar Radio =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Radio, _React$Component);\n\n  function Radio() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Radio.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        inline = _this$props.inline,\n        disabled = _this$props.disabled,\n        validationState = _this$props.validationState,\n        inputRef = _this$props.inputRef,\n        className = _this$props.className,\n        style = _this$props.style,\n        title = _this$props.title,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"inline\", \"disabled\", \"validationState\", \"inputRef\", \"className\", \"style\", \"title\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var input = React.createElement(\"input\", _extends({}, elementProps, {\n      ref: inputRef,\n      type: \"radio\",\n      disabled: disabled\n    }));\n\n    if (inline) {\n      var _classes2;\n\n      var _classes = (_classes2 = {}, _classes2[prefix(bsProps, 'inline')] = true, _classes2.disabled = disabled, _classes2); // Use a warning here instead of in propTypes to get better-looking\n      // generated documentation.\n\n\n      process.env.NODE_ENV !== \"production\" ? warning_1(!validationState, '`validationState` is ignored on `<Radio inline>`. To display ' + 'validation state on an inline radio, set `validationState` on a ' + 'parent `<FormGroup>` or other element instead.') : void 0;\n      return React.createElement(\"label\", {\n        className: classnames(className, _classes),\n        style: style,\n        title: title\n      }, input, children);\n    }\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      disabled: disabled\n    });\n\n    if (validationState) {\n      classes[\"has-\" + validationState] = true;\n    }\n\n    return React.createElement(\"div\", {\n      className: classnames(className, classes),\n      style: style\n    }, React.createElement(\"label\", {\n      title: title\n    }, input, children));\n  };\n\n  return Radio;\n}(React.Component);\n\nRadio.propTypes = propTypes$Z;\nRadio.defaultProps = defaultProps$O;\nbsClass('radio', Radio);\nvar propTypes$_ = {\n  /**\n   * This component requires a single child element\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * 16by9 aspect ratio\n   */\n  a16by9: PropTypes.bool,\n\n  /**\n   * 4by3 aspect ratio\n   */\n  a4by3: PropTypes.bool\n};\nvar defaultProps$P = {\n  a16by9: false,\n  a4by3: false\n};\n\nvar ResponsiveEmbed =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ResponsiveEmbed, _React$Component);\n\n  function ResponsiveEmbed() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ResponsiveEmbed.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        a16by9 = _this$props.a16by9,\n        a4by3 = _this$props.a4by3,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"a16by9\", \"a4by3\", \"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    process.env.NODE_ENV !== \"production\" ? warning_1(a16by9 || a4by3, 'Either `a16by9` or `a4by3` must be set.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning_1(!(a16by9 && a4by3), 'Only one of `a16by9` or `a4by3` can be set.') : void 0;\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, '16by9')] = a16by9, _extends2[prefix(bsProps, '4by3')] = a4by3, _extends2));\n\n    return React.createElement(\"div\", {\n      className: classnames(classes)\n    }, cloneElement(children, _extends({}, elementProps, {\n      className: classnames(className, prefix(bsProps, 'item'))\n    })));\n  };\n\n  return ResponsiveEmbed;\n}(React.Component);\n\nResponsiveEmbed.propTypes = propTypes$_;\nResponsiveEmbed.defaultProps = defaultProps$P;\nbsClass('embed-responsive', ResponsiveEmbed);\nvar propTypes$10 = {\n  componentClass: elementType\n};\nvar defaultProps$Q = {\n  componentClass: 'div'\n};\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component$$1 = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.propTypes = propTypes$10;\nRow.defaultProps = defaultProps$Q;\nvar Row$1 = bsClass('row', Row);\n\nvar SplitToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SplitToggle, _React$Component);\n\n  function SplitToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = SplitToggle.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(DropdownToggle$1, _extends({}, this.props, {\n      useAnchor: false,\n      noCaret: false\n    }));\n  };\n\n  return SplitToggle;\n}(React.Component);\n\nSplitToggle.defaultProps = DropdownToggle$1.defaultProps;\n\nvar propTypes$11 = _extends({}, UncontrolledDropdown.propTypes, {\n  // Toggle props.\n  bsStyle: PropTypes.string,\n  bsSize: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * The content of the split button.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: PropTypes.node\n});\n\nvar SplitButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SplitButton, _React$Component);\n\n  function SplitButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = SplitButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsSize = _this$props.bsSize,\n        bsStyle = _this$props.bsStyle,\n        title = _this$props.title,\n        toggleLabel = _this$props.toggleLabel,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsSize\", \"bsStyle\", \"title\", \"toggleLabel\", \"children\"]);\n\n    var _splitComponentProps = splitComponentProps(props, UncontrolledDropdown.ControlledComponent),\n        dropdownProps = _splitComponentProps[0],\n        buttonProps = _splitComponentProps[1];\n\n    return React.createElement(UncontrolledDropdown, _extends({}, dropdownProps, {\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), React.createElement(Button$1, _extends({}, buttonProps, {\n      disabled: props.disabled,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), title), React.createElement(SplitToggle, {\n      \"aria-label\": toggleLabel || title,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), React.createElement(UncontrolledDropdown.Menu, null, children));\n  };\n\n  return SplitButton;\n}(React.Component);\n\nSplitButton.propTypes = propTypes$11;\nSplitButton.Toggle = SplitToggle;\nvar TAB = 'tab';\nvar PANE = 'pane';\nvar idPropType$1 = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\nvar propTypes$12 = {\n  /**\n   * HTML id attribute, required if no `generateChildId` prop\n   * is specified.\n   */\n  id: function id(props) {\n    var error = null;\n\n    if (!props.generateChildId) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      error = idPropType$1.apply(void 0, [props].concat(args));\n\n      if (!error && !props.id) {\n        error = new Error('In order to properly initialize Tabs in a way that is accessible ' + 'to assistive technologies (such as screen readers) an `id` or a ' + '`generateChildId` prop to TabContainer is required');\n      }\n    }\n\n    return error;\n  },\n\n  /**\n   * A function that takes an `eventKey` and `type` and returns a unique id for\n   * child tab `<NavItem>`s and `<TabPane>`s. The function _must_ be a pure\n   * function, meaning it should always return the _same_ id for the same set\n   * of inputs. The default value requires that an `id` to be set for the\n   * `<TabContainer>`.\n   *\n   * The `type` argument will either be `\"tab\"` or `\"pane\"`.\n   *\n   * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`\n   */\n  generateChildId: PropTypes.func,\n\n  /**\n   * A callback fired when a tab is selected.\n   *\n   * @controllable activeKey\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * The `eventKey` of the currently active tab.\n   *\n   * @controllable onSelect\n   */\n  activeKey: PropTypes.any\n};\nvar childContextTypes$5 = {\n  $bs_tabContainer: PropTypes.shape({\n    activeKey: PropTypes.any,\n    onSelect: PropTypes.func.isRequired,\n    getTabId: PropTypes.func.isRequired,\n    getPaneId: PropTypes.func.isRequired\n  })\n};\n\nvar TabContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabContainer, _React$Component);\n\n  function TabContainer() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TabContainer.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        activeKey = _this$props.activeKey,\n        onSelect = _this$props.onSelect,\n        generateChildId = _this$props.generateChildId,\n        id = _this$props.id;\n\n    var getId = generateChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n\n    return {\n      $bs_tabContainer: {\n        activeKey: activeKey,\n        onSelect: onSelect,\n        getTabId: function getTabId(key) {\n          return getId(key, TAB);\n        },\n        getPaneId: function getPaneId(key) {\n          return getId(key, PANE);\n        }\n      }\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\"]);\n\n    delete props.generateChildId;\n    delete props.onSelect;\n    delete props.activeKey;\n    return React.cloneElement(React.Children.only(children), props);\n  };\n\n  return TabContainer;\n}(React.Component);\n\nTabContainer.propTypes = propTypes$12;\nTabContainer.childContextTypes = childContextTypes$5;\nvar UncontrolledTabContainer = uncontrollable(TabContainer, {\n  activeKey: 'onSelect'\n});\nvar propTypes$13 = {\n  componentClass: elementType,\n\n  /**\n   * Sets a default animation strategy for all children `<TabPane>`s. Use\n   * `false` to disable, `true` to enable the default `<Fade>` animation or\n   * a react-transition-group v2 `<Transition/>` component.\n   */\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n\n  /**\n   * Wait until the first \"enter\" transition to mount tabs (add them to the DOM)\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * Unmount tabs (remove it from the DOM) when they are no longer visible\n   */\n  unmountOnExit: PropTypes.bool\n};\nvar defaultProps$R = {\n  componentClass: 'div',\n  animation: true,\n  mountOnEnter: false,\n  unmountOnExit: false\n};\nvar contextTypes$g = {\n  $bs_tabContainer: PropTypes.shape({\n    activeKey: PropTypes.any\n  })\n};\nvar childContextTypes$6 = {\n  $bs_tabContent: PropTypes.shape({\n    bsClass: PropTypes.string,\n    animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n    activeKey: PropTypes.any,\n    mountOnEnter: PropTypes.bool,\n    unmountOnExit: PropTypes.bool,\n    onPaneEnter: PropTypes.func.isRequired,\n    onPaneExited: PropTypes.func.isRequired,\n    exiting: PropTypes.bool.isRequired\n  })\n};\n\nvar TabContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabContent, _React$Component);\n\n  function TabContent(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handlePaneEnter = _this.handlePaneEnter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePaneExited = _this.handlePaneExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Active entries in state will be `null` unless `animation` is set. Need\n    // to track active child in case keys swap and the active child changes\n    // but the active key does not.\n\n    _this.state = {\n      activeKey: null,\n      activeChild: null\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        bsClass$$1 = _this$props.bsClass,\n        animation = _this$props.animation,\n        mountOnEnter = _this$props.mountOnEnter,\n        unmountOnExit = _this$props.unmountOnExit;\n    var stateActiveKey = this.state.activeKey;\n    var containerActiveKey = this.getContainerActiveKey();\n    var activeKey = stateActiveKey != null ? stateActiveKey : containerActiveKey;\n    var exiting = stateActiveKey != null && stateActiveKey !== containerActiveKey;\n    return {\n      $bs_tabContent: {\n        bsClass: bsClass$$1,\n        animation: animation,\n        activeKey: activeKey,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        onPaneEnter: this.handlePaneEnter,\n        onPaneExited: this.handlePaneExited,\n        exiting: exiting\n      }\n    };\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (!nextProps.animation && this.state.activeChild) {\n      this.setState({\n        activeKey: null,\n        activeChild: null\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.isUnmounted = true;\n  };\n\n  _proto.getContainerActiveKey = function getContainerActiveKey() {\n    var tabContainer = this.context.$bs_tabContainer;\n    return tabContainer && tabContainer.activeKey;\n  };\n\n  _proto.handlePaneEnter = function handlePaneEnter(child, childKey) {\n    if (!this.props.animation) {\n      return false;\n    } // It's possible that this child should be transitioning out.\n\n\n    if (childKey !== this.getContainerActiveKey()) {\n      return false;\n    }\n\n    this.setState({\n      activeKey: childKey,\n      activeChild: child\n    });\n    return true;\n  };\n\n  _proto.handlePaneExited = function handlePaneExited(child) {\n    // This might happen as everything is unmounting.\n    if (this.isUnmounted) {\n      return;\n    }\n\n    this.setState(function (_ref) {\n      var activeChild = _ref.activeChild;\n\n      if (activeChild !== child) {\n        return null;\n      }\n\n      return {\n        activeKey: null,\n        activeChild: null\n      };\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        Component$$1 = _this$props2.componentClass,\n        className = _this$props2.className,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"componentClass\", \"className\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['animation', 'mountOnEnter', 'unmountOnExit']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, prefix(bsProps, 'content'))\n    }));\n  };\n\n  return TabContent;\n}(React.Component);\n\nTabContent.propTypes = propTypes$13;\nTabContent.defaultProps = defaultProps$R;\nTabContent.contextTypes = contextTypes$g;\nTabContent.childContextTypes = childContextTypes$6;\nvar TabContent$1 = bsClass('tab', TabContent);\nvar propTypes$14 = {\n  /**\n   * Uniquely identify the `<TabPane>` among its siblings.\n   */\n  eventKey: PropTypes.any,\n\n  /**\n   * Use animation when showing or hiding `<TabPane>`s. Use `false` to disable,\n   * `true` to enable the default `<Fade>` animation or\n   * a react-transition-group v2 `<Transition/>` component.\n   */\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n\n  /** @private * */\n  id: PropTypes.string,\n\n  /** @private * */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If not explicitly specified and rendered in the context of a\n   * `<TabContent>`, the `bsClass` of the `<TabContent>` suffixed by `-pane`.\n   * If otherwise not explicitly specified, `tab-pane`.\n   */\n  bsClass: PropTypes.string,\n\n  /**\n   * Transition onEnter callback when animation is not `false`\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Transition onEntering callback when animation is not `false`\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Transition onEntered callback when animation is not `false`\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Transition onExit callback when animation is not `false`\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Transition onExiting callback when animation is not `false`\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Transition onExited callback when animation is not `false`\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Wait until the first \"enter\" transition to mount the tab (add it to the DOM)\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * Unmount the tab (remove it from the DOM) when it is no longer visible\n   */\n  unmountOnExit: PropTypes.bool\n};\nvar contextTypes$h = {\n  $bs_tabContainer: PropTypes.shape({\n    getTabId: PropTypes.func,\n    getPaneId: PropTypes.func\n  }),\n  $bs_tabContent: PropTypes.shape({\n    bsClass: PropTypes.string,\n    animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n    activeKey: PropTypes.any,\n    mountOnEnter: PropTypes.bool,\n    unmountOnExit: PropTypes.bool,\n    onPaneEnter: PropTypes.func.isRequired,\n    onPaneExited: PropTypes.func.isRequired,\n    exiting: PropTypes.bool.isRequired\n  })\n};\n/**\n * We override the `<TabContainer>` context so `<Nav>`s in `<TabPane>`s don't\n * conflict with the top level one.\n */\n\nvar childContextTypes$7 = {\n  $bs_tabContainer: PropTypes.oneOf([null])\n};\n\nvar TabPane =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabPane, _React$Component);\n\n  function TabPane(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleEnter = _this.handleEnter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.in = false;\n    return _this;\n  }\n\n  var _proto = TabPane.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      $bs_tabContainer: null\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.shouldBeIn()) {\n      // In lieu of the action event firing.\n      this.handleEnter();\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.in) {\n      if (!this.shouldBeIn()) {\n        // We shouldn't be active any more. Notify the parent.\n        this.handleExited();\n      }\n    } else if (this.shouldBeIn()) {\n      // We are the active child. Notify the parent.\n      this.handleEnter();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.in) {\n      // In lieu of the action event firing.\n      this.handleExited();\n    }\n  };\n\n  _proto.getAnimation = function getAnimation() {\n    if (this.props.animation != null) {\n      return this.props.animation;\n    }\n\n    var tabContent = this.context.$bs_tabContent;\n    return tabContent && tabContent.animation;\n  };\n\n  _proto.handleEnter = function handleEnter() {\n    var tabContent = this.context.$bs_tabContent;\n\n    if (!tabContent) {\n      return;\n    }\n\n    this.in = tabContent.onPaneEnter(this, this.props.eventKey);\n  };\n\n  _proto.handleExited = function handleExited() {\n    var tabContent = this.context.$bs_tabContent;\n\n    if (!tabContent) {\n      return;\n    }\n\n    tabContent.onPaneExited(this);\n    this.in = false;\n  };\n\n  _proto.isActive = function isActive() {\n    var tabContent = this.context.$bs_tabContent;\n    var activeKey = tabContent && tabContent.activeKey;\n    return this.props.eventKey === activeKey;\n  };\n\n  _proto.shouldBeIn = function shouldBeIn() {\n    return this.getAnimation() && this.isActive();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        eventKey = _this$props.eventKey,\n        className = _this$props.className,\n        onEnter = _this$props.onEnter,\n        onEntering = _this$props.onEntering,\n        onEntered = _this$props.onEntered,\n        onExit = _this$props.onExit,\n        onExiting = _this$props.onExiting,\n        onExited = _this$props.onExited,\n        propsMountOnEnter = _this$props.mountOnEnter,\n        propsUnmountOnExit = _this$props.unmountOnExit,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"eventKey\", \"className\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\"]);\n\n    var _this$context = this.context,\n        tabContent = _this$context.$bs_tabContent,\n        tabContainer = _this$context.$bs_tabContainer;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['animation']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    var active = this.isActive();\n    var animation = this.getAnimation();\n    var mountOnEnter = propsMountOnEnter != null ? propsMountOnEnter : tabContent && tabContent.mountOnEnter;\n    var unmountOnExit = propsUnmountOnExit != null ? propsUnmountOnExit : tabContent && tabContent.unmountOnExit;\n\n    if (!active && !animation && unmountOnExit) {\n      return null;\n    }\n\n    var Transition = animation === true ? Fade : animation || null;\n\n    if (tabContent) {\n      bsProps.bsClass = prefix(tabContent, 'pane');\n    }\n\n    var classes = _extends({}, getClassSet(bsProps), {\n      active: active\n    });\n\n    if (tabContainer) {\n      process.env.NODE_ENV !== \"production\" ? warning_1(!elementProps.id && !elementProps['aria-labelledby'], 'In the context of a `<TabContainer>`, `<TabPanes>` are given ' + 'generated `id` and `aria-labelledby` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : void 0;\n      elementProps.id = tabContainer.getPaneId(eventKey);\n      elementProps['aria-labelledby'] = tabContainer.getTabId(eventKey);\n    }\n\n    var pane = React.createElement(\"div\", _extends({}, elementProps, {\n      role: \"tabpanel\",\n      \"aria-hidden\": !active,\n      className: classnames(className, classes)\n    }));\n\n    if (Transition) {\n      var exiting = tabContent && tabContent.exiting;\n      return React.createElement(Transition, {\n        in: active && !exiting,\n        onEnter: createChainedFunction(this.handleEnter, onEnter),\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: createChainedFunction(this.handleExited, onExited),\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit\n      }, pane);\n    }\n\n    return pane;\n  };\n\n  return TabPane;\n}(React.Component);\n\nTabPane.propTypes = propTypes$14;\nTabPane.contextTypes = contextTypes$h;\nTabPane.childContextTypes = childContextTypes$7;\nvar TabPane$1 = bsClass('tab-pane', TabPane);\n\nvar propTypes$15 = _extends({}, TabPane$1.propTypes, {\n  disabled: PropTypes.bool,\n  title: PropTypes.node,\n\n  /**\n   * tabClassName is used as className for the associated NavItem\n   */\n  tabClassName: PropTypes.string\n});\n\nvar Tab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props); // These props are for the parent `<Tabs>` rather than the `<TabPane>`.\n\n\n    delete props.title;\n    delete props.disabled;\n    delete props.tabClassName;\n    return React.createElement(TabPane$1, props);\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.propTypes = propTypes$15;\nTab.Container = UncontrolledTabContainer;\nTab.Content = TabContent$1;\nTab.Pane = TabPane$1;\nvar propTypes$16 = {\n  striped: PropTypes.bool,\n  bordered: PropTypes.bool,\n  condensed: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.bool\n};\nvar defaultProps$S = {\n  bordered: false,\n  condensed: false,\n  hover: false,\n  responsive: false,\n  striped: false\n};\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Table, _React$Component);\n\n  function Table() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Table.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        striped = _this$props.striped,\n        bordered = _this$props.bordered,\n        condensed = _this$props.condensed,\n        hover = _this$props.hover,\n        responsive = _this$props.responsive,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"striped\", \"bordered\", \"condensed\", \"hover\", \"responsive\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[prefix(bsProps, 'striped')] = striped, _extends2[prefix(bsProps, 'bordered')] = bordered, _extends2[prefix(bsProps, 'condensed')] = condensed, _extends2[prefix(bsProps, 'hover')] = hover, _extends2));\n\n    var table = React.createElement(\"table\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n\n    if (responsive) {\n      return React.createElement(\"div\", {\n        className: prefix(bsProps, 'responsive')\n      }, table);\n    }\n\n    return table;\n  };\n\n  return Table;\n}(React.Component);\n\nTable.propTypes = propTypes$16;\nTable.defaultProps = defaultProps$S;\nbsClass('table', Table);\nvar TabContainer$1 = UncontrolledTabContainer.ControlledComponent;\nvar propTypes$17 = {\n  /**\n   * Mark the Tab with a matching `eventKey` as active.\n   *\n   * @controllable onSelect\n   */\n  activeKey: PropTypes.any,\n\n  /**\n   * Navigation style\n   */\n  bsStyle: PropTypes.oneOf(['tabs', 'pills']),\n\n  /**\n   * Sets a default animation strategy. Use `false` to disable, `true`\n   * to enable the default `<Fade>` animation, or a react-transition-group\n   * v2 `<Transition/>` component.\n   */\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Callback fired when a Tab is selected.\n   *\n   * ```js\n   * function (\n   *   Any eventKey,\n   *   SyntheticEvent event?\n   * )\n   * ```\n   *\n   * @controllable activeKey\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Wait until the first \"enter\" transition to mount tabs (add them to the DOM)\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * Unmount tabs (remove it from the DOM) when it is no longer visible\n   */\n  unmountOnExit: PropTypes.bool\n};\nvar defaultProps$T = {\n  bsStyle: 'tabs',\n  animation: true,\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  ValidComponentChildren.forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tabs, _React$Component);\n\n  function Tabs() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tabs.prototype;\n\n  _proto.renderTab = function renderTab(child) {\n    var _child$props = child.props,\n        title = _child$props.title,\n        eventKey = _child$props.eventKey,\n        disabled = _child$props.disabled,\n        tabClassName = _child$props.tabClassName;\n\n    if (title == null) {\n      return null;\n    }\n\n    return React.createElement(NavItem, {\n      eventKey: eventKey,\n      disabled: disabled,\n      className: tabClassName\n    }, title);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        id = _this$props.id,\n        onSelect = _this$props.onSelect,\n        animation = _this$props.animation,\n        mountOnEnter = _this$props.mountOnEnter,\n        unmountOnExit = _this$props.unmountOnExit,\n        bsClass$$1 = _this$props.bsClass,\n        className = _this$props.className,\n        style = _this$props.style,\n        children = _this$props.children,\n        _this$props$activeKey = _this$props.activeKey,\n        activeKey = _this$props$activeKey === void 0 ? getDefaultActiveKey(children) : _this$props$activeKey,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"id\", \"onSelect\", \"animation\", \"mountOnEnter\", \"unmountOnExit\", \"bsClass\", \"className\", \"style\", \"children\", \"activeKey\"]);\n\n    return React.createElement(TabContainer$1, {\n      id: id,\n      activeKey: activeKey,\n      onSelect: onSelect,\n      className: className,\n      style: style\n    }, React.createElement(\"div\", null, React.createElement(Nav$1, _extends({}, props, {\n      role: \"tablist\"\n    }), ValidComponentChildren.map(children, this.renderTab)), React.createElement(TabContent$1, {\n      bsClass: bsClass$$1,\n      animation: animation,\n      mountOnEnter: mountOnEnter,\n      unmountOnExit: unmountOnExit\n    }, children)));\n  };\n\n  return Tabs;\n}(React.Component);\n\nTabs.propTypes = propTypes$17;\nTabs.defaultProps = defaultProps$T;\nbsClass('tab', Tabs);\nuncontrollable(Tabs, {\n  activeKey: 'onSelect'\n});\nvar propTypes$18 = {\n  /**\n   * src property that is passed down to the image inside this component\n   */\n  src: PropTypes.string,\n\n  /**\n   * alt property that is passed down to the image inside this component\n   */\n  alt: PropTypes.string,\n\n  /**\n   * href property that is passed down to the image inside this component\n   */\n  href: PropTypes.string,\n\n  /**\n   * onError callback that is passed down to the image inside this component\n   */\n  onError: PropTypes.func,\n\n  /**\n   * onLoad callback that is passed down to the image inside this component\n   */\n  onLoad: PropTypes.func\n};\n\nvar Thumbnail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Thumbnail, _React$Component);\n\n  function Thumbnail() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Thumbnail.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        src = _this$props.src,\n        alt = _this$props.alt,\n        onError = _this$props.onError,\n        onLoad = _this$props.onLoad,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"src\", \"alt\", \"onError\", \"onLoad\", \"className\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var Component$$1 = elementProps.href ? SafeAnchor : 'div';\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component$$1, _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }), React.createElement(\"img\", {\n      src: src,\n      alt: alt,\n      onError: onError,\n      onLoad: onLoad\n    }), children && React.createElement(\"div\", {\n      className: \"caption\"\n    }, children));\n  };\n\n  return Thumbnail;\n}(React.Component);\n\nThumbnail.propTypes = propTypes$18;\nbsClass('thumbnail', Thumbnail);\nvar propTypes$19 = {\n  /**\n   * The `<input>` `type`\n   * @type {[type]}\n   */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /**\n   * The HTML input name, used to group like checkboxes or radio buttons together\n   * semantically\n   */\n  name: PropTypes.string,\n\n  /**\n   * The checked state of the input, managed by `<ToggleButtonGroup>`` automatically\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The disabled state of both the label and input\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * [onChange description]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the input, and unique identifier in the ToggleButtonGroup\n   */\n  value: PropTypes.any.isRequired\n};\n\nvar ToggleButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ToggleButton, _React$Component);\n\n  function ToggleButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        name = _this$props.name,\n        checked = _this$props.checked,\n        type = _this$props.type,\n        onChange = _this$props.onChange,\n        value = _this$props.value,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"name\", \"checked\", \"type\", \"onChange\", \"value\"]);\n\n    var disabled = props.disabled;\n    return React.createElement(Button$1, _extends({}, props, {\n      active: !!checked,\n      componentClass: \"label\"\n    }), React.createElement(\"input\", {\n      name: name,\n      type: type,\n      autoComplete: \"off\",\n      value: value,\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange\n    }), children);\n  };\n\n  return ToggleButton;\n}(React.Component);\n\nToggleButton.propTypes = propTypes$19;\nvar propTypes$1a = {\n  /**\n   * An HTML `<input>` name for each child button.\n   *\n   * __Required if `type` is set to `'radio'`__\n   */\n  name: PropTypes.string,\n\n  /**\n   * The value, or array of values, of the active (pressed) buttons\n   *\n   * @controllable onChange\n   */\n  value: PropTypes.any,\n\n  /**\n   * Callback fired when a button is pressed, depending on whether the `type`\n   * is `'radio'` or `'checkbox'`, `onChange` will be called with the value or\n   * array of active values\n   *\n   * @controllable values\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input `type` of the rendered buttons, determines the toggle behavior\n   * of the buttons\n   */\n  type: PropTypes.oneOf(['checkbox', 'radio']).isRequired\n};\nvar defaultProps$U = {\n  type: 'radio'\n};\n\nvar ToggleButtonGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButtonGroup.prototype;\n\n  _proto.getValues = function getValues() {\n    var value = this.props.value;\n    return value == null ? [] : [].concat(value);\n  };\n\n  _proto.handleToggle = function handleToggle(value) {\n    var _this$props = this.props,\n        type = _this$props.type,\n        onChange = _this$props.onChange;\n    var values = this.getValues();\n    var isActive = values.indexOf(value) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) {\n        onChange(value);\n      }\n\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== value;\n      }));\n    } else {\n      onChange(values.concat([value]));\n    }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        type = _this$props2.type,\n        name = _this$props2.name,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"type\", \"name\"]);\n\n    var values = this.getValues();\n    !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant_1(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant_1(false) : void 0;\n    delete props.onChange;\n    delete props.value; // the data attribute is required b/c twbs css uses it in the selector\n\n    return React.createElement(ButtonGroup$1, _extends({}, props, {\n      \"data-toggle\": \"buttons\"\n    }), ValidComponentChildren.map(children, function (child) {\n      var _child$props = child.props,\n          value = _child$props.value,\n          onChange = _child$props.onChange;\n\n      var handler = function handler() {\n        return _this.handleToggle(value);\n      };\n\n      return React.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(value) !== -1,\n        onChange: createChainedFunction(onChange, handler)\n      });\n    }));\n  };\n\n  return ToggleButtonGroup;\n}(React.Component);\n\nToggleButtonGroup.propTypes = propTypes$1a;\nToggleButtonGroup.defaultProps = defaultProps$U;\nvar UncontrolledToggleButtonGroup = uncontrollable(ToggleButtonGroup, {\n  value: 'onChange'\n});\nUncontrolledToggleButtonGroup.Button = ToggleButton;\nvar propTypes$1b = {\n  /**\n   * An html id attribute, necessary for accessibility\n   * @type {string|number}\n   * @required\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Sets the direction the Tooltip is positioned towards.\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * The \"top\" position value for the Tooltip.\n   */\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The \"left\" position value for the Tooltip.\n   */\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The \"top\" position value for the Tooltip arrow.\n   */\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The \"left\" position value for the Tooltip arrow.\n   */\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nvar defaultProps$V = {\n  placement: 'right'\n};\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tooltip, _React$Component);\n\n  function Tooltip() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tooltip.prototype;\n\n  _proto.render = function render() {\n    var _extends2;\n\n    var _this$props = this.props,\n        placement = _this$props.placement,\n        positionTop = _this$props.positionTop,\n        positionLeft = _this$props.positionLeft,\n        arrowOffsetTop = _this$props.arrowOffsetTop,\n        arrowOffsetLeft = _this$props.arrowOffsetLeft,\n        className = _this$props.className,\n        style = _this$props.style,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"placement\", \"positionTop\", \"positionLeft\", \"arrowOffsetTop\", \"arrowOffsetLeft\", \"className\", \"style\", \"children\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));\n\n    var outerStyle = _extends({\n      top: positionTop,\n      left: positionLeft\n    }, style);\n\n    var arrowStyle = {\n      top: arrowOffsetTop,\n      left: arrowOffsetLeft\n    };\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      role: \"tooltip\",\n      className: classnames(className, classes),\n      style: outerStyle\n    }), React.createElement(\"div\", {\n      className: prefix(bsProps, 'arrow'),\n      style: arrowStyle\n    }), React.createElement(\"div\", {\n      className: prefix(bsProps, 'inner')\n    }, children));\n  };\n\n  return Tooltip;\n}(React.Component);\n\nTooltip.propTypes = propTypes$1b;\nTooltip.defaultProps = defaultProps$V;\nbsClass('tooltip', Tooltip);\n\nvar Well =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Well, _React$Component);\n\n  function Well() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Well.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classnames(className, classes)\n    }));\n  };\n\n  return Well;\n}(React.Component);\n\nbsClass('well', bsSizes([Size.LARGE, Size.SMALL], Well));\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends$1 = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar HistoryItem = function (_React$Component) {\n  inherits(HistoryItem, _React$Component);\n\n  function HistoryItem() {\n    classCallCheck(this, HistoryItem);\n    return possibleConstructorReturn(this, (HistoryItem.__proto__ || Object.getPrototypeOf(HistoryItem)).apply(this, arguments));\n  }\n\n  createClass(HistoryItem, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          onClick = _props.onClick;\n      return React.createElement(BreadcrumbItem, {\n        className: 'file-system-history-item',\n        onClick: onClick\n      }, name);\n    }\n  }]);\n  return HistoryItem;\n}(React.Component);\n\nHistoryItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nvar History = function (_React$Component) {\n  inherits(History, _React$Component);\n\n  function History() {\n    classCallCheck(this, History);\n    return possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).apply(this, arguments));\n  }\n\n  createClass(History, [{\n    key: 'createHistoryByFolderController',\n    value: function createHistoryByFolderController(folderController) {\n      var _this2 = this;\n\n      var historyItems = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      if (folderController.parentFolderController) {\n        historyItems = this.createHistoryByFolderController.call(this, folderController.parentFolderController, historyItems);\n      }\n\n      historyItems.push({\n        name: folderController.getName(),\n        onClick: function onClick() {\n          return _this2.props.setCurrFolder(folderController);\n        }\n      });\n      return historyItems;\n    }\n  }, {\n    key: 'createHistoryItem',\n    value: function createHistoryItem(item, index$$1) {\n      return React.createElement(HistoryItem, _extends$1({\n        key: index$$1\n      }, item));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var historyItems = this.createHistoryByFolderController.call(this, this.props.currFolderController);\n      return React.createElement(Breadcrumb$1, {\n        className: 'file-system-history'\n      }, historyItems.map(this.createHistoryItem, this));\n    }\n  }]);\n  return History;\n}(React.Component);\n\nHistory.propTypes = {\n  currFolderController: PropTypes.object,\n  setCurrFolder: PropTypes.func\n};\n\nvar FolderController = function () {\n  function FolderController(items, name, parentFolderController, refreshUI) {\n    classCallCheck(this, FolderController);\n    this._name = name;\n    this.parentFolderController = parentFolderController;\n    this.refreshUI = refreshUI;\n\n    this.onContextMenu = function () {};\n\n    this.onError = function () {};\n\n    this.onRenameFinished = function () {};\n\n    this.onRenameAborted = function () {};\n\n    this._folderItems = null;\n    this._fileItems = null;\n    this._path = this._determineParentFolderName();\n    this.itemApi = {};\n\n    if (items) {\n      this._setItems(items);\n    }\n\n    this.rename = this.rename.bind(this);\n  }\n\n  createClass(FolderController, [{\n    key: \"_seperateFolderAndFiles\",\n    value: function _seperateFolderAndFiles() {\n      var _this = this;\n\n      this._folderItems = [];\n      this._fileItems = [];\n\n      this._items.forEach(function (item) {\n        if (item.items) {\n          _this._folderItems.push(item);\n\n          return;\n        }\n\n        _this._fileItems.push(item);\n      });\n    }\n  }, {\n    key: \"_checkName\",\n    value: function _checkName(name) {\n      for (var i = 0; i < this._items.length; i++) {\n        var item = this._items[i];\n\n        if (item.name === name) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_modifyItem\",\n    value: function _modifyItem(index, modifiedItem, oldName) {\n      if (modifiedItem.name && !this.isValidRename(oldName, modifiedItem.name)) {\n        this.onError(new Error(\"name allready exists in dir\"));\n        return false;\n      }\n\n      var items = this._items;\n      items[index] = Object.assign(items[index], modifiedItem);\n\n      this._setItems(items);\n    }\n  }, {\n    key: \"_determineParentFolderName\",\n    value: function _determineParentFolderName() {\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var folderController = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      if (folderController.parentFolderController) {\n        path = this._determineParentFolderName(path, folderController.parentFolderController || false);\n      }\n\n      path += folderController.getName() + \"/\";\n      return path;\n    }\n  }, {\n    key: \"_setItems\",\n    value: function _setItems(items) {\n      this._items = items;\n\n      this._seperateFolderAndFiles();\n\n      this.refreshUI();\n    }\n  }, {\n    key: \"_addItemToApi\",\n    value: function _addItemToApi(name, item) {\n      this.itemApi[name] = item;\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return this._path;\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return this._items;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this._name;\n    }\n  }, {\n    key: \"getFolderItems\",\n    value: function getFolderItems() {\n      return this._folderItems;\n    }\n  }, {\n    key: \"getFileItems\",\n    value: function getFileItems() {\n      return this._fileItems;\n    }\n  }, {\n    key: \"onItemsLoaded\",\n    value: function onItemsLoaded(items) {\n      this._setItems(items);\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(item) {\n      if (!item.name) {\n        this.onError(new Error(\"no name provided\"));\n        return false;\n      }\n\n      if (!this._checkName(item.name)) {\n        this.onError(new Error(\"name allready exists in dir\"));\n        return false;\n      }\n\n      var items = this.getItems();\n      items.push(item);\n\n      this._setItems(items);\n    }\n  }, {\n    key: \"rename\",\n    value: function rename(oldName) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.itemApi[oldName]) {\n          _this2.onError(new Error(\"item doesnt exists in dir\"));\n\n          return false;\n        }\n\n        _this2.itemApi[oldName].setEditMode();\n\n        _this2.onRenameFinished = resolve;\n        _this2.onRenameAborted = reject;\n      });\n    }\n  }, {\n    key: \"isValidRename\",\n    value: function isValidRename(oldName, newName) {\n      if (oldName === newName) {\n        return true;\n      }\n\n      if (!newName || newName.length < 1) {\n        return false;\n      }\n\n      return this._checkName(newName);\n    }\n  }, {\n    key: \"modifyItemByName\",\n    value: function modifyItemByName(name, modifiedItem) {\n      for (var i = 0; i < this._items.length; i++) {\n        var item = this._items[i];\n\n        if (item.name === name) {\n          this._modifyItem(i, modifiedItem, name);\n\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"removeItemByName\",\n    value: function removeItemByName(name) {\n      for (var i = 0; i < this._items.length; i++) {\n        var item = this._items[i];\n\n        if (item.name === name) {\n          var items = this.getItems();\n          items.splice(i, 1);\n\n          this._setItems(items);\n\n          return name;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"sortItems\",\n    value: function sortItems(sortingKey) {\n      var ASC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var items = this.getItems();\n      items.sort(function (a, b) {\n        var val = ASC ? 1 : -1;\n\n        if (a[sortingKey] > b[sortingKey]) {\n          return val * 1;\n        }\n\n        if (a[sortingKey] < b[sortingKey]) {\n          return val * -1;\n        }\n\n        return 0;\n      });\n\n      this._setItems(items);\n    }\n  }]);\n  return FolderController;\n}();\n\nvar TreeFile = function (_Component) {\n  inherits(TreeFile, _Component);\n\n  function TreeFile() {\n    classCallCheck(this, TreeFile);\n    return possibleConstructorReturn(this, (TreeFile.__proto__ || Object.getPrototypeOf(TreeFile)).apply(this, arguments));\n  }\n\n  createClass(TreeFile, [{\n    key: 'render',\n    value: function render() {\n      var name = this.props.name;\n      return React.createElement('div', {\n        className: 'file'\n      }, name);\n    }\n  }]);\n  return TreeFile;\n}(Component);\n\nTreeFile.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nfunction CreateTreeItem(item, index) {\n  if (item.items) {\n    var folderController = new FolderController(item.items, item.name);\n    return React.createElement(TreeFolder, {\n      key: index,\n      folderController: folderController\n    });\n  }\n\n  return React.createElement(TreeFile, _extends$1({\n    key: index\n  }, item));\n}\n\nvar TreeFolder = function (_Component) {\n  inherits(TreeFolder, _Component);\n\n  function TreeFolder(props) {\n    classCallCheck(this, TreeFolder);\n\n    var _this = possibleConstructorReturn(this, (TreeFolder.__proto__ || Object.getPrototypeOf(TreeFolder)).call(this, props));\n\n    _this.folderController = props.folderController;\n    _this.state = {\n      open: props.open\n    };\n    return _this;\n  }\n\n  createClass(TreeFolder, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var items = this.folderController.getItems();\n      var name = this.folderController.getName();\n      return React.createElement('div', {\n        className: 'folder'\n      }, React.createElement('label', {\n        onClick: function onClick() {\n          return _this2.setState({\n            open: !_this2.state.open\n          });\n        }\n      }, React.createElement(Glyphicon$1, {\n        glyph: this.state.open ? \"folder-open\" : \"folder-close\"\n      }), ' ', name), React.createElement(Collapse, {\n        'in': this.state.open\n      }, React.createElement('div', {\n        className: 'folder-items'\n      }, items.map(CreateTreeItem))));\n    }\n  }]);\n  return TreeFolder;\n}(Component);\n\nTreeFolder.defaultProps = {\n  open: false\n};\nTreeFolder.propTypes = {\n  folderController: PropTypes.object,\n  open: PropTypes.bool\n};\nvar moment = createCommonjsModule(function (module, exports) {\n  (function (global, factory) {\n    module.exports = factory();\n  })(commonjsGlobal, function () {\n    var hookCallback;\n\n    function hooks() {\n      return hookCallback.apply(null, arguments);\n    } // This is done to register the method called with moment()\n    // without creating circular dependencies.\n\n\n    function setHookCallback(callback) {\n      hookCallback = callback;\n    }\n\n    function isArray(input) {\n      return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n      // IE8 will treat undefined and null as object if it wasn't for\n      // input != null\n      return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n      if (Object.getOwnPropertyNames) {\n        return Object.getOwnPropertyNames(obj).length === 0;\n      } else {\n        var k;\n\n        for (k in obj) {\n          if (obj.hasOwnProperty(k)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    function isUndefined(input) {\n      return input === void 0;\n    }\n\n    function isNumber(input) {\n      return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n      return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n      var res = [],\n          i;\n\n      for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n      }\n\n      return res;\n    }\n\n    function hasOwnProp(a, b) {\n      return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n      for (var i in b) {\n        if (hasOwnProp(b, i)) {\n          a[i] = b[i];\n        }\n      }\n\n      if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n      }\n\n      if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n      }\n\n      return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n      return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n      // We need to deep clone this object.\n      return {\n        empty: false,\n        unusedTokens: [],\n        unusedInput: [],\n        overflow: -2,\n        charsLeftOver: 0,\n        nullInput: false,\n        invalidMonth: null,\n        invalidFormat: false,\n        userInvalidated: false,\n        iso: false,\n        parsedDateParts: [],\n        meridiem: null,\n        rfc2822: false,\n        weekdayMismatch: false\n      };\n    }\n\n    function getParsingFlags(m) {\n      if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n      }\n\n      return m._pf;\n    }\n\n    var some;\n\n    if (Array.prototype.some) {\n      some = Array.prototype.some;\n    } else {\n      some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n          if (i in t && fun.call(this, t[i], i, t)) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function isValid(m) {\n      if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n          return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n        if (m._strict) {\n          isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n          m._isValid = isNowValid;\n        } else {\n          return isNowValid;\n        }\n      }\n\n      return m._isValid;\n    }\n\n    function createInvalid(flags) {\n      var m = createUTC(NaN);\n\n      if (flags != null) {\n        extend(getParsingFlags(m), flags);\n      } else {\n        getParsingFlags(m).userInvalidated = true;\n      }\n\n      return m;\n    } // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n\n\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n      var i, prop, val;\n\n      if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n      }\n\n      if (!isUndefined(from._i)) {\n        to._i = from._i;\n      }\n\n      if (!isUndefined(from._f)) {\n        to._f = from._f;\n      }\n\n      if (!isUndefined(from._l)) {\n        to._l = from._l;\n      }\n\n      if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n      }\n\n      if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n      }\n\n      if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n      }\n\n      if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n      }\n\n      if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n      }\n\n      if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n      }\n\n      if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n          prop = momentProperties[i];\n          val = from[prop];\n\n          if (!isUndefined(val)) {\n            to[prop] = val;\n          }\n        }\n      }\n\n      return to;\n    }\n\n    var updateInProgress = false; // Moment prototype object\n\n    function Moment(config) {\n      copyConfig(this, config);\n      this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n      if (!this.isValid()) {\n        this._d = new Date(NaN);\n      } // Prevent infinite loop in case updateOffset creates new moment\n      // objects.\n\n\n      if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n      }\n    }\n\n    function isMoment(obj) {\n      return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n    }\n\n    function absFloor(number) {\n      if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n      } else {\n        return Math.floor(number);\n      }\n    }\n\n    function toInt(argumentForCoercion) {\n      var coercedNumber = +argumentForCoercion,\n          value = 0;\n\n      if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n      }\n\n      return value;\n    } // compare two arrays, return the number of differences\n\n\n    function compareArrays(array1, array2, dontConvert) {\n      var len = Math.min(array1.length, array2.length),\n          lengthDiff = Math.abs(array1.length - array2.length),\n          diffs = 0,\n          i;\n\n      for (i = 0; i < len; i++) {\n        if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n          diffs++;\n        }\n      }\n\n      return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n      if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n      }\n    }\n\n    function deprecate(msg, fn) {\n      var firstTime = true;\n      return extend(function () {\n        if (hooks.deprecationHandler != null) {\n          hooks.deprecationHandler(null, msg);\n        }\n\n        if (firstTime) {\n          var args = [];\n          var arg;\n\n          for (var i = 0; i < arguments.length; i++) {\n            arg = '';\n\n            if (typeof arguments[i] === 'object') {\n              arg += '\\n[' + i + '] ';\n\n              for (var key in arguments[0]) {\n                arg += key + ': ' + arguments[0][key] + ', ';\n              }\n\n              arg = arg.slice(0, -2); // Remove trailing comma and space\n            } else {\n              arg = arguments[i];\n            }\n\n            args.push(arg);\n          }\n\n          warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n          firstTime = false;\n        }\n\n        return fn.apply(this, arguments);\n      }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n      }\n\n      if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n      }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n      return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set(config) {\n      var prop, i;\n\n      for (i in config) {\n        prop = config[i];\n\n        if (isFunction(prop)) {\n          this[i] = prop;\n        } else {\n          this['_' + i] = prop;\n        }\n      }\n\n      this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n      // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n      // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n      this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n      var res = extend({}, parentConfig),\n          prop;\n\n      for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n          if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n            res[prop] = {};\n            extend(res[prop], parentConfig[prop]);\n            extend(res[prop], childConfig[prop]);\n          } else if (childConfig[prop] != null) {\n            res[prop] = childConfig[prop];\n          } else {\n            delete res[prop];\n          }\n        }\n      }\n\n      for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n          // make sure changes to properties don't modify parent config\n          res[prop] = extend({}, res[prop]);\n        }\n      }\n\n      return res;\n    }\n\n    function Locale(config) {\n      if (config != null) {\n        this.set(config);\n      }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n      keys = Object.keys;\n    } else {\n      keys = function (obj) {\n        var i,\n            res = [];\n\n        for (i in obj) {\n          if (hasOwnProp(obj, i)) {\n            res.push(i);\n          }\n        }\n\n        return res;\n      };\n    }\n\n    var defaultCalendar = {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    };\n\n    function calendar(key, mom, now) {\n      var output = this._calendar[key] || this._calendar['sameElse'];\n      return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n      LTS: 'h:mm:ss A',\n      LT: 'h:mm A',\n      L: 'MM/DD/YYYY',\n      LL: 'MMMM D, YYYY',\n      LLL: 'MMMM D, YYYY h:mm A',\n      LLLL: 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat(key) {\n      var format = this._longDateFormat[key],\n          formatUpper = this._longDateFormat[key.toUpperCase()];\n\n      if (format || !formatUpper) {\n        return format;\n      }\n\n      this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n      });\n      return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n      return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n      return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n      var output = this._relativeTime[string];\n      return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n      var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n      return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n      var lowerCase = unit.toLowerCase();\n      aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n      return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n      var normalizedInput = {},\n          normalizedProp,\n          prop;\n\n      for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n          normalizedProp = normalizeUnits(prop);\n\n          if (normalizedProp) {\n            normalizedInput[normalizedProp] = inputObject[prop];\n          }\n        }\n      }\n\n      return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n      priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n      var units = [];\n\n      for (var u in unitsObj) {\n        units.push({\n          unit: u,\n          priority: priorities[u]\n        });\n      }\n\n      units.sort(function (a, b) {\n        return a.priority - b.priority;\n      });\n      return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n      var absNumber = '' + Math.abs(number),\n          zerosToFill = targetLength - absNumber.length,\n          sign = number >= 0;\n      return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n    var formatFunctions = {};\n    var formatTokenFunctions = {}; // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n\n    function addFormatToken(token, padded, ordinal, callback) {\n      var func = callback;\n\n      if (typeof callback === 'string') {\n        func = function () {\n          return this[callback]();\n        };\n      }\n\n      if (token) {\n        formatTokenFunctions[token] = func;\n      }\n\n      if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n          return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n      }\n\n      if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n          return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n      }\n    }\n\n    function removeFormattingTokens(input) {\n      if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n      }\n\n      return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n      var array = format.match(formattingTokens),\n          i,\n          length;\n\n      for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n          array[i] = formatTokenFunctions[array[i]];\n        } else {\n          array[i] = removeFormattingTokens(array[i]);\n        }\n      }\n\n      return function (mom) {\n        var output = '',\n            i;\n\n        for (i = 0; i < length; i++) {\n          output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n\n        return output;\n      };\n    } // format date using native date object\n\n\n    function formatMoment(m, format) {\n      if (!m.isValid()) {\n        return m.localeData().invalidDate();\n      }\n\n      format = expandFormat(format, m.localeData());\n      formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n      return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n      var i = 5;\n\n      function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n      }\n\n      localFormattingTokens.lastIndex = 0;\n\n      while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n      }\n\n      return format;\n    }\n\n    var match1 = /\\d/; //       0 - 9\n\n    var match2 = /\\d\\d/; //      00 - 99\n\n    var match3 = /\\d{3}/; //     000 - 999\n\n    var match4 = /\\d{4}/; //    0000 - 9999\n\n    var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n    var match1to2 = /\\d\\d?/; //       0 - 99\n\n    var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n    var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n    var match1to3 = /\\d{1,3}/; //       0 - 999\n\n    var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n    var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n    var matchUnsigned = /\\d+/; //       0 - inf\n\n    var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n    var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n    var regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n      regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return isStrict && strictRegex ? strictRegex : regex;\n      };\n    }\n\n    function getParseRegexForToken(token, config) {\n      if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n      }\n\n      return regexes[token](config._strict, config._locale);\n    } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n    function unescapeFormat(s) {\n      return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n      }));\n    }\n\n    function regexEscape(s) {\n      return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n      var i,\n          func = callback;\n\n      if (typeof token === 'string') {\n        token = [token];\n      }\n\n      if (isNumber(callback)) {\n        func = function (input, array) {\n          array[callback] = toInt(input);\n        };\n      }\n\n      for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n      }\n    }\n\n    function addWeekParseToken(token, callback) {\n      addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n      });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n      if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n      }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8; // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n      var y = this.year();\n      return y <= 9999 ? '' + y : '+' + y;\n    });\n    addFormatToken(0, ['YY', 2], 0, function () {\n      return this.year() % 100;\n    });\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n    addUnitAlias('year', 'y'); // PRIORITIES\n\n    addUnitPriority('year', 1); // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n      array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n      array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n      array[YEAR] = parseInt(input, 10);\n    }); // HELPERS\n\n    function daysInYear(year) {\n      return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n      return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n    } // HOOKS\n\n\n    hooks.parseTwoDigitYear = function (input) {\n      return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    }; // MOMENTS\n\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n      return isLeapYear(this.year());\n    }\n\n    function makeGetSet(unit, keepTime) {\n      return function (value) {\n        if (value != null) {\n          set$1(this, unit, value);\n          hooks.updateOffset(this, keepTime);\n          return this;\n        } else {\n          return get(this, unit);\n        }\n      };\n    }\n\n    function get(mom, unit) {\n      return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n      if (mom.isValid() && !isNaN(value)) {\n        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n          mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n        } else {\n          mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n      }\n    } // MOMENTS\n\n\n    function stringGet(units) {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units]();\n      }\n\n      return this;\n    }\n\n    function stringSet(units, value) {\n      if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n\n        for (var i = 0; i < prioritized.length; i++) {\n          this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n      } else {\n        units = normalizeUnits(units);\n\n        if (isFunction(this[units])) {\n          return this[units](value);\n        }\n      }\n\n      return this;\n    }\n\n    function mod(n, x) {\n      return (n % x + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n      indexOf = Array.prototype.indexOf;\n    } else {\n      indexOf = function (o) {\n        // I know\n        var i;\n\n        for (i = 0; i < this.length; ++i) {\n          if (this[i] === o) {\n            return i;\n          }\n        }\n\n        return -1;\n      };\n    }\n\n    function daysInMonth(year, month) {\n      if (isNaN(year) || isNaN(month)) {\n        return NaN;\n      }\n\n      var modMonth = mod(month, 12);\n      year += (month - modMonth) / 12;\n      return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n    } // FORMATTING\n\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n      return this.month() + 1;\n    });\n    addFormatToken('MMM', 0, 0, function (format) {\n      return this.localeData().monthsShort(this, format);\n    });\n    addFormatToken('MMMM', 0, 0, function (format) {\n      return this.localeData().months(this, format);\n    }); // ALIASES\n\n    addUnitAlias('month', 'M'); // PRIORITY\n\n    addUnitPriority('month', 8); // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n      return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n      return locale.monthsRegex(isStrict);\n    });\n    addParseToken(['M', 'MM'], function (input, array) {\n      array[MONTH] = toInt(input) - 1;\n    });\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n      var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n      if (month != null) {\n        array[MONTH] = month;\n      } else {\n        getParsingFlags(config).invalidMonth = input;\n      }\n    }); // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n    function localeMonths(m, format) {\n      if (!m) {\n        return isArray(this._months) ? this._months : this._months['standalone'];\n      }\n\n      return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n    function localeMonthsShort(m, format) {\n      if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n      }\n\n      return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n      var i,\n          ii,\n          mom,\n          llc = monthName.toLocaleLowerCase();\n\n      if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n\n        for (i = 0; i < 12; ++i) {\n          mom = createUTC([2000, i]);\n          this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n          this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n      }\n\n      if (strict) {\n        if (format === 'MMM') {\n          ii = indexOf.call(this._shortMonthsParse, llc);\n          return ii !== -1 ? ii : null;\n        } else {\n          ii = indexOf.call(this._longMonthsParse, llc);\n          return ii !== -1 ? ii : null;\n        }\n      } else {\n        if (format === 'MMM') {\n          ii = indexOf.call(this._shortMonthsParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._longMonthsParse, llc);\n          return ii !== -1 ? ii : null;\n        } else {\n          ii = indexOf.call(this._longMonthsParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._shortMonthsParse, llc);\n          return ii !== -1 ? ii : null;\n        }\n      }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n      var i, mom, regex;\n\n      if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n      }\n\n      if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n      } // TODO: add sorting\n      // Sorting makes sure if one month (or abbr) is a prefix of another\n      // see sorting in computeMonthsParse\n\n\n      for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n\n        if (strict && !this._longMonthsParse[i]) {\n          this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n          this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n\n        if (!strict && !this._monthsParse[i]) {\n          regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n          this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        } // test the regex\n\n\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n          return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n          return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n          return i;\n        }\n      }\n    } // MOMENTS\n\n\n    function setMonth(mom, value) {\n      var dayOfMonth;\n\n      if (!mom.isValid()) {\n        // No op\n        return mom;\n      }\n\n      if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n          value = toInt(value);\n        } else {\n          value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n          if (!isNumber(value)) {\n            return mom;\n          }\n        }\n      }\n\n      dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n      mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n      return mom;\n    }\n\n    function getSetMonth(value) {\n      if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n      } else {\n        return get(this, 'Month');\n      }\n    }\n\n    function getDaysInMonth() {\n      return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n\n    function monthsShortRegex(isStrict) {\n      if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n          computeMonthsParse.call(this);\n        }\n\n        if (isStrict) {\n          return this._monthsShortStrictRegex;\n        } else {\n          return this._monthsShortRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n          this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n\n        return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n      }\n    }\n\n    var defaultMonthsRegex = matchWord;\n\n    function monthsRegex(isStrict) {\n      if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n          computeMonthsParse.call(this);\n        }\n\n        if (isStrict) {\n          return this._monthsStrictRegex;\n        } else {\n          return this._monthsRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n          this._monthsRegex = defaultMonthsRegex;\n        }\n\n        return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n      }\n    }\n\n    function computeMonthsParse() {\n      function cmpLenRev(a, b) {\n        return b.length - a.length;\n      }\n\n      var shortPieces = [],\n          longPieces = [],\n          mixedPieces = [],\n          i,\n          mom;\n\n      for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n      } // Sorting makes sure if one month (or abbr) is a prefix of another it\n      // will match the longer piece.\n\n\n      shortPieces.sort(cmpLenRev);\n      longPieces.sort(cmpLenRev);\n      mixedPieces.sort(cmpLenRev);\n\n      for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n      }\n\n      for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n      }\n\n      this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n      this._monthsShortRegex = this._monthsRegex;\n      this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n      this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n      // can't just apply() to create a date:\n      // https://stackoverflow.com/q/181348\n      var date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n      if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n\n      return date;\n    }\n\n    function createUTCDate(y) {\n      var date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n      if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n\n      return date;\n    } // start-of-first-week - start-of-year\n\n\n    function firstWeekOffset(year, dow, doy) {\n      var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n      fwd = 7 + dow - doy,\n          // first-week day local weekday -- which local weekday is fwd\n      fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n      return -fwdlw + fwd - 1;\n    } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n      var localWeekday = (7 + weekday - dow) % 7,\n          weekOffset = firstWeekOffset(year, dow, doy),\n          dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n          resYear,\n          resDayOfYear;\n\n      if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n      } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n      } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n      }\n\n      return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n      };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n      var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n          week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n          resWeek,\n          resYear;\n\n      if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n      } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n      } else {\n        resYear = mom.year();\n        resWeek = week;\n      }\n\n      return {\n        week: resWeek,\n        year: resYear\n      };\n    }\n\n    function weeksInYear(year, dow, doy) {\n      var weekOffset = firstWeekOffset(year, dow, doy),\n          weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n      return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    } // FORMATTING\n\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5); // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n      week[token.substr(0, 1)] = toInt(input);\n    }); // HELPERS\n    // LOCALES\n\n    function localeWeek(mom) {\n      return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n    };\n\n    function localeFirstDayOfWeek() {\n      return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n      return this._week.doy;\n    } // MOMENTS\n\n\n    function getSetWeek(input) {\n      var week = this.localeData().week(this);\n      return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n      var week = weekOfYear(this, 1, 4).week;\n      return input == null ? week : this.add((input - week) * 7, 'd');\n    } // FORMATTING\n\n\n    addFormatToken('d', 0, 'do', 'day');\n    addFormatToken('dd', 0, 0, function (format) {\n      return this.localeData().weekdaysMin(this, format);\n    });\n    addFormatToken('ddd', 0, 0, function (format) {\n      return this.localeData().weekdaysShort(this, format);\n    });\n    addFormatToken('dddd', 0, 0, function (format) {\n      return this.localeData().weekdays(this, format);\n    });\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11); // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n      return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n      return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n      return locale.weekdaysRegex(isStrict);\n    });\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n      var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n      if (weekday != null) {\n        week.d = weekday;\n      } else {\n        getParsingFlags(config).invalidWeekday = input;\n      }\n    });\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n      week[token] = toInt(input);\n    }); // HELPERS\n\n    function parseWeekday(input, locale) {\n      if (typeof input !== 'string') {\n        return input;\n      }\n\n      if (!isNaN(input)) {\n        return parseInt(input, 10);\n      }\n\n      input = locale.weekdaysParse(input);\n\n      if (typeof input === 'number') {\n        return input;\n      }\n\n      return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n      if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n      }\n\n      return isNaN(input) ? null : input;\n    } // LOCALES\n\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n    function localeWeekdays(m, format) {\n      if (!m) {\n        return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];\n      }\n\n      return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n    function localeWeekdaysShort(m) {\n      return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n    function localeWeekdaysMin(m) {\n      return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n      var i,\n          ii,\n          mom,\n          llc = weekdayName.toLocaleLowerCase();\n\n      if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n          mom = createUTC([2000, 1]).day(i);\n          this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n          this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n          this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n      }\n\n      if (strict) {\n        if (format === 'dddd') {\n          ii = indexOf.call(this._weekdaysParse, llc);\n          return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n          ii = indexOf.call(this._shortWeekdaysParse, llc);\n          return ii !== -1 ? ii : null;\n        } else {\n          ii = indexOf.call(this._minWeekdaysParse, llc);\n          return ii !== -1 ? ii : null;\n        }\n      } else {\n        if (format === 'dddd') {\n          ii = indexOf.call(this._weekdaysParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._minWeekdaysParse, llc);\n          return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n          ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._weekdaysParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._minWeekdaysParse, llc);\n          return ii !== -1 ? ii : null;\n        } else {\n          ii = indexOf.call(this._minWeekdaysParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._weekdaysParse, llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = indexOf.call(this._shortWeekdaysParse, llc);\n          return ii !== -1 ? ii : null;\n        }\n      }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n      var i, mom, regex;\n\n      if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n      }\n\n      if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n      }\n\n      for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n\n        if (strict && !this._fullWeekdaysParse[i]) {\n          this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n          this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n          this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        }\n\n        if (!this._weekdaysParse[i]) {\n          regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n          this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        } // test the regex\n\n\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n          return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n          return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n          return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n          return i;\n        }\n      }\n    } // MOMENTS\n\n\n    function getSetDayOfWeek(input) {\n      if (!this.isValid()) {\n        return input != null ? this : NaN;\n      }\n\n      var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n      if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n      } else {\n        return day;\n      }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n      if (!this.isValid()) {\n        return input != null ? this : NaN;\n      }\n\n      var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n      return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n      if (!this.isValid()) {\n        return input != null ? this : NaN;\n      } // behaves the same as moment#day except\n      // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n      // as a setter, sunday should belong to the previous week.\n\n\n      if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n      } else {\n        return this.day() || 7;\n      }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n\n    function weekdaysRegex(isStrict) {\n      if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          computeWeekdaysParse.call(this);\n        }\n\n        if (isStrict) {\n          return this._weekdaysStrictRegex;\n        } else {\n          return this._weekdaysRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n\n        return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n      }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n\n    function weekdaysShortRegex(isStrict) {\n      if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          computeWeekdaysParse.call(this);\n        }\n\n        if (isStrict) {\n          return this._weekdaysShortStrictRegex;\n        } else {\n          return this._weekdaysShortRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n          this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n\n        return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n      }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n\n    function weekdaysMinRegex(isStrict) {\n      if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          computeWeekdaysParse.call(this);\n        }\n\n        if (isStrict) {\n          return this._weekdaysMinStrictRegex;\n        } else {\n          return this._weekdaysMinRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n          this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n\n        return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n      }\n    }\n\n    function computeWeekdaysParse() {\n      function cmpLenRev(a, b) {\n        return b.length - a.length;\n      }\n\n      var minPieces = [],\n          shortPieces = [],\n          longPieces = [],\n          mixedPieces = [],\n          i,\n          mom,\n          minp,\n          shortp,\n          longp;\n\n      for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n      } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n      // will match the longer piece.\n\n\n      minPieces.sort(cmpLenRev);\n      shortPieces.sort(cmpLenRev);\n      longPieces.sort(cmpLenRev);\n      mixedPieces.sort(cmpLenRev);\n\n      for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n      }\n\n      this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n      this._weekdaysShortRegex = this._weekdaysRegex;\n      this._weekdaysMinRegex = this._weekdaysRegex;\n      this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n      this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n      this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    } // FORMATTING\n\n\n    function hFormat() {\n      return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n      return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n    addFormatToken('hmm', 0, 0, function () {\n      return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n    addFormatToken('hmmss', 0, 0, function () {\n      return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n    });\n    addFormatToken('Hmm', 0, 0, function () {\n      return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n    addFormatToken('Hmmss', 0, 0, function () {\n      return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem(token, lowercase) {\n      addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n      });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false); // ALIASES\n\n    addUnitAlias('hour', 'h'); // PRIORITY\n\n    addUnitPriority('hour', 13); // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n      return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n      var kInput = toInt(input);\n      array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n      config._isPm = config._locale.isPM(input);\n      config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n      array[HOUR] = toInt(input);\n      getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n      var pos = input.length - 2;\n      array[HOUR] = toInt(input.substr(0, pos));\n      array[MINUTE] = toInt(input.substr(pos));\n      getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n      var pos1 = input.length - 4;\n      var pos2 = input.length - 2;\n      array[HOUR] = toInt(input.substr(0, pos1));\n      array[MINUTE] = toInt(input.substr(pos1, 2));\n      array[SECOND] = toInt(input.substr(pos2));\n      getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n      var pos = input.length - 2;\n      array[HOUR] = toInt(input.substr(0, pos));\n      array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n      var pos1 = input.length - 4;\n      var pos2 = input.length - 2;\n      array[HOUR] = toInt(input.substr(0, pos1));\n      array[MINUTE] = toInt(input.substr(pos1, 2));\n      array[SECOND] = toInt(input.substr(pos2));\n    }); // LOCALES\n\n    function localeIsPM(input) {\n      // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n      // Using charAt should be more compatible.\n      return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n    function localeMeridiem(hours, minutes, isLower) {\n      if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n      } else {\n        return isLower ? 'am' : 'AM';\n      }\n    } // MOMENTS\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n\n\n    var getSetHour = makeGetSet('Hours', true);\n    var baseConfig = {\n      calendar: defaultCalendar,\n      longDateFormat: defaultLongDateFormat,\n      invalidDate: defaultInvalidDate,\n      ordinal: defaultOrdinal,\n      dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n      relativeTime: defaultRelativeTime,\n      months: defaultLocaleMonths,\n      monthsShort: defaultLocaleMonthsShort,\n      week: defaultLocaleWeek,\n      weekdays: defaultLocaleWeekdays,\n      weekdaysMin: defaultLocaleWeekdaysMin,\n      weekdaysShort: defaultLocaleWeekdaysShort,\n      meridiemParse: defaultLocaleMeridiemParse\n    }; // internal storage for locale config files\n\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n      return key ? key.toLowerCase().replace('_', '-') : key;\n    } // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n    function chooseLocale(names) {\n      var i = 0,\n          j,\n          next,\n          locale,\n          split;\n\n      while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n\n        while (j > 0) {\n          locale = loadLocale(split.slice(0, j).join('-'));\n\n          if (locale) {\n            return locale;\n          }\n\n          if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n            //the next array item is better than a shallower substring of this one\n            break;\n          }\n\n          j--;\n        }\n\n        i++;\n      }\n\n      return globalLocale;\n    }\n\n    function loadLocale(name) {\n      var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n      if (!locales[name] && 'object' !== 'undefined' && module && module.exports) {\n        try {\n          oldLocale = globalLocale._abbr;\n          var aliasedRequire = commonjsRequire;\n          aliasedRequire('./locale/' + name);\n          getSetGlobalLocale(oldLocale);\n        } catch (e) {}\n      }\n\n      return locales[name];\n    } // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n\n\n    function getSetGlobalLocale(key, values) {\n      var data;\n\n      if (key) {\n        if (isUndefined(values)) {\n          data = getLocale(key);\n        } else {\n          data = defineLocale(key, values);\n        }\n\n        if (data) {\n          // moment.duration._locale = moment._locale = data;\n          globalLocale = data;\n        } else {\n          if (typeof console !== 'undefined' && console.warn) {\n            //warn user if arguments are passed but the locale could not be set\n            console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n          }\n        }\n      }\n\n      return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n      if (config !== null) {\n        var locale,\n            parentConfig = baseConfig;\n        config.abbr = name;\n\n        if (locales[name] != null) {\n          deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n          parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n          if (locales[config.parentLocale] != null) {\n            parentConfig = locales[config.parentLocale]._config;\n          } else {\n            locale = loadLocale(config.parentLocale);\n\n            if (locale != null) {\n              parentConfig = locale._config;\n            } else {\n              if (!localeFamilies[config.parentLocale]) {\n                localeFamilies[config.parentLocale] = [];\n              }\n\n              localeFamilies[config.parentLocale].push({\n                name: name,\n                config: config\n              });\n              return null;\n            }\n          }\n        }\n\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n          localeFamilies[name].forEach(function (x) {\n            defineLocale(x.name, x.config);\n          });\n        } // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n\n\n        getSetGlobalLocale(name);\n        return locales[name];\n      } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n      }\n    }\n\n    function updateLocale(name, config) {\n      if (config != null) {\n        var locale,\n            tmpLocale,\n            parentConfig = baseConfig; // MERGE\n\n        tmpLocale = loadLocale(name);\n\n        if (tmpLocale != null) {\n          parentConfig = tmpLocale._config;\n        }\n\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale; // backwards compat for now: also set the locale\n\n        getSetGlobalLocale(name);\n      } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n          if (locales[name].parentLocale != null) {\n            locales[name] = locales[name].parentLocale;\n          } else if (locales[name] != null) {\n            delete locales[name];\n          }\n        }\n      }\n\n      return locales[name];\n    } // returns locale data\n\n\n    function getLocale(key) {\n      var locale;\n\n      if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n      }\n\n      if (!key) {\n        return globalLocale;\n      }\n\n      if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n\n        if (locale) {\n          return locale;\n        }\n\n        key = [key];\n      }\n\n      return chooseLocale(key);\n    }\n\n    function listLocales() {\n      return keys(locales);\n    }\n\n    function checkOverflow(m) {\n      var overflow;\n      var a = m._a;\n\n      if (a && getParsingFlags(m).overflow === -2) {\n        overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n          overflow = DATE;\n        }\n\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n          overflow = WEEK;\n        }\n\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n          overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n      }\n\n      return m;\n    } // Pick the first defined of two or three arguments.\n\n\n    function defaults(a, b, c) {\n      if (a != null) {\n        return a;\n      }\n\n      if (b != null) {\n        return b;\n      }\n\n      return c;\n    }\n\n    function currentDateArray(config) {\n      // hooks is actually the exported moment object\n      var nowValue = new Date(hooks.now());\n\n      if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n      }\n\n      return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    } // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n\n\n    function configFromArray(config) {\n      var i,\n          date,\n          input = [],\n          currentDate,\n          expectedWeekday,\n          yearToUse;\n\n      if (config._d) {\n        return;\n      }\n\n      currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n      if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n      } //if the day of the year is set, figure out what it is\n\n\n      if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n          getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n      } // Default to current date.\n      // * if no year, month, day of month are given, default to today\n      // * if day of month is given, default month and year\n      // * if month is given, default only year\n      // * if year is given, don't default anything\n\n\n      for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n      } // Zero out whatever was not defaulted, including time\n\n\n      for (; i < 7; i++) {\n        config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n      } // Check for 24:00:00.000\n\n\n      if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n      }\n\n      config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n      expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n      // with parseZone.\n\n      if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n      }\n\n      if (config._nextDay) {\n        config._a[HOUR] = 24;\n      } // check for mismatching day of week\n\n\n      if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n      }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n      var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n      w = config._w;\n\n      if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n\n        if (weekday < 1 || weekday > 7) {\n          weekdayOverflow = true;\n        }\n      } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n          // weekday -- low day numbers are considered next week\n          weekday = w.d;\n\n          if (weekday < 0 || weekday > 6) {\n            weekdayOverflow = true;\n          }\n        } else if (w.e != null) {\n          // local weekday -- counting starts from begining of week\n          weekday = w.e + dow;\n\n          if (w.e < 0 || w.e > 6) {\n            weekdayOverflow = true;\n          }\n        } else {\n          // default to begining of week\n          weekday = dow;\n        }\n      }\n\n      if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n      } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n      } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n      }\n    } // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n    var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n    var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n    function configFromISO(config) {\n      var i,\n          l,\n          string = config._i,\n          match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n          allowTime,\n          dateFormat,\n          timeFormat,\n          tzFormat;\n\n      if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n          if (isoDates[i][1].exec(match[1])) {\n            dateFormat = isoDates[i][0];\n            allowTime = isoDates[i][2] !== false;\n            break;\n          }\n        }\n\n        if (dateFormat == null) {\n          config._isValid = false;\n          return;\n        }\n\n        if (match[3]) {\n          for (i = 0, l = isoTimes.length; i < l; i++) {\n            if (isoTimes[i][1].exec(match[3])) {\n              // match[2] should be 'T' or space\n              timeFormat = (match[2] || ' ') + isoTimes[i][0];\n              break;\n            }\n          }\n\n          if (timeFormat == null) {\n            config._isValid = false;\n            return;\n          }\n        }\n\n        if (!allowTime && timeFormat != null) {\n          config._isValid = false;\n          return;\n        }\n\n        if (match[4]) {\n          if (tzRegex.exec(match[4])) {\n            tzFormat = 'Z';\n          } else {\n            config._isValid = false;\n            return;\n          }\n        }\n\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n      } else {\n        config._isValid = false;\n      }\n    } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n      var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n      if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n      }\n\n      return result;\n    }\n\n    function untruncateYear(yearStr) {\n      var year = parseInt(yearStr, 10);\n\n      if (year <= 49) {\n        return 2000 + year;\n      } else if (year <= 999) {\n        return 1900 + year;\n      }\n\n      return year;\n    }\n\n    function preprocessRFC2822(s) {\n      // Remove comments and folding whitespace and replace multiple-spaces with a single space\n      return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n      if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n        if (weekdayProvided !== weekdayActual) {\n          getParsingFlags(config).weekdayMismatch = true;\n          config._isValid = false;\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    var obsOffsets = {\n      UT: 0,\n      GMT: 0,\n      EDT: -4 * 60,\n      EST: -5 * 60,\n      CDT: -5 * 60,\n      CST: -6 * 60,\n      MDT: -6 * 60,\n      MST: -7 * 60,\n      PDT: -7 * 60,\n      PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n      if (obsOffset) {\n        return obsOffsets[obsOffset];\n      } else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n      } else {\n        var hm = parseInt(numOffset, 10);\n        var m = hm % 100,\n            h = (hm - m) / 100;\n        return h * 60 + m;\n      }\n    } // date and time from ref 2822 format\n\n\n    function configFromRFC2822(config) {\n      var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n      if (match) {\n        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n        if (!checkWeekday(match[1], parsedArray, config)) {\n          return;\n        }\n\n        config._a = parsedArray;\n        config._tzm = calculateOffset(match[8], match[9], match[10]);\n        config._d = createUTCDate.apply(null, config._a);\n\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n        getParsingFlags(config).rfc2822 = true;\n      } else {\n        config._isValid = false;\n      }\n    } // date from iso format or fallback\n\n\n    function configFromString(config) {\n      var matched = aspNetJsonRegex.exec(config._i);\n\n      if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n      }\n\n      configFromISO(config);\n\n      if (config._isValid === false) {\n        delete config._isValid;\n      } else {\n        return;\n      }\n\n      configFromRFC2822(config);\n\n      if (config._isValid === false) {\n        delete config._isValid;\n      } else {\n        return;\n      } // Final attempt, use Input Fallback\n\n\n      hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n      config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }); // constant that refers to the ISO standard\n\n    hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n    hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n    function configFromStringAndFormat(config) {\n      // TODO: Move this to another part of the creation flow to prevent circular deps\n      if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n      }\n\n      if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n      }\n\n      config._a = [];\n      getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n      var string = '' + config._i,\n          i,\n          parsedInput,\n          tokens,\n          token,\n          skipped,\n          stringLength = string.length,\n          totalParsedInputLength = 0;\n      tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n      for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n\n        if (parsedInput) {\n          skipped = string.substr(0, string.indexOf(parsedInput));\n\n          if (skipped.length > 0) {\n            getParsingFlags(config).unusedInput.push(skipped);\n          }\n\n          string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n          totalParsedInputLength += parsedInput.length;\n        } // don't parse if it's not a known token\n\n\n        if (formatTokenFunctions[token]) {\n          if (parsedInput) {\n            getParsingFlags(config).empty = false;\n          } else {\n            getParsingFlags(config).unusedTokens.push(token);\n          }\n\n          addTimeToArrayFromToken(token, parsedInput, config);\n        } else if (config._strict && !parsedInput) {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n      } // add remaining unparsed input length to the string\n\n\n      getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n      if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n      } // clear _12h flag if hour is <= 12\n\n\n      if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n      }\n\n      getParsingFlags(config).parsedDateParts = config._a.slice(0);\n      getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n      config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n      configFromArray(config);\n      checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n      var isPm;\n\n      if (meridiem == null) {\n        // nothing to do\n        return hour;\n      }\n\n      if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n      } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n\n        if (isPm && hour < 12) {\n          hour += 12;\n        }\n\n        if (!isPm && hour === 12) {\n          hour = 0;\n        }\n\n        return hour;\n      } else {\n        // this is not supposed to happen\n        return hour;\n      }\n    } // date from string and array of format strings\n\n\n    function configFromStringAndArray(config) {\n      var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n      if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n      }\n\n      for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n\n        if (config._useUTC != null) {\n          tempConfig._useUTC = config._useUTC;\n        }\n\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n          continue;\n        } // if there is any input that was not parsed add a penalty for that format\n\n\n        currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n        }\n      }\n\n      extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n      if (config._d) {\n        return;\n      }\n\n      var i = normalizeObjectUnits(config._i);\n      config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n      });\n      configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n      var res = new Moment(checkOverflow(prepareConfig(config)));\n\n      if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n      }\n\n      return res;\n    }\n\n    function prepareConfig(config) {\n      var input = config._i,\n          format = config._f;\n      config._locale = config._locale || getLocale(config._l);\n\n      if (input === null || format === undefined && input === '') {\n        return createInvalid({\n          nullInput: true\n        });\n      }\n\n      if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n      }\n\n      if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n      } else if (isDate(input)) {\n        config._d = input;\n      } else if (isArray(format)) {\n        configFromStringAndArray(config);\n      } else if (format) {\n        configFromStringAndFormat(config);\n      } else {\n        configFromInput(config);\n      }\n\n      if (!isValid(config)) {\n        config._d = null;\n      }\n\n      return config;\n    }\n\n    function configFromInput(config) {\n      var input = config._i;\n\n      if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n      } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n      } else if (typeof input === 'string') {\n        configFromString(config);\n      } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n          return parseInt(obj, 10);\n        });\n        configFromArray(config);\n      } else if (isObject(input)) {\n        configFromObject(config);\n      } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n      } else {\n        hooks.createFromInputFallback(config);\n      }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n      var c = {};\n\n      if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n      }\n\n      if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n        input = undefined;\n      } // object construction must be done this way.\n      // https://github.com/moment/moment/issues/1423\n\n\n      c._isAMomentObject = true;\n      c._useUTC = c._isUTC = isUTC;\n      c._l = locale;\n      c._i = input;\n      c._f = format;\n      c._strict = strict;\n      return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n      return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n\n      if (this.isValid() && other.isValid()) {\n        return other < this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    });\n    var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n\n      if (this.isValid() && other.isValid()) {\n        return other > this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    }); // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n\n    function pickBy(fn, moments) {\n      var res, i;\n\n      if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n      }\n\n      if (!moments.length) {\n        return createLocal();\n      }\n\n      res = moments[0];\n\n      for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n          res = moments[i];\n        }\n      }\n\n      return res;\n    } // TODO: Use [].sort instead?\n\n\n    function min() {\n      var args = [].slice.call(arguments, 0);\n      return pickBy('isBefore', args);\n    }\n\n    function max() {\n      var args = [].slice.call(arguments, 0);\n      return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n      return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n      for (var key in m) {\n        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n          return false;\n        }\n      }\n\n      var unitHasDecimal = false;\n\n      for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n          if (unitHasDecimal) {\n            return false; // only allow non-integers for smallest unit\n          }\n\n          if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n            unitHasDecimal = true;\n          }\n        }\n      }\n\n      return true;\n    }\n\n    function isValid$1() {\n      return this._isValid;\n    }\n\n    function createInvalid$1() {\n      return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n      var normalizedInput = normalizeObjectUnits(duration),\n          years = normalizedInput.year || 0,\n          quarters = normalizedInput.quarter || 0,\n          months = normalizedInput.month || 0,\n          weeks = normalizedInput.week || 0,\n          days = normalizedInput.day || 0,\n          hours = normalizedInput.hour || 0,\n          minutes = normalizedInput.minute || 0,\n          seconds = normalizedInput.second || 0,\n          milliseconds = normalizedInput.millisecond || 0;\n      this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n      this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n      minutes * 6e4 + // 1000 * 60\n      hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n      // Because of dateAddRemove treats 24 hours as different from a\n      // day when working around DST, we need to store them separately\n\n      this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n      // which months you are are talking about, so we have to store\n      // it separately.\n\n      this._months = +months + quarters * 3 + years * 12;\n      this._data = {};\n      this._locale = getLocale();\n\n      this._bubble();\n    }\n\n    function isDuration(obj) {\n      return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n      if (number < 0) {\n        return Math.round(-1 * number) * -1;\n      } else {\n        return Math.round(number);\n      }\n    } // FORMATTING\n\n\n    function offset(token, separator) {\n      addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n\n        if (offset < 0) {\n          offset = -offset;\n          sign = '-';\n        }\n\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n      });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', ''); // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n      config._useUTC = true;\n      config._tzm = offsetFromString(matchShortOffset, input);\n    }); // HELPERS\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n      var matches = (string || '').match(matcher);\n\n      if (matches === null) {\n        return null;\n      }\n\n      var chunk = matches[matches.length - 1] || [];\n      var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n      var minutes = +(parts[1] * 60) + toInt(parts[2]);\n      return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n    function cloneWithOffset(input, model) {\n      var res, diff;\n\n      if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n        res._d.setTime(res._d.valueOf() + diff);\n\n        hooks.updateOffset(res, false);\n        return res;\n      } else {\n        return createLocal(input).local();\n      }\n    }\n\n    function getDateOffset(m) {\n      // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n      // https://github.com/moment/moment/pull/1871\n      return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    } // HOOKS\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n\n\n    hooks.updateOffset = function () {}; // MOMENTS\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n\n\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n      var offset = this._offset || 0,\n          localAdjust;\n\n      if (!this.isValid()) {\n        return input != null ? this : NaN;\n      }\n\n      if (input != null) {\n        if (typeof input === 'string') {\n          input = offsetFromString(matchShortOffset, input);\n\n          if (input === null) {\n            return this;\n          }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n          input = input * 60;\n        }\n\n        if (!this._isUTC && keepLocalTime) {\n          localAdjust = getDateOffset(this);\n        }\n\n        this._offset = input;\n        this._isUTC = true;\n\n        if (localAdjust != null) {\n          this.add(localAdjust, 'm');\n        }\n\n        if (offset !== input) {\n          if (!keepLocalTime || this._changeInProgress) {\n            addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n          } else if (!this._changeInProgress) {\n            this._changeInProgress = true;\n            hooks.updateOffset(this, true);\n            this._changeInProgress = null;\n          }\n        }\n\n        return this;\n      } else {\n        return this._isUTC ? offset : getDateOffset(this);\n      }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n      if (input != null) {\n        if (typeof input !== 'string') {\n          input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n        return this;\n      } else {\n        return -this.utcOffset();\n      }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n      return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n      if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n          this.subtract(getDateOffset(this), 'm');\n        }\n      }\n\n      return this;\n    }\n\n    function setOffsetToParsedOffset() {\n      if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n      } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n\n        if (tZone != null) {\n          this.utcOffset(tZone);\n        } else {\n          this.utcOffset(0, true);\n        }\n      }\n\n      return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n      if (!this.isValid()) {\n        return false;\n      }\n\n      input = input ? createLocal(input).utcOffset() : 0;\n      return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n      return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n    }\n\n    function isDaylightSavingTimeShifted() {\n      if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n      }\n\n      var c = {};\n      copyConfig(c, this);\n      c = prepareConfig(c);\n\n      if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n      } else {\n        this._isDSTShifted = false;\n      }\n\n      return this._isDSTShifted;\n    }\n\n    function isLocal() {\n      return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n      return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n      return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    } // ASP.NET json date format regex\n\n\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n      var duration = input,\n          // matching against regexp is expensive, do it on demand\n      match = null,\n          sign,\n          ret,\n          diffRes;\n\n      if (isDuration(input)) {\n        duration = {\n          ms: input._milliseconds,\n          d: input._days,\n          M: input._months\n        };\n      } else if (isNumber(input)) {\n        duration = {};\n\n        if (key) {\n          duration[key] = input;\n        } else {\n          duration.milliseconds = input;\n        }\n      } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = match[1] === '-' ? -1 : 1;\n        duration = {\n          y: 0,\n          d: toInt(match[DATE]) * sign,\n          h: toInt(match[HOUR]) * sign,\n          m: toInt(match[MINUTE]) * sign,\n          s: toInt(match[SECOND]) * sign,\n          ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n        };\n      } else if (!!(match = isoRegex.exec(input))) {\n        sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n        duration = {\n          y: parseIso(match[2], sign),\n          M: parseIso(match[3], sign),\n          w: parseIso(match[4], sign),\n          d: parseIso(match[5], sign),\n          h: parseIso(match[6], sign),\n          m: parseIso(match[7], sign),\n          s: parseIso(match[8], sign)\n        };\n      } else if (duration == null) {\n        // checks for null or undefined\n        duration = {};\n      } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n      }\n\n      ret = new Duration(duration);\n\n      if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n      }\n\n      return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n      // We'd normally use ~~inp for this, but unfortunately it also\n      // converts floats to ints.\n      // inp may be undefined, so careful calling replace on it.\n      var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n      return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n      var res = {\n        milliseconds: 0,\n        months: 0\n      };\n      res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n      if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n      }\n\n      res.milliseconds = +other - +base.clone().add(res.months, 'M');\n      return res;\n    }\n\n    function momentsDifference(base, other) {\n      var res;\n\n      if (!(base.isValid() && other.isValid())) {\n        return {\n          milliseconds: 0,\n          months: 0\n        };\n      }\n\n      other = cloneWithOffset(other, base);\n\n      if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n      } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n      }\n\n      return res;\n    } // TODO: remove 'name' arg after deprecation is removed\n\n\n    function createAdder(direction, name) {\n      return function (val, period) {\n        var dur, tmp; //invert the arguments, but complain about it\n\n        if (period !== null && !isNaN(+period)) {\n          deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n          tmp = val;\n          val = period;\n          period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n      };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n      var milliseconds = duration._milliseconds,\n          days = absRound(duration._days),\n          months = absRound(duration._months);\n\n      if (!mom.isValid()) {\n        // No op\n        return;\n      }\n\n      updateOffset = updateOffset == null ? true : updateOffset;\n\n      if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n      }\n\n      if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n      }\n\n      if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n      }\n\n      if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n      }\n    }\n\n    var add = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n      var diff = myMoment.diff(now, 'days', true);\n      return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n      // We want to compare the start of today, vs this.\n      // Getting start-of-today depends on whether we're local/utc/offset or not.\n      var now = time || createLocal(),\n          sod = cloneWithOffset(now, this).startOf('day'),\n          format = hooks.calendarFormat(this, sod) || 'sameElse';\n      var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n      return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone() {\n      return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n      var localInput = isMoment(input) ? input : createLocal(input);\n\n      if (!(this.isValid() && localInput.isValid())) {\n        return false;\n      }\n\n      units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\n      if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n      } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n      }\n    }\n\n    function isBefore(input, units) {\n      var localInput = isMoment(input) ? input : createLocal(input);\n\n      if (!(this.isValid() && localInput.isValid())) {\n        return false;\n      }\n\n      units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\n      if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n      } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n      }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n      inclusivity = inclusivity || '()';\n      return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame(input, units) {\n      var localInput = isMoment(input) ? input : createLocal(input),\n          inputMs;\n\n      if (!(this.isValid() && localInput.isValid())) {\n        return false;\n      }\n\n      units = normalizeUnits(units || 'millisecond');\n\n      if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n      } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n      }\n    }\n\n    function isSameOrAfter(input, units) {\n      return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n      return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n      var that, zoneDelta, output;\n\n      if (!this.isValid()) {\n        return NaN;\n      }\n\n      that = cloneWithOffset(input, this);\n\n      if (!that.isValid()) {\n        return NaN;\n      }\n\n      zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n      units = normalizeUnits(units);\n\n      switch (units) {\n        case 'year':\n          output = monthDiff(this, that) / 12;\n          break;\n\n        case 'month':\n          output = monthDiff(this, that);\n          break;\n\n        case 'quarter':\n          output = monthDiff(this, that) / 3;\n          break;\n\n        case 'second':\n          output = (this - that) / 1e3;\n          break;\n        // 1000\n\n        case 'minute':\n          output = (this - that) / 6e4;\n          break;\n        // 1000 * 60\n\n        case 'hour':\n          output = (this - that) / 36e5;\n          break;\n        // 1000 * 60 * 60\n\n        case 'day':\n          output = (this - that - zoneDelta) / 864e5;\n          break;\n        // 1000 * 60 * 60 * 24, negate dst\n\n        case 'week':\n          output = (this - that - zoneDelta) / 6048e5;\n          break;\n        // 1000 * 60 * 60 * 24 * 7, negate dst\n\n        default:\n          output = this - that;\n      }\n\n      return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n      // difference in months\n      var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n          // b is in (anchor - 1 month, anchor + 1 month)\n      anchor = a.clone().add(wholeMonthDiff, 'months'),\n          anchor2,\n          adjust;\n\n      if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n        adjust = (b - anchor) / (anchor - anchor2);\n      } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n        adjust = (b - anchor) / (anchor2 - anchor);\n      } //check for negative zero, return zero if negative zero\n\n\n      return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n      return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n      if (!this.isValid()) {\n        return null;\n      }\n\n      var utc = keepOffset !== true;\n      var m = utc ? this.clone().utc() : this;\n\n      if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n      }\n\n      if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        if (utc) {\n          return this.toDate().toISOString();\n        } else {\n          return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n        }\n      }\n\n      return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n\n\n    function inspect() {\n      if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n      }\n\n      var func = 'moment';\n      var zone = '';\n\n      if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n      }\n\n      var prefix = '[' + func + '(\"]';\n      var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n      var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n      var suffix = zone + '[\")]';\n      return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n      if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n      }\n\n      var output = formatMoment(this, inputString);\n      return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n      if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n        return createDuration({\n          to: this,\n          from: time\n        }).locale(this.locale()).humanize(!withoutSuffix);\n      } else {\n        return this.localeData().invalidDate();\n      }\n    }\n\n    function fromNow(withoutSuffix) {\n      return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n      if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n        return createDuration({\n          from: this,\n          to: time\n        }).locale(this.locale()).humanize(!withoutSuffix);\n      } else {\n        return this.localeData().invalidDate();\n      }\n    }\n\n    function toNow(withoutSuffix) {\n      return this.to(createLocal(), withoutSuffix);\n    } // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n\n\n    function locale(key) {\n      var newLocaleData;\n\n      if (key === undefined) {\n        return this._locale._abbr;\n      } else {\n        newLocaleData = getLocale(key);\n\n        if (newLocaleData != null) {\n          this._locale = newLocaleData;\n        }\n\n        return this;\n      }\n    }\n\n    var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n      if (key === undefined) {\n        return this.localeData();\n      } else {\n        return this.locale(key);\n      }\n    });\n\n    function localeData() {\n      return this._locale;\n    }\n\n    function startOf(units) {\n      units = normalizeUnits(units); // the following switch intentionally omits break keywords\n      // to utilize falling through the cases.\n\n      switch (units) {\n        case 'year':\n          this.month(0);\n\n        /* falls through */\n\n        case 'quarter':\n        case 'month':\n          this.date(1);\n\n        /* falls through */\n\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n          this.hours(0);\n\n        /* falls through */\n\n        case 'hour':\n          this.minutes(0);\n\n        /* falls through */\n\n        case 'minute':\n          this.seconds(0);\n\n        /* falls through */\n\n        case 'second':\n          this.milliseconds(0);\n      } // weeks are a special case\n\n\n      if (units === 'week') {\n        this.weekday(0);\n      }\n\n      if (units === 'isoWeek') {\n        this.isoWeekday(1);\n      } // quarters are also special\n\n\n      if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n      }\n\n      return this;\n    }\n\n    function endOf(units) {\n      units = normalizeUnits(units);\n\n      if (units === undefined || units === 'millisecond') {\n        return this;\n      } // 'date' is an alias for 'day', so it should be considered as such.\n\n\n      if (units === 'date') {\n        units = 'day';\n      }\n\n      return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');\n    }\n\n    function valueOf() {\n      return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n      return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n      return new Date(this.valueOf());\n    }\n\n    function toArray() {\n      var m = this;\n      return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject() {\n      var m = this;\n      return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n      };\n    }\n\n    function toJSON() {\n      // new Date(NaN).toJSON() === null\n      return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n      return isValid(this);\n    }\n\n    function parsingFlags() {\n      return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n      return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n      return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n      };\n    } // FORMATTING\n\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n      return this.weekYear() % 100;\n    });\n    addFormatToken(0, ['GG', 2], 0, function () {\n      return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n      addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1); // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n      week[token.substr(0, 2)] = toInt(input);\n    });\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n      week[token] = hooks.parseTwoDigitYear(input);\n    }); // MOMENTS\n\n    function getSetWeekYear(input) {\n      return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear(input) {\n      return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear() {\n      return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n      var weekInfo = this.localeData()._week;\n\n      return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n      var weeksTarget;\n\n      if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n      } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n\n        if (week > weeksTarget) {\n          week = weeksTarget;\n        }\n\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n      }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n      var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n          date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n      this.year(date.getUTCFullYear());\n      this.month(date.getUTCMonth());\n      this.date(date.getUTCDate());\n      return this;\n    } // FORMATTING\n\n\n    addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n    addUnitAlias('quarter', 'Q'); // PRIORITY\n\n    addUnitPriority('quarter', 7); // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n      array[MONTH] = (toInt(input) - 1) * 3;\n    }); // MOMENTS\n\n    function getSetQuarter(input) {\n      return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    } // FORMATTING\n\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n    addUnitAlias('date', 'D'); // PRIORITY\n\n    addUnitPriority('date', 9); // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n      // TODO: Remove \"ordinalParse\" fallback in next major release.\n      return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n    });\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n      array[DATE] = toInt(input.match(match1to2)[0]);\n    }); // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n    addUnitPriority('dayOfYear', 4); // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n      config._dayOfYear = toInt(input);\n    }); // HELPERS\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n      var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n      return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    } // FORMATTING\n\n\n    addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n    addUnitAlias('minute', 'm'); // PRIORITY\n\n    addUnitPriority('minute', 14); // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n    addUnitAlias('second', 's'); // PRIORITY\n\n    addUnitPriority('second', 15); // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n      return ~~(this.millisecond() / 100);\n    });\n    addFormatToken(0, ['SS', 2], 0, function () {\n      return ~~(this.millisecond() / 10);\n    });\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n      return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n      return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n      return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n      return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n      return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n      return this.millisecond() * 1000000;\n    }); // ALIASES\n\n    addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n    addUnitPriority('millisecond', 16); // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n    var token;\n\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n      addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n      array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n      addParseToken(token, parseMs);\n    } // MOMENTS\n\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n    function getZoneAbbr() {\n      return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n      return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix(input) {\n      return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n      return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n      return string;\n    }\n\n    var proto$1 = Locale.prototype;\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n      var locale = getLocale();\n      var utc = createUTC().set(setter, index);\n      return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n\n      if (index != null) {\n        return get$1(format, index, field, 'month');\n      }\n\n      var i;\n      var out = [];\n\n      for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n      }\n\n      return out;\n    } // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n\n\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n      if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n          index = format;\n          format = undefined;\n        }\n\n        format = format || '';\n      } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n          index = format;\n          format = undefined;\n        }\n\n        format = format || '';\n      }\n\n      var locale = getLocale(),\n          shift = localeSorted ? locale._week.dow : 0;\n\n      if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n      }\n\n      var i;\n      var out = [];\n\n      for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n      }\n\n      return out;\n    }\n\n    function listMonths(format, index) {\n      return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n      return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n      return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n      return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n      return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n      dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n      ordinal: function (number) {\n        var b = number % 10,\n            output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n        return number + output;\n      }\n    }); // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n    var mathAbs = Math.abs;\n\n    function abs() {\n      var data = this._data;\n      this._milliseconds = mathAbs(this._milliseconds);\n      this._days = mathAbs(this._days);\n      this._months = mathAbs(this._months);\n      data.milliseconds = mathAbs(data.milliseconds);\n      data.seconds = mathAbs(data.seconds);\n      data.minutes = mathAbs(data.minutes);\n      data.hours = mathAbs(data.hours);\n      data.months = mathAbs(data.months);\n      data.years = mathAbs(data.years);\n      return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n      var other = createDuration(input, value);\n      duration._milliseconds += direction * other._milliseconds;\n      duration._days += direction * other._days;\n      duration._months += direction * other._months;\n      return duration._bubble();\n    } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n    function add$1(input, value) {\n      return addSubtract$1(this, input, value, 1);\n    } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n    function subtract$1(input, value) {\n      return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n      if (number < 0) {\n        return Math.floor(number);\n      } else {\n        return Math.ceil(number);\n      }\n    }\n\n    function bubble() {\n      var milliseconds = this._milliseconds;\n      var days = this._days;\n      var months = this._months;\n      var data = this._data;\n      var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n      // check: https://github.com/moment/moment/issues/2166\n\n      if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n      } // The following code bubbles up values, see the tests for\n      // examples of what that means.\n\n\n      data.milliseconds = milliseconds % 1000;\n      seconds = absFloor(milliseconds / 1000);\n      data.seconds = seconds % 60;\n      minutes = absFloor(seconds / 60);\n      data.minutes = minutes % 60;\n      hours = absFloor(minutes / 60);\n      data.hours = hours % 24;\n      days += absFloor(hours / 24); // convert days to months\n\n      monthsFromDays = absFloor(daysToMonths(days));\n      months += monthsFromDays;\n      days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n      years = absFloor(months / 12);\n      months %= 12;\n      data.days = days;\n      data.months = months;\n      data.years = years;\n      return this;\n    }\n\n    function daysToMonths(days) {\n      // 400 years have 146097 days (taking into account leap year rules)\n      // 400 years have 12 months === 4800\n      return days * 4800 / 146097;\n    }\n\n    function monthsToDays(months) {\n      // the reverse of daysToMonths\n      return months * 146097 / 4800;\n    }\n\n    function as(units) {\n      if (!this.isValid()) {\n        return NaN;\n      }\n\n      var days;\n      var months;\n      var milliseconds = this._milliseconds;\n      units = normalizeUnits(units);\n\n      if (units === 'month' || units === 'year') {\n        days = this._days + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n      } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n\n        switch (units) {\n          case 'week':\n            return days / 7 + milliseconds / 6048e5;\n\n          case 'day':\n            return days + milliseconds / 864e5;\n\n          case 'hour':\n            return days * 24 + milliseconds / 36e5;\n\n          case 'minute':\n            return days * 1440 + milliseconds / 6e4;\n\n          case 'second':\n            return days * 86400 + milliseconds / 1000;\n          // Math.floor prevents floating point math errors here\n\n          case 'millisecond':\n            return Math.floor(days * 864e5) + milliseconds;\n\n          default:\n            throw new Error('Unknown unit ' + units);\n        }\n      }\n    } // TODO: Use this.as('ms')?\n\n\n    function valueOf$1() {\n      if (!this.isValid()) {\n        return NaN;\n      }\n\n      return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n    }\n\n    function makeAs(alias) {\n      return function () {\n        return this.as(alias);\n      };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds = makeAs('s');\n    var asMinutes = makeAs('m');\n    var asHours = makeAs('h');\n    var asDays = makeAs('d');\n    var asWeeks = makeAs('w');\n    var asMonths = makeAs('M');\n    var asYears = makeAs('y');\n\n    function clone$1() {\n      return createDuration(this);\n    }\n\n    function get$2(units) {\n      units = normalizeUnits(units);\n      return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n      return function () {\n        return this.isValid() ? this._data[name] : NaN;\n      };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds = makeGetter('seconds');\n    var minutes = makeGetter('minutes');\n    var hours = makeGetter('hours');\n    var days = makeGetter('days');\n    var months = makeGetter('months');\n    var years = makeGetter('years');\n\n    function weeks() {\n      return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n      ss: 44,\n      // a few seconds to seconds\n      s: 45,\n      // seconds to minute\n      m: 45,\n      // minutes to hour\n      h: 22,\n      // hours to day\n      d: 26,\n      // days to month\n      M: 11 // months to year\n\n    }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n      return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n      var duration = createDuration(posNegDuration).abs();\n      var seconds = round(duration.as('s'));\n      var minutes = round(duration.as('m'));\n      var hours = round(duration.as('h'));\n      var days = round(duration.as('d'));\n      var months = round(duration.as('M'));\n      var years = round(duration.as('y'));\n      var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n      a[2] = withoutSuffix;\n      a[3] = +posNegDuration > 0;\n      a[4] = locale;\n      return substituteTimeAgo.apply(null, a);\n    } // This function allows you to set the rounding function for relative time strings\n\n\n    function getSetRelativeTimeRounding(roundingFunction) {\n      if (roundingFunction === undefined) {\n        return round;\n      }\n\n      if (typeof roundingFunction === 'function') {\n        round = roundingFunction;\n        return true;\n      }\n\n      return false;\n    } // This function allows you to set a threshold for relative time strings\n\n\n    function getSetRelativeTimeThreshold(threshold, limit) {\n      if (thresholds[threshold] === undefined) {\n        return false;\n      }\n\n      if (limit === undefined) {\n        return thresholds[threshold];\n      }\n\n      thresholds[threshold] = limit;\n\n      if (threshold === 's') {\n        thresholds.ss = limit - 1;\n      }\n\n      return true;\n    }\n\n    function humanize(withSuffix) {\n      if (!this.isValid()) {\n        return this.localeData().invalidDate();\n      }\n\n      var locale = this.localeData();\n      var output = relativeTime$1(this, !withSuffix, locale);\n\n      if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n      }\n\n      return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n      return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n      // for ISO strings we do not use the normal bubbling rules:\n      //  * milliseconds bubble up until they become hours\n      //  * days do not bubble at all\n      //  * months bubble up until they become years\n      // This is because there is no context-free conversion between hours and days\n      // (think of clock changes)\n      // and also not between days and months (28-31 days per month)\n      if (!this.isValid()) {\n        return this.localeData().invalidDate();\n      }\n\n      var seconds = abs$1(this._milliseconds) / 1000;\n      var days = abs$1(this._days);\n      var months = abs$1(this._months);\n      var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n      minutes = absFloor(seconds / 60);\n      hours = absFloor(minutes / 60);\n      seconds %= 60;\n      minutes %= 60; // 12 months -> 1 year\n\n      years = absFloor(months / 12);\n      months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n      var Y = years;\n      var M = months;\n      var D = days;\n      var h = hours;\n      var m = minutes;\n      var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n      var total = this.asSeconds();\n\n      if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n      }\n\n      var totalSign = total < 0 ? '-' : '';\n      var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n      var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n      var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n      return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang; // Side effect imports\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n      config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n      config._d = new Date(toInt(input));\n    }); // Side effect imports\n\n    hooks.version = '2.22.2';\n    setHookCallback(createLocal);\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n    hooks.HTML5_FMT = {\n      DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n      // <input type=\"datetime-local\" />\n      DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n      // <input type=\"datetime-local\" step=\"1\" />\n      DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n      // <input type=\"datetime-local\" step=\"0.001\" />\n      DATE: 'YYYY-MM-DD',\n      // <input type=\"date\" />\n      TIME: 'HH:mm',\n      // <input type=\"time\" />\n      TIME_SECONDS: 'HH:mm:ss',\n      // <input type=\"time\" step=\"1\" />\n      TIME_MS: 'HH:mm:ss.SSS',\n      // <input type=\"time\" step=\"0.001\" />\n      WEEK: 'YYYY-[W]WW',\n      // <input type=\"week\" />\n      MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n    };\n    return hooks;\n  });\n});\n\nvar FolderTopFile = function (_Component) {\n  inherits(FolderTopFile, _Component);\n\n  function FolderTopFile() {\n    classCallCheck(this, FolderTopFile);\n    return possibleConstructorReturn(this, (FolderTopFile.__proto__ || Object.getPrototypeOf(FolderTopFile)).apply(this, arguments));\n  }\n\n  createClass(FolderTopFile, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          updatedAt = _props.updatedAt,\n          nameSize = _props.nameSize,\n          updatedAtSize = _props.updatedAtSize;\n      return React.createElement('div', {\n        className: 'file'\n      }, React.createElement(Row$1, null, React.createElement(Col$1, nameSize, name), React.createElement(Col$1, updatedAtSize, moment(updatedAt).format(\"L LTS\"))));\n    }\n  }]);\n  return FolderTopFile;\n}(Component);\n\nFolderTopFile.propTypes = {\n  name: PropTypes.string.isRequired,\n  updatedAt: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  nameSize: PropTypes.object,\n  updatedAtSize: PropTypes.object\n};\n\nvar FolderTopFolder = function (_Component) {\n  inherits(FolderTopFolder, _Component);\n\n  function FolderTopFolder() {\n    classCallCheck(this, FolderTopFolder);\n\n    var _this = possibleConstructorReturn(this, (FolderTopFolder.__proto__ || Object.getPrototypeOf(FolderTopFolder)).call(this));\n\n    _this.state = {\n      zoomIndex: null\n    };\n    _this.NameSize = {\n      xs: 6,\n      sm: 8\n    };\n    _this.UpdatedAtSize = {\n      xs: 6,\n      sm: 4\n    };\n    return _this;\n  }\n\n  createClass(FolderTopFolder, [{\n    key: 'renderFileHeader',\n    value: function renderFileHeader() {\n      return React.createElement(ListGroupItem$1, {\n        className: 'file-system-file-header'\n      }, React.createElement(Row$1, null, React.createElement(Col$1, this.NameSize, 'name'), React.createElement(Col$1, this.UpdatedAtSize, 'updated at')));\n    }\n  }, {\n    key: 'renderFileItems',\n    value: function renderFileItems() {\n      var _this2 = this;\n\n      var folderController = this.props.folderController;\n      var fileItems = folderController.getFileItems();\n      return fileItems.map(function (file, index$$1) {\n        return React.createElement(ListGroupItem$1, {\n          key: index$$1,\n          className: 'file-system-file'\n        }, React.createElement(FolderTopFile, _extends$1({}, file, {\n          nameSize: _this2.NameSize,\n          updatedAtSize: _this2.UpdatedAtSize\n        })));\n      });\n    }\n  }, {\n    key: 'renderFolderItems',\n    value: function renderFolderItems() {\n      var _this3 = this;\n\n      var _props = this.props,\n          folderController = _props.folderController,\n          switchFolder = _props.switchFolder;\n      var folderItems = folderController.getFolderItems();\n      return folderItems.map(function (folder, index$$1) {\n        var onClick = function onClick() {\n          _this3.setState({\n            zoomIndex: index$$1\n          });\n\n          setTimeout(function () {\n            _this3.setState({\n              zoomIndex: null\n            });\n\n            switchFolder(folder);\n          }, 200);\n        };\n\n        var className = \"file-system-folder\" + (_this3.state.zoomIndex === index$$1 ? \" changing\" : \"\");\n        return React.createElement(Button$1, {\n          key: index$$1,\n          onClick: onClick,\n          className: className\n        }, React.createElement(Glyphicon$1, {\n          glyph: 'folder-close'\n        }), ' ', folder.name);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var name = this.props.folderController.getName();\n      return React.createElement('div', {\n        className: 'folder'\n      }, React.createElement('h3', null, React.createElement(Glyphicon$1, {\n        glyph: \"folder-open\"\n      }), ' ', name), React.createElement(ButtonGroup$1, null, this.renderFolderItems.call(this)), React.createElement(ListGroup$1, null, this.renderFileHeader.call(this), this.renderFileItems.call(this)));\n    }\n  }]);\n  return FolderTopFolder;\n}(Component);\n\nFolderTopFolder.propTypes = {\n  folderController: PropTypes.object,\n  switchFolder: PropTypes.func\n};\n\nvar BasicFile = function (_Component) {\n  inherits(BasicFile, _Component);\n\n  function BasicFile() {\n    classCallCheck(this, BasicFile);\n    return possibleConstructorReturn(this, (BasicFile.__proto__ || Object.getPrototypeOf(BasicFile)).apply(this, arguments));\n  }\n\n  createClass(BasicFile, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          updatedAt = _props.updatedAt,\n          nameSize = _props.nameSize,\n          updatedAtSize = _props.updatedAtSize;\n      return React.createElement('div', {\n        className: 'file'\n      }, React.createElement(Row$1, null, React.createElement(Col$1, nameSize, name), React.createElement(Col$1, updatedAtSize, moment(updatedAt).format(\"L LTS\"))));\n    }\n  }]);\n  return BasicFile;\n}(Component);\n\nBasicFile.propTypes = {\n  name: PropTypes.string.isRequired,\n  updatedAt: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  nameSize: PropTypes.object,\n  updatedAtSize: PropTypes.object\n};\n\nvar BasicFolder = function (_Component) {\n  inherits(BasicFolder, _Component);\n\n  function BasicFolder() {\n    classCallCheck(this, BasicFolder);\n\n    var _this = possibleConstructorReturn(this, (BasicFolder.__proto__ || Object.getPrototypeOf(BasicFolder)).call(this));\n\n    _this.NameSize = {\n      xs: 6,\n      sm: 8\n    };\n    _this.UpdatedAtSize = {\n      xs: 6,\n      sm: 4\n    };\n    return _this;\n  }\n\n  createClass(BasicFolder, [{\n    key: 'renderFileHeader',\n    value: function renderFileHeader() {\n      return React.createElement(ListGroupItem$1, {\n        className: 'file-system-file-header'\n      }, React.createElement(Row$1, null, React.createElement(Col$1, this.NameSize, 'name'), React.createElement(Col$1, this.UpdatedAtSize, 'updated at')));\n    }\n  }, {\n    key: 'renderItems',\n    value: function renderItems() {\n      var _this2 = this;\n\n      var folderController = this.props.folderController;\n      var items = folderController.getItems();\n      return items.map(function (item, index$$1) {\n        if (item.items) {\n          return _this2.renderFolderItem.call(_this2, item, index$$1);\n        }\n\n        return React.createElement(ListGroupItem$1, {\n          key: index$$1,\n          className: 'file-system-file',\n          onContextMenu: function onContextMenu(evt) {\n            return folderController.onContextMenu(evt, item);\n          }\n        }, React.createElement(BasicFile, _extends$1({}, item, {\n          nameSize: _this2.NameSize,\n          updatedAtSize: _this2.UpdatedAtSize\n        })));\n      });\n    }\n  }, {\n    key: 'renderFolderItem',\n    value: function renderFolderItem(folder, index$$1) {\n      var _props = this.props,\n          switchFolder = _props.switchFolder,\n          folderController = _props.folderController;\n      return React.createElement(ListGroupItem$1, {\n        key: index$$1,\n        onClick: function onClick() {\n          return switchFolder(folder);\n        },\n        className: 'file-system-folder',\n        onContextMenu: function onContextMenu(evt) {\n          return folderController.onContextMenu(evt, folder);\n        }\n      }, React.createElement(Glyphicon$1, {\n        glyph: 'folder-close'\n      }), ' ', folder.name);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var name = this.props.folderController.getName();\n      return React.createElement('div', {\n        className: 'folder'\n      }, React.createElement('h3', null, React.createElement(Glyphicon$1, {\n        glyph: \"folder-open\"\n      }), ' ', name), React.createElement(ListGroup$1, null, this.renderFileHeader.call(this), this.renderItems.call(this)));\n    }\n  }]);\n  return BasicFolder;\n}(Component);\n\nBasicFolder.propTypes = {\n  folderController: PropTypes.object,\n  switchFolder: PropTypes.func\n};\n\nfunction warnOnce(msg) {\n  var hasWarned = false;\n  return function () {\n    if (!hasWarned) {\n      console.warn(msg);\n      hasWarned = true;\n    }\n  };\n}\n\nvar statelessFunctionalComponentSupplied = warnOnce('\\n>> Error, via react-flip-move <<\\n\\nYou provided a stateless functional component as a child to <FlipMove>. Unfortunately, SFCs aren\\'t supported, because Flip Move needs access to the backing instances via refs, and SFCs don\\'t have a public instance that holds that info.\\n\\nPlease wrap your components in a native element (eg. <div>), or a non-functional component.\\n');\nvar primitiveNodeSupplied = warnOnce('\\n>> Error, via react-flip-move <<\\n\\nYou provided a primitive (text or number) node as a child to <FlipMove>. Flip Move needs containers with unique keys to move children around.\\n\\nPlease wrap your value in a native element (eg. <span>), or a component.\\n');\n\nvar invalidTypeForTimingProp = function invalidTypeForTimingProp(args // prettier-ignore\n) {\n  return console.error('\\n>> Error, via react-flip-move <<\\n\\nThe prop you provided for \\'' + args.prop + '\\' is invalid. It needs to be a positive integer, or a string that can be resolved to a number. The value you provided is \\'' + args.value + '\\'.\\n\\nAs a result,  the default value for this parameter will be used, which is \\'' + args.defaultValue + '\\'.\\n');\n};\n\nvar invalidEnterLeavePreset = function invalidEnterLeavePreset(args // prettier-ignore\n) {\n  return console.error('\\n>> Error, via react-flip-move <<\\n\\nThe enter/leave preset you provided is invalid. We don\\'t currently have a \\'' + args.value + ' preset.\\'\\n\\nAcceptable values are ' + args.acceptableValues + '. The default value of \\'' + args.defaultValue + '\\' will be used.\\n');\n};\n\nvar parentNodePositionStatic = warnOnce('\\n>> Warning, via react-flip-move <<\\n\\nWhen using \"wrapperless\" mode (by supplying \\'typeName\\' of \\'null\\'), strange things happen when the direct parent has the default \"static\" position.\\n\\nFlipMove has added \\'position: relative\\' to this node, to ensure Flip Move animates correctly.\\n\\nTo avoid seeing this warning, simply apply a non-static position to that parent node.\\n');\nvar childIsDisabled = warnOnce('\\n>> Warning, via react-flip-move <<\\n\\nOne or more of Flip Move\\'s child elements have the html attribute \\'disabled\\' set to true.\\n\\nPlease note that this will cause animations to break in Internet Explorer 11 and below. Either remove the disabled attribute or set \\'animation\\' to false.\\n');\nvar enterPresets = {\n  elevator: {\n    from: {\n      transform: 'scale(0)',\n      opacity: '0'\n    },\n    to: {\n      transform: '',\n      opacity: ''\n    }\n  },\n  fade: {\n    from: {\n      opacity: '0'\n    },\n    to: {\n      opacity: ''\n    }\n  },\n  accordionVertical: {\n    from: {\n      transform: 'scaleY(0)',\n      transformOrigin: 'center top'\n    },\n    to: {\n      transform: '',\n      transformOrigin: 'center top'\n    }\n  },\n  accordionHorizontal: {\n    from: {\n      transform: 'scaleX(0)',\n      transformOrigin: 'left center'\n    },\n    to: {\n      transform: '',\n      transformOrigin: 'left center'\n    }\n  },\n  none: null\n};\n/**\n * React Flip Move | enterLeavePresets\n * (c) 2016-present Joshua Comeau\n *\n * This contains the master list of presets available for enter/leave animations,\n * along with the mapping between preset and styles.\n */\n\nvar leavePresets = {\n  elevator: {\n    from: {\n      transform: 'scale(1)',\n      opacity: '1'\n    },\n    to: {\n      transform: 'scale(0)',\n      opacity: '0'\n    }\n  },\n  fade: {\n    from: {\n      opacity: '1'\n    },\n    to: {\n      opacity: '0'\n    }\n  },\n  accordionVertical: {\n    from: {\n      transform: 'scaleY(1)',\n      transformOrigin: 'center top'\n    },\n    to: {\n      transform: 'scaleY(0)',\n      transformOrigin: 'center top'\n    }\n  },\n  accordionHorizontal: {\n    from: {\n      transform: 'scaleX(1)',\n      transformOrigin: 'left center'\n    },\n    to: {\n      transform: 'scaleX(0)',\n      transformOrigin: 'left center'\n    }\n  },\n  none: null\n}; // For now, appearPresets will be identical to enterPresets.\n// Assigning a custom export in case we ever want to add appear-specific ones.\n\nvar appearPresets = enterPresets;\nvar defaultPreset = 'elevator';\nvar disablePreset = 'none';\n\nvar find$1 = function find(predicate, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (predicate(arr[i], i, arr)) {\n      return arr[i];\n    }\n  }\n\n  return undefined;\n};\n\nvar every$1 = function every(predicate, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (!predicate(arr[i], i, arr)) {\n      return false;\n    }\n  }\n\n  return true;\n}; // eslint-disable-next-line import/no-mutable-exports\n\n\nvar _isArray$1 = function isArray(arr) {\n  _isArray$1 = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n\n  return _isArray$1(arr);\n};\n\nvar isElementAnSFC = function isElementAnSFC(element) {\n  var isNativeDOMElement = typeof element.type === 'string';\n\n  if (isNativeDOMElement) {\n    return false;\n  }\n\n  return !element.type.prototype.isReactComponent;\n};\n\nfunction omit(obj) {\n  var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (attrs.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n\nfunction arraysEqual(a, b) {\n  var sameObject = a === b;\n\n  if (sameObject) {\n    return true;\n  }\n\n  var notBothArrays = !_isArray$1(a) || !_isArray$1(b);\n  var differentLengths = a.length !== b.length;\n\n  if (notBothArrays || differentLengths) {\n    return false;\n  }\n\n  return every$1(function (element, index) {\n    return element === b[index];\n  }, a);\n}\n\nfunction memoizeString(fn) {\n  var cache = {};\n  return function (str) {\n    if (!cache[str]) {\n      cache[str] = fn(str);\n    }\n\n    return cache[str];\n  };\n}\n\nvar hyphenate$1 = memoizeString(function (str) {\n  return str.replace(/([A-Z])/g, '-$1').toLowerCase();\n});\n\nvar _typeof$1 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck$1 = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar _extends$2 = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits$1 = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * React Flip Move | propConverter\n * (c) 2016-present Joshua Comeau\n *\n * Abstracted away a bunch of the messy business with props.\n *   - props flow types and defaultProps\n *   - Type conversion (We accept 'string' and 'number' values for duration,\n *     delay, and other fields, but we actually need them to be ints.)\n *   - Children conversion (we need the children to be an array. May not always\n *     be, if a single child is passed in.)\n *   - Resolving animation presets into their base CSS styles\n */\n\n/* eslint-disable block-scoped-var */\n// eslint-disable-next-line no-duplicate-imports\n\n\nfunction propConverter(ComposedComponent) {\n  var _class, _temp;\n\n  return _temp = _class = function (_Component) {\n    inherits$1(FlipMovePropConverter, _Component);\n\n    function FlipMovePropConverter() {\n      classCallCheck$1(this, FlipMovePropConverter);\n      return possibleConstructorReturn$1(this, _Component.apply(this, arguments));\n    } // eslint-disable-next-line class-methods-use-this\n\n\n    FlipMovePropConverter.prototype.checkChildren = function checkChildren(children) {\n      // Skip all console warnings in production.\n      // Bail early, to avoid unnecessary work.\n      if (process.env.NODE_ENV === 'production') {\n        return;\n      } // same as React.Node, but without fragments, see https://github.com/facebook/flow/issues/4781\n      // FlipMove does not support stateless functional components.\n      // Check to see if any supplied components won't work.\n      // If the child doesn't have a key, it means we aren't animating it.\n      // It's allowed to be an SFC, since we ignore it.\n\n\n      Children.forEach(children, function (child) {\n        // null, undefined, and booleans will be filtered out by Children.toArray\n        if (child == null || typeof child === 'boolean') {\n          return;\n        }\n\n        if ((typeof child === 'undefined' ? 'undefined' : _typeof$1(child)) !== 'object') {\n          primitiveNodeSupplied();\n          return;\n        }\n\n        if (isElementAnSFC(child) && child.key != null) {\n          statelessFunctionalComponentSupplied();\n        }\n      });\n    };\n\n    FlipMovePropConverter.prototype.convertProps = function convertProps(props) {\n      var workingProps = {\n        // explicitly bypass the props that don't need conversion\n        children: props.children,\n        easing: props.easing,\n        onStart: props.onStart,\n        onFinish: props.onFinish,\n        onStartAll: props.onStartAll,\n        onFinishAll: props.onFinishAll,\n        typeName: props.typeName,\n        disableAllAnimations: props.disableAllAnimations,\n        getPosition: props.getPosition,\n        maintainContainerHeight: props.maintainContainerHeight,\n        verticalAlignment: props.verticalAlignment,\n        // Do string-to-int conversion for all timing-related props\n        duration: this.convertTimingProp('duration'),\n        delay: this.convertTimingProp('delay'),\n        staggerDurationBy: this.convertTimingProp('staggerDurationBy'),\n        staggerDelayBy: this.convertTimingProp('staggerDelayBy'),\n        // Our enter/leave animations can be specified as boolean (default or\n        // disabled), string (preset name), or object (actual animation values).\n        // Let's standardize this so that they're always objects\n        appearAnimation: this.convertAnimationProp(props.appearAnimation, appearPresets),\n        enterAnimation: this.convertAnimationProp(props.enterAnimation, enterPresets),\n        leaveAnimation: this.convertAnimationProp(props.leaveAnimation, leavePresets),\n        delegated: {}\n      };\n      this.checkChildren(workingProps.children); // Gather any additional props;\n      // they will be delegated to the ReactElement created.\n\n      var primaryPropKeys = Object.keys(workingProps);\n      var delegatedProps = omit(this.props, primaryPropKeys); // The FlipMove container element needs to have a non-static position.\n      // We use `relative` by default, but it can be overridden by the user.\n      // Now that we're delegating props, we need to merge this in.\n\n      delegatedProps.style = _extends$2({\n        position: 'relative'\n      }, delegatedProps.style);\n      workingProps.delegated = delegatedProps;\n      return workingProps;\n    };\n\n    FlipMovePropConverter.prototype.convertTimingProp = function convertTimingProp(prop) {\n      var rawValue = this.props[prop];\n      var value = typeof rawValue === 'number' ? rawValue : parseInt(rawValue, 10);\n\n      if (isNaN(value)) {\n        var defaultValue = FlipMovePropConverter.defaultProps[prop];\n\n        if (process.env.NODE_ENV !== 'production') {\n          invalidTypeForTimingProp({\n            prop: prop,\n            value: rawValue,\n            defaultValue: defaultValue\n          });\n        }\n\n        return defaultValue;\n      }\n\n      return value;\n    }; // eslint-disable-next-line class-methods-use-this\n\n\n    FlipMovePropConverter.prototype.convertAnimationProp = function convertAnimationProp(animation, presets) {\n      switch (typeof animation === 'undefined' ? 'undefined' : _typeof$1(animation)) {\n        case 'boolean':\n          {\n            // If it's true, we want to use the default preset.\n            // If it's false, we want to use the 'none' preset.\n            return presets[animation ? defaultPreset : disablePreset];\n          }\n\n        case 'string':\n          {\n            var presetKeys = Object.keys(presets);\n\n            if (presetKeys.indexOf(animation) === -1) {\n              if (process.env.NODE_ENV !== 'production') {\n                invalidEnterLeavePreset({\n                  value: animation,\n                  acceptableValues: presetKeys.join(', '),\n                  defaultValue: defaultPreset\n                });\n              }\n\n              return presets[defaultPreset];\n            }\n\n            return presets[animation];\n          }\n\n        default:\n          {\n            return animation;\n          }\n      }\n    };\n\n    FlipMovePropConverter.prototype.render = function render() {\n      return React.createElement(ComposedComponent, this.convertProps(this.props));\n    };\n\n    return FlipMovePropConverter;\n  }(Component), _class.defaultProps = {\n    easing: 'ease-in-out',\n    duration: 350,\n    delay: 0,\n    staggerDurationBy: 0,\n    staggerDelayBy: 0,\n    typeName: 'div',\n    enterAnimation: defaultPreset,\n    leaveAnimation: defaultPreset,\n    disableAllAnimations: false,\n    getPosition: function getPosition(node) {\n      return node.getBoundingClientRect();\n    },\n    maintainContainerHeight: false,\n    verticalAlignment: 'top'\n  }, _temp;\n}\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n *\n * These methods read from and write to the DOM.\n * They almost always have side effects, and will hopefully become the\n * only spot in the codebase with impure functions.\n */\n\n\nfunction applyStylesToDOMNode(_ref) {\n  var domNode = _ref.domNode,\n      styles = _ref.styles; // Can't just do an object merge because domNode.styles is no regular object.\n  // Need to do it this way for the engine to fire its `set` listeners.\n\n  Object.keys(styles).forEach(function (key) {\n    domNode.style.setProperty(hyphenate$1(key), styles[key]);\n  });\n} // Modified from Modernizr\n\n\nfunction whichTransitionEvent() {\n  var transitions = {\n    transition: 'transitionend',\n    '-o-transition': 'oTransitionEnd',\n    '-moz-transition': 'transitionend',\n    '-webkit-transition': 'webkitTransitionEnd'\n  }; // If we're running in a browserless environment (eg. SSR), it doesn't apply.\n  // Return a placeholder string, for consistent type return.\n\n  if (typeof document === 'undefined') return '';\n  var el = document.createElement('fakeelement');\n  var match = find$1(function (t) {\n    return el.style.getPropertyValue(t) !== undefined;\n  }, Object.keys(transitions)); // If no `transition` is found, we must be running in a browser so ancient,\n  // React itself won't run. Return an empty string, for consistent type return\n\n  return match ? transitions[match] : '';\n}\n\nvar getRelativeBoundingBox = function getRelativeBoundingBox(_ref2) {\n  var childDomNode = _ref2.childDomNode,\n      parentDomNode = _ref2.parentDomNode,\n      getPosition = _ref2.getPosition;\n  var parentBox = getPosition(parentDomNode);\n\n  var _getPosition = getPosition(childDomNode),\n      top = _getPosition.top,\n      left = _getPosition.left,\n      right = _getPosition.right,\n      bottom = _getPosition.bottom,\n      width = _getPosition.width,\n      height = _getPosition.height;\n\n  return {\n    top: top - parentBox.top,\n    left: left - parentBox.left,\n    right: parentBox.right - right,\n    bottom: parentBox.bottom - bottom,\n    width: width,\n    height: height\n  };\n};\n/** getPositionDelta\n * This method returns the delta between two bounding boxes, to figure out\n * how many pixels on each axis the element has moved.\n *\n */\n\n\nvar getPositionDelta = function getPositionDelta(_ref3) {\n  var childDomNode = _ref3.childDomNode,\n      childBoundingBox = _ref3.childBoundingBox,\n      parentBoundingBox = _ref3.parentBoundingBox,\n      getPosition = _ref3.getPosition; // TEMP: A mystery bug is sometimes causing unnecessary boundingBoxes to\n\n  var defaultBox = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 0,\n    width: 0\n  }; // Our old box is its last calculated position, derived on mount or at the\n  // start of the previous animation.\n\n  var oldRelativeBox = childBoundingBox || defaultBox;\n  var parentBox = parentBoundingBox || defaultBox; // Our new box is the new final resting place: Where we expect it to wind up\n  // after the animation. First we get the box in absolute terms (AKA relative\n  // to the viewport), and then we calculate its relative box (relative to the\n  // parent container)\n\n  var newAbsoluteBox = getPosition(childDomNode);\n  var newRelativeBox = {\n    top: newAbsoluteBox.top - parentBox.top,\n    left: newAbsoluteBox.left - parentBox.left\n  };\n  return [oldRelativeBox.left - newRelativeBox.left, oldRelativeBox.top - newRelativeBox.top];\n};\n/** removeNodeFromDOMFlow\n * This method does something very sneaky: it removes a DOM node from the\n * document flow, but without actually changing its on-screen position.\n *\n * It works by calculating where the node is, and then applying styles\n * so that it winds up being positioned absolutely, but in exactly the\n * same place.\n *\n * This is a vital part of the FLIP technique.\n */\n\n\nvar removeNodeFromDOMFlow = function removeNodeFromDOMFlow(childData, verticalAlignment) {\n  var domNode = childData.domNode,\n      boundingBox = childData.boundingBox;\n\n  if (!domNode || !boundingBox) {\n    return;\n  } // For this to work, we have to offset any given `margin`.\n\n\n  var computed = window.getComputedStyle(domNode); // We need to clean up margins, by converting and removing suffix:\n  // eg. '21px' -> 21\n\n  var marginAttrs = ['margin-top', 'margin-left', 'margin-right'];\n  var margins = marginAttrs.reduce(function (acc, margin) {\n    var _babelHelpers$extends;\n\n    var propertyVal = computed.getPropertyValue(margin);\n    return _extends$2({}, acc, (_babelHelpers$extends = {}, _babelHelpers$extends[margin] = Number(propertyVal.replace('px', '')), _babelHelpers$extends));\n  }, {}); // If we're bottom-aligned, we need to add the height of the child to its\n  // top offset. This is because, when the container is bottom-aligned, its\n  // height shrinks from the top, not the bottom. We're removing this node\n  // from the flow, so the top is going to drop by its height.\n\n  var topOffset = verticalAlignment === 'bottom' ? boundingBox.top - boundingBox.height : boundingBox.top;\n  var styles = {\n    position: 'absolute',\n    top: topOffset - margins['margin-top'] + 'px',\n    left: boundingBox.left - margins['margin-left'] + 'px',\n    right: boundingBox.right - margins['margin-right'] + 'px'\n  };\n  applyStylesToDOMNode({\n    domNode: domNode,\n    styles: styles\n  });\n};\n/** updateHeightPlaceholder\n * An optional property to FlipMove is a `maintainContainerHeight` boolean.\n * This property creates a node that fills space, so that the parent\n * container doesn't collapse when its children are removed from the\n * document flow.\n */\n\n\nvar updateHeightPlaceholder = function updateHeightPlaceholder(_ref4) {\n  var domNode = _ref4.domNode,\n      parentData = _ref4.parentData,\n      getPosition = _ref4.getPosition;\n  var parentDomNode = parentData.domNode;\n  var parentBoundingBox = parentData.boundingBox;\n\n  if (!parentDomNode || !parentBoundingBox) {\n    return;\n  } // We need to find the height of the container *without* the placeholder.\n  // Since it's possible that the placeholder might already be present,\n  // we first set its height to 0.\n  // This allows the container to collapse down to the size of just its\n  // content (plus container padding or borders if any).\n\n\n  applyStylesToDOMNode({\n    domNode: domNode,\n    styles: {\n      height: '0'\n    }\n  }); // Find the distance by which the container would be collapsed by elements\n  // leaving. We compare the freshly-available parent height with the original,\n  // cached container height.\n\n  var originalParentHeight = parentBoundingBox.height;\n  var collapsedParentHeight = getPosition(parentDomNode).height;\n  var reductionInHeight = originalParentHeight - collapsedParentHeight; // If the container has become shorter, update the padding element's\n  // height to take up the difference. Otherwise set its height to zero,\n  // so that it has no effect.\n\n  var styles = {\n    height: reductionInHeight > 0 ? reductionInHeight + 'px' : '0'\n  };\n  applyStylesToDOMNode({\n    domNode: domNode,\n    styles: styles\n  });\n};\n\nvar getNativeNode = function getNativeNode(element) {\n  // When running in a windowless environment, abort!\n  if (typeof HTMLElement === 'undefined') {\n    return null;\n  } // `element` may already be a native node.\n\n\n  if (element instanceof HTMLElement) {\n    return element;\n  } // While ReactDOM's `findDOMNode` is discouraged, it's the only\n  // publicly-exposed way to find the underlying DOM node for\n  // composite components.\n\n\n  var foundNode = findDOMNode(element);\n\n  if (foundNode && foundNode.nodeType === Node.TEXT_NODE) {\n    // Text nodes are not supported\n    return null;\n  } // eslint-disable-next-line flowtype/no-weak-types\n\n\n  return foundNode;\n};\n\nvar createTransitionString = function createTransitionString(index, props) {\n  var delay = props.delay,\n      duration = props.duration;\n  var staggerDurationBy = props.staggerDurationBy,\n      staggerDelayBy = props.staggerDelayBy,\n      easing = props.easing;\n  delay += index * staggerDelayBy;\n  duration += index * staggerDurationBy;\n  var cssProperties = ['transform', 'opacity'];\n  return cssProperties.map(function (prop) {\n    return prop + ' ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n  }).join(', ');\n};\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n *\n * For information on how this code is laid out, check out CODE_TOUR.md\n */\n\n/* eslint-disable react/prop-types */\n// eslint-disable-next-line no-duplicate-imports\n\n\nvar transitionEnd = whichTransitionEvent();\nvar noBrowserSupport = !transitionEnd;\n\nfunction getKey(childData) {\n  return childData.key || '';\n}\n\nfunction getElementChildren(children) {\n  // Fix incomplete typing of Children.toArray\n  // eslint-disable-next-line flowtype/no-weak-types\n  return Children.toArray(children);\n}\n\nvar FlipMove$1 = function (_Component) {\n  inherits$1(FlipMove, _Component);\n\n  function FlipMove() {\n    var _temp, _this, _ret;\n\n    classCallCheck$1(this, FlipMove);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      children: getElementChildren( // `this.props` ought to always be defined at this point, but a report\n      // was made about it not being defined in IE10.\n      // TODO: Test in IE10, to see if there's an underlying cause that can\n      // be addressed.\n      _this.props ? _this.props.children : []).map(function (element) {\n        return _extends$2({}, element, {\n          element: element,\n          appearing: true\n        });\n      })\n    }, _this.childrenData = {}, _this.parentData = {\n      domNode: null,\n      boundingBox: null\n    }, _this.heightPlaceholderData = {\n      domNode: null\n    }, _this.remainingAnimations = 0, _this.childrenToAnimate = [], _this.findDOMContainer = function () {\n      // eslint-disable-next-line react/no-find-dom-node\n      var domNode = ReactDOM.findDOMNode(_this);\n      var parentNode = domNode && domNode.parentNode; // This ought to be impossible, but handling it for Flow's sake.\n\n      if (!parentNode || !(parentNode instanceof HTMLElement)) {\n        return;\n      } // If the parent node has static positioning, leave animations might look\n      // really funky. Let's automatically apply `position: relative` in this\n      // case, to prevent any quirkiness.\n\n\n      if (window.getComputedStyle(parentNode).position === 'static') {\n        parentNode.style.position = 'relative';\n        parentNodePositionStatic();\n      }\n\n      _this.parentData.domNode = parentNode;\n    }, _this.runAnimation = function () {\n      var dynamicChildren = _this.state.children.filter(_this.doesChildNeedToBeAnimated); // Splitting DOM reads and writes to be peformed in batches\n\n\n      var childrenInitialStyles = dynamicChildren.map(function (child) {\n        return _this.computeInitialStyles(child);\n      });\n      dynamicChildren.forEach(function (child, index) {\n        _this.remainingAnimations += 1;\n\n        _this.childrenToAnimate.push(getKey(child));\n\n        _this.animateChild(child, index, childrenInitialStyles[index]);\n      });\n\n      if (typeof _this.props.onStartAll === 'function') {\n        _this.callChildrenHook(_this.props.onStartAll);\n      }\n    }, _this.doesChildNeedToBeAnimated = function (child) {\n      // If the child doesn't have a key, it's an immovable child (one that we\n      // do not want to do FLIP stuff to.)\n      if (!getKey(child)) {\n        return false;\n      }\n\n      var childData = _this.getChildData(getKey(child));\n\n      var childDomNode = childData.domNode;\n      var childBoundingBox = childData.boundingBox;\n      var parentBoundingBox = _this.parentData.boundingBox;\n\n      if (!childDomNode) {\n        return false;\n      }\n\n      var _this$props = _this.props,\n          appearAnimation = _this$props.appearAnimation,\n          enterAnimation = _this$props.enterAnimation,\n          leaveAnimation = _this$props.leaveAnimation,\n          getPosition = _this$props.getPosition;\n      var isAppearingWithAnimation = child.appearing && appearAnimation;\n      var isEnteringWithAnimation = child.entering && enterAnimation;\n      var isLeavingWithAnimation = child.leaving && leaveAnimation;\n\n      if (isAppearingWithAnimation || isEnteringWithAnimation || isLeavingWithAnimation) {\n        return true;\n      } // If it isn't entering/leaving, we want to animate it if it's\n      // on-screen position has changed.\n\n\n      var _getPositionDelta = getPositionDelta({\n        childDomNode: childDomNode,\n        childBoundingBox: childBoundingBox,\n        parentBoundingBox: parentBoundingBox,\n        getPosition: getPosition\n      }),\n          dX = _getPositionDelta[0],\n          dY = _getPositionDelta[1];\n\n      return dX !== 0 || dY !== 0;\n    }, _temp), possibleConstructorReturn$1(_this, _ret);\n  } // Copy props.children into state.\n  // To understand why this is important (and not an anti-pattern), consider\n  // how \"leave\" animations work. An item has \"left\" when the component\n  // receives a new set of props that do NOT contain the item.\n  // If we just render the props as-is, the item would instantly disappear.\n  // We want to keep the item rendered for a little while, until its animation\n  // can complete. Because we cannot mutate props, we make `state` the source\n  // of truth.\n  // FlipMove needs to know quite a bit about its children in order to do\n  // its job. We store these as a property on the instance. We're not using\n  // state, because we don't want changes to trigger re-renders, we just\n  // need a place to keep the data for reference, when changes happen.\n  // This field should not be accessed directly. Instead, use getChildData,\n  // putChildData, etc...\n  // Similarly, track the dom node and box of our parent element.\n  // If `maintainContainerHeight` prop is set to true, we'll create a\n  // placeholder element which occupies space so that the parent height\n  // doesn't change when items are removed from the document flow (which\n  // happens during leave animations)\n  // Keep track of remaining animations so we know when to fire the\n  // all-finished callback, and clean up after ourselves.\n  // NOTE: we can't simply use childrenToAnimate.length to track remaining\n  // animations, because we need to maintain the list of animating children,\n  // to pass to the `onFinishAll` handler.\n\n\n  FlipMove.prototype.componentDidMount = function componentDidMount() {\n    // Because React 16 no longer requires wrapping elements, Flip Move can opt\n    // to not wrap the children in an element. In that case, find the parent\n    // element using `findDOMNode`.\n    if (this.props.typeName === null) {\n      this.findDOMContainer();\n    } // Run our `appearAnimation` if it was requested, right after the\n    // component mounts.\n\n\n    var shouldTriggerFLIP = this.props.appearAnimation && !this.isAnimationDisabled(this.props);\n\n    if (shouldTriggerFLIP) {\n      this.prepForAnimation();\n      this.runAnimation();\n    }\n  };\n\n  FlipMove.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // When the component is handed new props, we need to figure out the\n    // \"resting\" position of all currently-rendered DOM nodes.\n    // We store that data in this.parent and this.children,\n    // so it can be used later to work out the animation.\n    this.updateBoundingBoxCaches(); // Convert opaque children object to array.\n\n    var nextChildren = getElementChildren(nextProps.children); // Next, we need to update our state, so that it contains our new set of\n    // children. If animation is disabled or unsupported, this is easy;\n    // we just copy our props into state.\n    // Assuming that we can animate, though, we have to do some work.\n    // Essentially, we want to keep just-deleted nodes in the DOM for a bit\n    // longer, so that we can animate them away.\n\n    this.setState({\n      children: this.isAnimationDisabled(nextProps) ? nextChildren.map(function (element) {\n        return _extends$2({}, element, {\n          element: element\n        });\n      }) : this.calculateNextSetOfChildren(nextChildren)\n    });\n  };\n\n  FlipMove.prototype.componentDidUpdate = function componentDidUpdate(previousProps) {\n    if (this.props.typeName === null) {\n      this.findDOMContainer();\n    } // If the children have been re-arranged, moved, or added/removed,\n    // trigger the main FLIP animation.\n    //\n    // IMPORTANT: We need to make sure that the children have actually changed.\n    // At the end of the transition, we clean up nodes that need to be removed.\n    // We DON'T want this cleanup to trigger another update.\n\n\n    var oldChildrenKeys = getElementChildren(this.props.children).map(function (d) {\n      return d.key;\n    });\n    var nextChildrenKeys = getElementChildren(previousProps.children).map(function (d) {\n      return d.key;\n    });\n    var shouldTriggerFLIP = !arraysEqual(oldChildrenKeys, nextChildrenKeys) && !this.isAnimationDisabled(this.props);\n\n    if (shouldTriggerFLIP) {\n      this.prepForAnimation();\n      this.runAnimation();\n    }\n  };\n\n  FlipMove.prototype.calculateNextSetOfChildren = function calculateNextSetOfChildren(nextChildren) {\n    var _this2 = this; // We want to:\n    //   - Mark all new children as `entering`\n    //   - Pull in previous children that aren't in nextChildren, and mark them\n    //     as `leaving`\n    //   - Preserve the nextChildren list order, with leaving children in their\n    //     appropriate places.\n    //\n\n\n    var updatedChildren = nextChildren.map(function (nextChild) {\n      var child = _this2.findChildByKey(nextChild.key); // If the current child did exist, but it was in the midst of leaving,\n      // we want to treat it as though it's entering\n\n\n      var isEntering = !child || child.leaving;\n      return _extends$2({}, nextChild, {\n        element: nextChild,\n        entering: isEntering\n      });\n    }); // This is tricky. We want to keep the nextChildren's ordering, but with\n    // any just-removed items maintaining their original position.\n    // eg.\n    //   this.state.children  = [ 1, 2, 3, 4 ]\n    //   nextChildren         = [ 3, 1 ]\n    //\n    // In this example, we've removed the '2' & '4'\n    // We want to end up with:  [ 2, 3, 1, 4 ]\n    //\n    // To accomplish that, we'll iterate through this.state.children. whenever\n    // we find a match, we'll append our `leaving` flag to it, and insert it\n    // into the nextChildren in its ORIGINAL position. Note that, as we keep\n    // inserting old items into the new list, the \"original\" position will\n    // keep incrementing.\n\n    var numOfChildrenLeaving = 0;\n    this.state.children.forEach(function (child, index) {\n      var isLeaving = !find$1(function (_ref) {\n        var key = _ref.key;\n        return key === getKey(child);\n      }, nextChildren); // If the child isn't leaving (or, if there is no leave animation),\n      // we don't need to add it into the state children.\n\n      if (!isLeaving || !_this2.props.leaveAnimation) return;\n\n      var nextChild = _extends$2({}, child, {\n        leaving: true\n      });\n\n      var nextChildIndex = index + numOfChildrenLeaving;\n      updatedChildren.splice(nextChildIndex, 0, nextChild);\n      numOfChildrenLeaving += 1;\n    });\n    return updatedChildren;\n  };\n\n  FlipMove.prototype.prepForAnimation = function prepForAnimation() {\n    var _this3 = this; // Our animation prep consists of:\n    // - remove children that are leaving from the DOM flow, so that the new\n    //   layout can be accurately calculated,\n    // - update the placeholder container height, if needed, to ensure that\n    //   the parent's height doesn't collapse.\n\n\n    var _props = this.props,\n        leaveAnimation = _props.leaveAnimation,\n        maintainContainerHeight = _props.maintainContainerHeight,\n        getPosition = _props.getPosition; // we need to make all leaving nodes \"invisible\" to the layout calculations\n    // that will take place in the next step (this.runAnimation).\n\n    if (leaveAnimation) {\n      var leavingChildren = this.state.children.filter(function (child) {\n        return child.leaving;\n      });\n      leavingChildren.forEach(function (leavingChild) {\n        var childData = _this3.getChildData(getKey(leavingChild)); // Warn if child is disabled\n\n\n        if (!_this3.isAnimationDisabled(_this3.props) && childData.domNode && childData.domNode.disabled) {\n          childIsDisabled();\n        } // We need to take the items out of the \"flow\" of the document, so that\n        // its siblings can move to take its place.\n\n\n        if (childData.boundingBox) {\n          removeNodeFromDOMFlow(childData, _this3.props.verticalAlignment);\n        }\n      });\n\n      if (maintainContainerHeight && this.heightPlaceholderData.domNode) {\n        updateHeightPlaceholder({\n          domNode: this.heightPlaceholderData.domNode,\n          parentData: this.parentData,\n          getPosition: getPosition\n        });\n      }\n    } // For all children not in the middle of entering or leaving,\n    // we need to reset the transition, so that the NEW shuffle starts from\n    // the right place.\n\n\n    this.state.children.forEach(function (child) {\n      var _getChildData = _this3.getChildData(getKey(child)),\n          domNode = _getChildData.domNode; // Ignore children that don't render DOM nodes (eg. by returning null)\n\n\n      if (!domNode) {\n        return;\n      }\n\n      if (!child.entering && !child.leaving) {\n        applyStylesToDOMNode({\n          domNode: domNode,\n          styles: {\n            transition: ''\n          }\n        });\n      }\n    });\n  };\n\n  FlipMove.prototype.animateChild = function animateChild(child, index, childInitialStyles) {\n    var _this4 = this;\n\n    var _getChildData2 = this.getChildData(getKey(child)),\n        domNode = _getChildData2.domNode;\n\n    if (!domNode) {\n      return;\n    } // Apply the relevant style for this DOM node\n    // This is the offset from its actual DOM position.\n    // eg. if an item has been re-rendered 20px lower, we want to apply a\n    // style of 'transform: translate(-20px)', so that it appears to be where\n    // it started.\n    // In FLIP terminology, this is the 'Invert' stage.\n\n\n    applyStylesToDOMNode({\n      domNode: domNode,\n      styles: childInitialStyles\n    }); // Start by invoking the onStart callback for this child.\n\n    if (this.props.onStart) this.props.onStart(child, domNode); // Next, animate the item from it's artificially-offset position to its\n    // new, natural position.\n\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        // NOTE, RE: the double-requestAnimationFrame:\n        // Sadly, this is the most browser-compatible way to do this I've found.\n        // Essentially we need to set the initial styles outside of any request\n        // callbacks to avoid batching them. Then, a frame needs to pass with\n        // the styles above rendered. Then, on the second frame, we can apply\n        // our final styles to perform the animation.\n        // Our first order of business is to \"undo\" the styles applied in the\n        // previous frames, while also adding a `transition` property.\n        // This way, the item will smoothly transition from its old position\n        // to its new position.\n        // eslint-disable-next-line flowtype/require-variable-type\n        var styles = {\n          transition: createTransitionString(index, _this4.props),\n          transform: '',\n          opacity: ''\n        };\n\n        if (child.appearing && _this4.props.appearAnimation) {\n          styles = _extends$2({}, styles, _this4.props.appearAnimation.to);\n        } else if (child.entering && _this4.props.enterAnimation) {\n          styles = _extends$2({}, styles, _this4.props.enterAnimation.to);\n        } else if (child.leaving && _this4.props.leaveAnimation) {\n          styles = _extends$2({}, styles, _this4.props.leaveAnimation.to);\n        } // In FLIP terminology, this is the 'Play' stage.\n\n\n        applyStylesToDOMNode({\n          domNode: domNode,\n          styles: styles\n        });\n      });\n    });\n    this.bindTransitionEndHandler(child);\n  };\n\n  FlipMove.prototype.bindTransitionEndHandler = function bindTransitionEndHandler(child) {\n    var _this5 = this;\n\n    var _getChildData3 = this.getChildData(getKey(child)),\n        domNode = _getChildData3.domNode;\n\n    if (!domNode) {\n      return;\n    } // The onFinish callback needs to be bound to the transitionEnd event.\n    // We also need to unbind it when the transition completes, so this ugly\n    // inline function is required (we need it here so it closes over\n    // dependent variables `child` and `domNode`)\n\n\n    var transitionEndHandler = function transitionEndHandler(ev) {\n      // It's possible that this handler is fired not on our primary transition,\n      // but on a nested transition (eg. a hover effect). Ignore these cases.\n      if (ev.target !== domNode) return; // Remove the 'transition' inline style we added. This is cleanup.\n\n      domNode.style.transition = ''; // Trigger any applicable onFinish/onFinishAll hooks\n\n      _this5.triggerFinishHooks(child, domNode);\n\n      domNode.removeEventListener(transitionEnd, transitionEndHandler);\n\n      if (child.leaving) {\n        _this5.removeChildData(getKey(child));\n      }\n    };\n\n    domNode.addEventListener(transitionEnd, transitionEndHandler);\n  };\n\n  FlipMove.prototype.triggerFinishHooks = function triggerFinishHooks(child, domNode) {\n    var _this6 = this;\n\n    if (this.props.onFinish) this.props.onFinish(child, domNode); // Reduce the number of children we need to animate by 1,\n    // so that we can tell when all children have finished.\n\n    this.remainingAnimations -= 1;\n\n    if (this.remainingAnimations === 0) {\n      // Remove any items from the DOM that have left, and reset `entering`.\n      var nextChildren = this.state.children.filter(function (_ref2) {\n        var leaving = _ref2.leaving;\n        return !leaving;\n      }).map(function (item) {\n        return _extends$2({}, item, {\n          // fix for Flow\n          element: item.element,\n          appearing: false,\n          entering: false\n        });\n      });\n      this.setState({\n        children: nextChildren\n      }, function () {\n        if (typeof _this6.props.onFinishAll === 'function') {\n          _this6.callChildrenHook(_this6.props.onFinishAll);\n        } // Reset our variables for the next iteration\n\n\n        _this6.childrenToAnimate = [];\n      }); // If the placeholder was holding the container open while elements were\n      // leaving, we we can now set its height to zero.\n\n      if (this.heightPlaceholderData.domNode) {\n        this.heightPlaceholderData.domNode.style.height = '0';\n      }\n    }\n  };\n\n  FlipMove.prototype.callChildrenHook = function callChildrenHook(hook) {\n    var _this7 = this;\n\n    var elements = [];\n    var domNodes = [];\n    this.childrenToAnimate.forEach(function (childKey) {\n      // If this was an exit animation, the child may no longer exist.\n      // If so, skip it.\n      var child = _this7.findChildByKey(childKey);\n\n      if (!child) {\n        return;\n      }\n\n      elements.push(child);\n\n      if (_this7.hasChildData(childKey)) {\n        domNodes.push(_this7.getChildData(childKey).domNode);\n      }\n    });\n    hook(elements, domNodes);\n  };\n\n  FlipMove.prototype.updateBoundingBoxCaches = function updateBoundingBoxCaches() {\n    var _this8 = this; // This is the ONLY place that parentData and childrenData's\n    // bounding boxes are updated. They will be calculated at other times\n    // to be compared to this value, but it's important that the cache is\n    // updated once per update.\n\n\n    var parentDomNode = this.parentData.domNode;\n\n    if (!parentDomNode) {\n      return;\n    }\n\n    this.parentData.boundingBox = this.props.getPosition(parentDomNode); // Splitting DOM reads and writes to be peformed in batches\n\n    var childrenBoundingBoxes = [];\n    this.state.children.forEach(function (child) {\n      var childKey = getKey(child); // It is possible that a child does not have a `key` property;\n      // Ignore these children, they don't need to be moved.\n\n      if (!childKey) {\n        childrenBoundingBoxes.push(null);\n        return;\n      } // In very rare circumstances, for reasons unknown, the ref is never\n      // populated for certain children. In this case, avoid doing this update.\n      // see: https://github.com/joshwcomeau/react-flip-move/pull/91\n\n\n      if (!_this8.hasChildData(childKey)) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      var childData = _this8.getChildData(childKey); // If the child element returns null, we need to avoid trying to\n      // account for it\n\n\n      if (!childData.domNode || !child) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      childrenBoundingBoxes.push(getRelativeBoundingBox({\n        childDomNode: childData.domNode,\n        parentDomNode: parentDomNode,\n        getPosition: _this8.props.getPosition\n      }));\n    });\n    this.state.children.forEach(function (child, index) {\n      var childKey = getKey(child);\n      var childBoundingBox = childrenBoundingBoxes[index];\n\n      if (!childKey) {\n        return;\n      }\n\n      _this8.setChildData(childKey, {\n        boundingBox: childBoundingBox\n      });\n    });\n  };\n\n  FlipMove.prototype.computeInitialStyles = function computeInitialStyles(child) {\n    if (child.appearing) {\n      return this.props.appearAnimation ? this.props.appearAnimation.from : {};\n    } else if (child.entering) {\n      if (!this.props.enterAnimation) {\n        return {};\n      } // If this child was in the middle of leaving, it still has its\n      // absolute positioning styles applied. We need to undo those.\n\n\n      return _extends$2({\n        position: '',\n        top: '',\n        left: '',\n        right: '',\n        bottom: ''\n      }, this.props.enterAnimation.from);\n    } else if (child.leaving) {\n      return this.props.leaveAnimation ? this.props.leaveAnimation.from : {};\n    }\n\n    var childData = this.getChildData(getKey(child));\n    var childDomNode = childData.domNode;\n    var childBoundingBox = childData.boundingBox;\n    var parentBoundingBox = this.parentData.boundingBox;\n\n    if (!childDomNode) {\n      return {};\n    }\n\n    var _getPositionDelta2 = getPositionDelta({\n      childDomNode: childDomNode,\n      childBoundingBox: childBoundingBox,\n      parentBoundingBox: parentBoundingBox,\n      getPosition: this.props.getPosition\n    }),\n        dX = _getPositionDelta2[0],\n        dY = _getPositionDelta2[1];\n\n    return {\n      transform: 'translate(' + dX + 'px, ' + dY + 'px)'\n    };\n  }; // eslint-disable-next-line class-methods-use-this\n\n\n  FlipMove.prototype.isAnimationDisabled = function isAnimationDisabled(props) {\n    // If the component is explicitly passed a `disableAllAnimations` flag,\n    // we can skip this whole process. Similarly, if all of the numbers have\n    // been set to 0, there is no point in trying to animate; doing so would\n    // only cause a flicker (and the intent is probably to disable animations)\n    // We can also skip this rigamarole if there's no browser support for it.\n    return noBrowserSupport || props.disableAllAnimations || props.duration === 0 && props.delay === 0 && props.staggerDurationBy === 0 && props.staggerDelayBy === 0;\n  };\n\n  FlipMove.prototype.findChildByKey = function findChildByKey(key) {\n    return find$1(function (child) {\n      return getKey(child) === key;\n    }, this.state.children);\n  };\n\n  FlipMove.prototype.hasChildData = function hasChildData(key) {\n    // Object has some built-in properties on its prototype, such as toString.  hasOwnProperty makes\n    // sure that key is present on childrenData itself, not on its prototype.\n    return Object.prototype.hasOwnProperty.call(this.childrenData, key);\n  };\n\n  FlipMove.prototype.getChildData = function getChildData(key) {\n    return this.hasChildData(key) ? this.childrenData[key] : {};\n  };\n\n  FlipMove.prototype.setChildData = function setChildData(key, data) {\n    this.childrenData[key] = _extends$2({}, this.getChildData(key), data);\n  };\n\n  FlipMove.prototype.removeChildData = function removeChildData(key) {\n    delete this.childrenData[key];\n    this.setState(function (prevState) {\n      return _extends$2({}, prevState, {\n        children: prevState.children.filter(function (child) {\n          return child.element.key !== key;\n        })\n      });\n    });\n  };\n\n  FlipMove.prototype.createHeightPlaceholder = function createHeightPlaceholder() {\n    var _this9 = this;\n\n    var typeName = this.props.typeName; // If requested, create an invisible element at the end of the list.\n    // Its height will be modified to prevent the container from collapsing\n    // prematurely.\n\n    var isContainerAList = typeName === 'ul' || typeName === 'ol';\n    var placeholderType = isContainerAList ? 'li' : 'div';\n    return createElement(placeholderType, {\n      key: 'height-placeholder',\n      ref: function ref(domNode) {\n        _this9.heightPlaceholderData.domNode = domNode;\n      },\n      style: {\n        visibility: 'hidden',\n        height: 0\n      }\n    });\n  };\n\n  FlipMove.prototype.childrenWithRefs = function childrenWithRefs() {\n    var _this10 = this; // We need to clone the provided children, capturing a reference to the\n    // underlying DOM node. Flip Move needs to use the React escape hatches to\n    // be able to do its calculations.\n\n\n    return this.state.children.map(function (child) {\n      return cloneElement(child.element, {\n        ref: function ref(element) {\n          // Stateless Functional Components are not supported by FlipMove,\n          // because they don't have instances.\n          if (!element) {\n            return;\n          }\n\n          var domNode = getNativeNode(element);\n\n          _this10.setChildData(getKey(child), {\n            domNode: domNode\n          });\n        }\n      });\n    });\n  };\n\n  FlipMove.prototype.render = function render() {\n    var _this11 = this;\n\n    var _props2 = this.props,\n        typeName = _props2.typeName,\n        delegated = _props2.delegated,\n        leaveAnimation = _props2.leaveAnimation,\n        maintainContainerHeight = _props2.maintainContainerHeight;\n    var children = this.childrenWithRefs();\n\n    if (leaveAnimation && maintainContainerHeight) {\n      children.push(this.createHeightPlaceholder());\n    }\n\n    if (!typeName) return children;\n\n    var props = _extends$2({}, delegated, {\n      children: children,\n      ref: function ref(node) {\n        _this11.parentData.domNode = node;\n      }\n    });\n\n    return createElement(typeName, props);\n  };\n\n  return FlipMove;\n}(Component);\n\nvar enhancedFlipMove =\n/* #__PURE__ */\npropConverter(FlipMove$1);\nvar de = createCommonjsModule(function (module, exports) {\n  (function (global, factory) {\n    typeof commonjsRequire === 'function' ? factory(moment) : factory(global.moment);\n  })(commonjsGlobal, function (moment$$1) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n      var format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [number + ' Tage', number + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [number + ' Monate', number + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [number + ' Jahre', number + ' Jahren']\n      };\n      return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment$$1.defineLocale('de', {\n      months: 'Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n      monthsShort: 'Jan._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n      monthsParseExact: true,\n      weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n      weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n      weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n      weekdaysParseExact: true,\n      longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd, D. MMMM YYYY HH:mm'\n      },\n      calendar: {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n      },\n      relativeTime: {\n        future: 'in %s',\n        past: 'vor %s',\n        s: 'ein paar Sekunden',\n        ss: '%d Sekunden',\n        m: processRelativeTime,\n        mm: '%d Minuten',\n        h: processRelativeTime,\n        hh: '%d Stunden',\n        d: processRelativeTime,\n        dd: processRelativeTime,\n        M: processRelativeTime,\n        MM: processRelativeTime,\n        y: processRelativeTime,\n        yy: processRelativeTime\n      },\n      dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n      ordinal: '%d.',\n      week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n      }\n    });\n    return de;\n  });\n});\n\nvar EditItem = function (_Component) {\n  inherits(EditItem, _Component);\n\n  function EditItem(props) {\n    classCallCheck(this, EditItem);\n\n    var _this = possibleConstructorReturn(this, (EditItem.__proto__ || Object.getPrototypeOf(EditItem)).call(this, props));\n\n    _this.state = {\n      hasError: false\n    };\n    _this.newName = props.defaultValue;\n    return _this;\n  }\n\n  createClass(EditItem, [{\n    key: 'handleChange',\n    value: function handleChange(evt) {\n      var isValidRename = this.props.isValidRename;\n      var name = evt.target.value;\n      this.newName = name;\n\n      if (!isValidRename(name) && !this.state.hasError) {\n        this.setState({\n          hasError: true\n        });\n        return;\n      }\n\n      if (this.state.hasError) {\n        this.setState({\n          hasError: false\n        });\n      }\n    }\n  }, {\n    key: 'handleSubmit',\n    value: function handleSubmit(evt) {\n      evt.preventDefault();\n\n      if (!this.state.hasError) {\n        this.props.onSubmit(this.newName);\n        this.props.onExit();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          defaultValue = _props.defaultValue,\n          onExit = _props.onExit;\n      return React.createElement('form', {\n        onSubmit: this.handleSubmit.bind(this)\n      }, React.createElement(FormGroup$1, {\n        className: 'edit-item-form-group',\n        validationState: this.state.hasError ? \"error\" : undefined\n      }, React.createElement(FormControl$1, {\n        defaultValue: defaultValue,\n        className: 'edit-item-input',\n        autoFocus: true,\n        onChange: this.handleChange.bind(this),\n        onBlur: onExit\n      })));\n    }\n  }]);\n  return EditItem;\n}(Component);\n\nEditItem.propTypes = {\n  defaultValue: PropTypes.string.isRequired,\n  isValidRename: PropTypes.func.isRequired,\n  onExit: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nvar DefaultMimeTypeRenderer = {\n  \"text\": function text() {\n    return React.createElement(\"div\", {\n      className: \"item-icon\"\n    }, \"txt\");\n  },\n  \"image\": function image(props) {\n    return React.createElement(\"img\", {\n      className: \"preview-img\",\n      src: props.src\n    });\n  },\n  \"audio\": function audio() {\n    return React.createElement(\"div\", {\n      className: \"item-icon\"\n    }, \"audio\");\n  },\n  \"video\": function video() {\n    return React.createElement(\"div\", {\n      className: \"item-icon\"\n    }, \"video\");\n  },\n  \"application\": function application() {\n    return React.createElement(\"div\", {\n      className: \"item-icon\"\n    }, \"< />\");\n  },\n  \"application/pdf\": function applicationPdf() {\n    return React.createElement(\"div\", {\n      className: \"item-icon\"\n    }, \"pdf\");\n  }\n};\n\nvar AnimatedItemIcon = function (_Component) {\n  inherits(AnimatedItemIcon, _Component);\n\n  function AnimatedItemIcon() {\n    classCallCheck(this, AnimatedItemIcon);\n    return possibleConstructorReturn(this, (AnimatedItemIcon.__proto__ || Object.getPrototypeOf(AnimatedItemIcon)).apply(this, arguments));\n  }\n\n  createClass(AnimatedItemIcon, [{\n    key: 'getContent',\n    value: function getContent() {\n      var _props = this.props,\n          items = _props.items,\n          mimeType = _props.mimeType;\n      var MimeTypeRenderer = Object.assign(DefaultMimeTypeRenderer, {}\n      /*custom mimeTypeRenderer*/\n      );\n      var content = null;\n\n      if (items) {\n        return React.createElement(Glyphicon$1, {\n          glyph: 'folder-close'\n        });\n      }\n\n      if (mimeType) {\n        mimeType = mimeType.toLowerCase();\n\n        switch (true) {\n          case mimeType === \"application/pdf\":\n            return MimeTypeRenderer[\"application/pdf\"](this.props);\n\n          case mimeType.indexOf(\"text\") !== -1:\n            return MimeTypeRenderer[\"text\"](this.props);\n\n          case mimeType.indexOf(\"image\") !== -1:\n            return MimeTypeRenderer[\"image\"](this.props);\n\n          case mimeType.indexOf(\"audio\") !== -1:\n            return MimeTypeRenderer[\"audio\"](this.props);\n\n          case mimeType.indexOf(\"video\") !== -1:\n            return MimeTypeRenderer[\"video\"](this.props);\n\n          case mimeType.indexOf(\"application\") !== -1:\n            return MimeTypeRenderer[\"application\"](this.props);\n        }\n      }\n\n      return content;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('div', {\n        className: 'item-icon-container'\n      }, this.getContent.call(this));\n    }\n  }]);\n  return AnimatedItemIcon;\n}(Component);\n\nAnimatedItemIcon.propTypes = {\n  items: PropTypes.array,\n  src: PropTypes.any,\n  mimeType: PropTypes.string\n};\nmoment.locale(\"de\");\n\nvar AnimatedItem = function (_Component) {\n  inherits(AnimatedItem, _Component);\n\n  function AnimatedItem(props) {\n    classCallCheck(this, AnimatedItem);\n\n    var _this = possibleConstructorReturn(this, (AnimatedItem.__proto__ || Object.getPrototypeOf(AnimatedItem)).call(this, props));\n\n    _this.state = {\n      editMode: false\n    };\n    _this.isDir = false;\n\n    if (props.item.items) {\n      _this.isDir = true;\n    }\n\n    return _this;\n  }\n\n  createClass(AnimatedItem, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.onItemReady({\n        setEditMode: function setEditMode() {\n          var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !_this2.state.editMode;\n          return _this2.setState({\n            editMode: mode\n          });\n        }\n      });\n    }\n  }, {\n    key: 'onRenameSubmit',\n    value: function onRenameSubmit(name) {\n      var _props = this.props,\n          folderController = _props.folderController,\n          item = _props.item;\n      folderController.modifyItemByName(item.name, {\n        name: name\n      });\n      folderController.onRenameFinished(name);\n    }\n  }, {\n    key: 'onRenameCancel',\n    value: function onRenameCancel() {\n      var folderController = this.props.folderController;\n      this.setState({\n        editMode: false\n      });\n      folderController.onRenameAborted.call(folderController);\n    }\n  }, {\n    key: 'getOnClick',\n    value: function getOnClick() {\n      var _props2 = this.props,\n          item = _props2.item,\n          switchFolder = _props2.switchFolder,\n          onItemSelected = _props2.onItemSelected;\n\n      if (this.state.editMode) {\n        return;\n      }\n\n      if (this.isDir) {\n        return function () {\n          return switchFolder(item);\n        };\n      }\n\n      if (onItemSelected) {\n        return function () {\n          return onItemSelected(item);\n        };\n      }\n    }\n  }, {\n    key: 'getItemSize',\n    value: function getItemSize() {\n      var item = this.props.item;\n\n      if (this.isDir || !item.size) {\n        return null;\n      }\n\n      if (item.size < 999) {\n        return item.size + \" B\";\n      }\n\n      if (item.size < 999999) {\n        return (item.size / 1000).toFixed(1) + \" KB\";\n      }\n\n      if (item.size < 999999999) {\n        return (item.size / 1000000).toFixed(1) + \" MB\";\n      }\n\n      return (item.size / 1000000000).toFixed(1) + \" GB\";\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          item = _props3.item,\n          folderController = _props3.folderController,\n          iconSize = _props3.iconSize,\n          nameSize = _props3.nameSize,\n          byteSize = _props3.byteSize,\n          updatedAtSize = _props3.updatedAtSize;\n      return React.createElement(ListGroupItem$1, {\n        className: \"file-system-item file-system-\" + (this.isDir ? \"folder\" : \"file\"),\n        onClick: this.getOnClick.call(this),\n        onContextMenu: function onContextMenu(evt) {\n          return folderController.onContextMenu(evt, item);\n        }\n      }, React.createElement(Row$1, null, React.createElement(Col$1, iconSize, React.createElement(AnimatedItemIcon, item)), React.createElement(Col$1, _extends$1({}, nameSize, {\n        className: 'item-name'\n      }), this.state.editMode ? React.createElement(EditItem, {\n        defaultValue: item.name,\n        isValidRename: folderController.isValidRename.bind(folderController, item.name),\n        onExit: this.onRenameCancel.bind(this),\n        onSubmit: this.onRenameSubmit.bind(this)\n      }) : item.name), React.createElement(Col$1, byteSize, this.getItemSize.call(this)), React.createElement(Col$1, updatedAtSize, moment(item.updatedAt).format(\"L LTS\"))));\n    }\n  }]);\n  return AnimatedItem;\n}(Component);\n\nAnimatedItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  folderController: PropTypes.object.isRequired,\n  switchFolder: PropTypes.func.isRequired,\n  onItemReady: PropTypes.func.isRequired,\n  iconSize: PropTypes.object,\n  nameSize: PropTypes.object,\n  byteSize: PropTypes.object,\n  updatedAtSize: PropTypes.object,\n  onItemSelected: PropTypes.func\n};\n\nvar AnimatedFolder = function (_Component) {\n  inherits(AnimatedFolder, _Component);\n\n  function AnimatedFolder() {\n    classCallCheck(this, AnimatedFolder);\n\n    var _this = possibleConstructorReturn(this, (AnimatedFolder.__proto__ || Object.getPrototypeOf(AnimatedFolder)).call(this));\n\n    _this.IconSize = {\n      xs: 3,\n      sm: 2,\n      md: 1\n    };\n    _this.NameSize = {\n      xs: 4,\n      sm: 4,\n      md: 5\n    };\n    _this.ByteSize = {\n      xs: 2,\n      sm: 3,\n      md: 3\n    };\n    _this.UpdatedAtSize = {\n      xs: 3,\n      sm: 3,\n      md: 3\n    };\n    return _this;\n  }\n\n  createClass(AnimatedFolder, [{\n    key: 'renderFileHeader',\n    value: function renderFileHeader() {\n      return React.createElement(ListGroupItem$1, {\n        className: 'file-system-file-header'\n      }, React.createElement(Row$1, null, React.createElement(Col$1, this.IconSize), React.createElement(Col$1, this.NameSize, 'name'), React.createElement(Col$1, this.ByteSize, 'size'), React.createElement(Col$1, this.UpdatedAtSize, 'updated at')));\n    }\n  }, {\n    key: 'createItem',\n    value: function createItem(item) {\n      var _props = this.props,\n          folderController = _props.folderController,\n          switchFolder = _props.switchFolder,\n          onItemSelected = _props.onItemSelected;\n      return React.createElement(AnimatedItem, {\n        key: folderController.getPath() + item.name,\n        onItemReady: function onItemReady(api) {\n          return folderController._addItemToApi(item.name, api);\n        },\n        item: item,\n        folderController: folderController,\n        switchFolder: switchFolder,\n        iconSize: this.IconSize,\n        nameSize: this.NameSize,\n        byteSize: this.ByteSize,\n        updatedAtSize: this.UpdatedAtSize,\n        onItemSelected: onItemSelected\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var folderController = this.props.folderController;\n      var items = folderController.getItems();\n      return React.createElement('div', {\n        className: 'folder'\n      }, React.createElement(ListGroup$1, {\n        style: {\n          position: \"relative\"\n        }\n      }, this.renderFileHeader.call(this), React.createElement(enhancedFlipMove, {\n        typeName: null,\n        duration: 150,\n        enterAnimation: 'fade',\n        leaveAnimation: 'fade',\n        staggerDelayBy: 10\n      }, items.map(this.createItem, this))));\n    }\n  }]);\n  return AnimatedFolder;\n}(Component);\n\nAnimatedFolder.propTypes = {\n  folderController: PropTypes.object,\n  switchFolder: PropTypes.func,\n  onItemSelected: PropTypes.func\n};\n\nvar ReactFileSystem = function (_Component) {\n  inherits(ReactFileSystem, _Component);\n\n  function ReactFileSystem(props) {\n    classCallCheck(this, ReactFileSystem);\n\n    var _this = possibleConstructorReturn(this, (ReactFileSystem.__proto__ || Object.getPrototypeOf(ReactFileSystem)).call(this, props));\n\n    _this.refreshUI = function () {\n      return _this._mounted && _this.forceUpdate();\n    };\n\n    _this.state = {\n      currFolderController: new FolderController(props.tree, props.rootFolderName, null, _this.refreshUI.bind(_this))\n    };\n    return _this;\n  }\n\n  createClass(ReactFileSystem, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._mounted = true;\n\n      if (this.props.onRootFolderReady) {\n        this.props.onRootFolderReady(this.state.currFolderController);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: 'switchFolder',\n    value: function switchFolder(data, folder) {\n      if (!folder) {\n        folder = new FolderController(data.items, data.name, this.state.currFolderController, this.refreshUI.bind(this));\n      }\n\n      this.setState({\n        currFolderController: folder\n      });\n\n      if (this.props.onFolderSwitched) {\n        this.props.onFolderSwitched(folder);\n      }\n    }\n  }, {\n    key: 'getFolderType',\n    value: function getFolderType() {\n      var _props = this.props,\n          display = _props.display,\n          onItemSelected = _props.onItemSelected;\n      var props = {\n        folderController: this.state.currFolderController,\n        switchFolder: this.switchFolder.bind(this),\n        onItemSelected: onItemSelected\n      };\n\n      switch (display.toLowerCase()) {\n        case \"tree\":\n          return React.createElement(TreeFolder, props);\n\n        case \"foldertop\":\n          return React.createElement(FolderTopFolder, props);\n\n        case \"basic\":\n          return React.createElement(BasicFolder, props);\n\n        case \"animated\":\n          return React.createElement(AnimatedFolder, props);\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement('div', {\n        className: 'react-file-system'\n      }, React.createElement(History, {\n        currFolderController: this.state.currFolderController,\n        setCurrFolder: function setCurrFolder(folder) {\n          return _this2.switchFolder(null, folder);\n        }\n      }), this.getFolderType.call(this));\n    }\n  }]);\n  return ReactFileSystem;\n}(Component);\n\nReactFileSystem.defaultProps = {\n  display: \"foldertop\",\n  tree: []\n};\nReactFileSystem.propTypes = {\n  rootFolderName: PropTypes.string.isRequired,\n  tree: PropTypes.array,\n  display: PropTypes.string,\n  onRootFolderReady: PropTypes.func,\n  onFolderSwitched: PropTypes.func,\n  onItemSelected: PropTypes.func\n};\nexport default ReactFileSystem;","map":null,"metadata":{},"sourceType":"module"}