{"ast":null,"code":"var _jsxFileName = \"/home/retr0/Documents/Projects/dsfh-dashboard/src/components/DeployForm.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, ButtonGroup } from \"reactstrap\";\nimport { db } from \"../fire\";\n\nclass DeployForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      model_name: \"\",\n      description: \"\",\n      diseases: [],\n      labels: []\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onCheckboxBtnClick = selected => {\n      if (this.state.diseases.includes(selected)) {\n        var array = [...this.state.diseases]; // make a separate copy of the array\n\n        var index = array.indexOf(selected);\n\n        if (index < 0) {\n          array.push(selected);\n        } else {\n          array.splice(index, 1);\n        }\n      }\n\n      this.setState({\n        diseases: array\n      });\n    };\n  }\n\n  componentDidMount() {\n    db.collection(\"Images\").get().then(querySnapshot => {\n      const data = querySnapshot.docs.map(doc => doc.data()); //console.log(data);\n\n      var temp = [];\n\n      for (var i = 0; i < data.length; i++) {\n        temp.push(data[i].label);\n      } //console.log(temp);\n\n\n      this.setState({\n        labels: temp\n      }); // array of cities objects\n    });\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Model-Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Model Name:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"model_name\",\n      id: \"model_name\",\n      value: this.state.model_name,\n      onChange: this.onChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      value: this.state.description,\n      onChange: this.onChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Select Diseases:\"), React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.labels.map((label, index) => React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.onCheckboxBtnClick(label),\n      active: this.state.diseases.indexOf(label),\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default DeployForm;","map":{"version":3,"sources":["/home/retr0/Documents/Projects/dsfh-dashboard/src/components/DeployForm.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","ButtonGroup","db","DeployForm","state","model_name","description","diseases","labels","onChange","e","setState","target","name","value","onCheckboxBtnClick","selected","includes","array","index","indexOf","push","splice","componentDidMount","collection","get","then","querySnapshot","data","docs","map","doc","temp","i","length","label","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, ButtonGroup } from \"reactstrap\";\nimport { db } from \"../fire\";\nclass DeployForm extends Component {\n  state = {\n    model_name: \"\",\n    description: \"\",\n    diseases: [],\n    labels: []\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onCheckboxBtnClick = selected => {\n    if (this.state.diseases.includes(selected)) {\n      var array = [...this.state.diseases]; // make a separate copy of the array\n      var index = array.indexOf(selected);\n      if (index < 0) {\n        array.push(selected);\n      } else {\n        array.splice(index, 1);\n      }\n    }\n    this.setState({ diseases: array });\n  };\n\n  componentDidMount() {\n    db.collection(\"Images\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        //console.log(data);\n        var temp = [];\n        for (var i = 0; i < data.length; i++) {\n          temp.push(data[i].label);\n        }\n        //console.log(temp);\n        this.setState({ labels: temp }); // array of cities objects\n      });\n  }\n\n  render() {\n    return (\n      <Form>\n        <FormGroup>\n          <Label for=\"Model-Name\">Model Name:</Label>\n          <Input\n            type=\"text\"\n            name=\"model_name\"\n            id=\"model_name\"\n            value={this.state.model_name}\n            onChange={this.onChange}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"description\">Description:</Label>\n          <Input\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            value={this.state.description}\n            onChange={this.onChange}\n            required\n          />\n        </FormGroup>\n        <p>Select Diseases:</p>\n        <ButtonGroup>\n          {this.state.labels.map((label, index) => (\n            <Button\n              color=\"primary\"\n              onClick={() => this.onCheckboxBtnClick(label)}\n              active={this.state.diseases.indexOf(label)}\n              key={index}\n            ></Button>\n          ))}\n        </ButtonGroup>\n        <br />\n        <Button>Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default DeployForm;\n"]},"metadata":{},"sourceType":"module"}