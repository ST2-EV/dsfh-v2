{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar ReactDOM = require('react-dom');\n\nvar qr = require('qr.js');\n\nfunction getBackingStorePixelRatio(ctx) {\n  return ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n}\n\nvar getDOMNode;\n\nif (/^0\\.14/.test(React.version)) {\n  getDOMNode = function getDOMNode(ref) {\n    return ref;\n  };\n} else {\n  getDOMNode = function getDOMNode(ref) {\n    return ReactDOM.findDOMNode(ref);\n  };\n}\n\nvar QRCode = function (_React$Component) {\n  _inherits(QRCode, _React$Component);\n\n  function QRCode() {\n    _classCallCheck(this, QRCode);\n\n    return _possibleConstructorReturn(this, (QRCode.__proto__ || Object.getPrototypeOf(QRCode)).apply(this, arguments));\n  }\n\n  _createClass(QRCode, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var that = this;\n      return Object.keys(QRCode.propTypes).some(function (k) {\n        return that.props[k] !== nextProps[k];\n      });\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.update();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.update();\n    }\n  }, {\n    key: 'utf16to8',\n    value: function utf16to8(str) {\n      var out, i, len, c;\n      out = \"\";\n      len = str.length;\n\n      for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x0001 && c <= 0x007F) {\n          out += str.charAt(i);\n        } else if (c > 0x07FF) {\n          out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n          out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n          out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n        } else {\n          out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n          out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n        }\n      }\n\n      return out;\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var value = this.utf16to8(this.props.value);\n      var qrcode = qr(value);\n      var canvas = getDOMNode(this.refs.canvas);\n      var ctx = canvas.getContext('2d');\n      var cells = qrcode.modules;\n      var tileW = this.props.size / cells.length;\n      var tileH = this.props.size / cells.length;\n      var scale = (window.devicePixelRatio || 1) / getBackingStorePixelRatio(ctx);\n      canvas.height = canvas.width = this.props.size * scale;\n      ctx.scale(scale, scale);\n      cells.forEach(function (row, rdx) {\n        row.forEach(function (cell, cdx) {\n          ctx.fillStyle = cell ? this.props.fgColor : this.props.bgColor;\n          var w = Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW);\n          var h = Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH);\n          ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h);\n        }, this);\n      }, this);\n\n      if (this.props.logo) {\n        var self = this;\n        var size = this.props.size;\n        var image = document.createElement('img');\n        image.src = this.props.logo;\n\n        image.onload = function () {\n          var dwidth = self.props.logoWidth || size * 0.2;\n          var dheight = self.props.logoHeight || image.height / image.width * dwidth;\n          var dx = (size - dwidth) / 2;\n          var dy = (size - dheight) / 2;\n          image.width = dwidth;\n          image.height = dheight;\n          ctx.drawImage(image, dx, dy, dwidth, dheight);\n        };\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('canvas', {\n        style: {\n          height: this.props.size,\n          width: this.props.size\n        },\n        height: this.props.size,\n        width: this.props.size,\n        ref: 'canvas'\n      });\n    }\n  }]);\n\n  return QRCode;\n}(React.Component);\n\nQRCode.propTypes = {\n  value: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  bgColor: PropTypes.string,\n  fgColor: PropTypes.string,\n  logo: PropTypes.string,\n  logoWidth: PropTypes.number,\n  logoHeight: PropTypes.number\n};\nQRCode.defaultProps = {\n  size: 128,\n  bgColor: '#FFFFFF',\n  fgColor: '#000000',\n  value: 'http://facebook.github.io/react/'\n};\nmodule.exports = QRCode;","map":null,"metadata":{},"sourceType":"script"}