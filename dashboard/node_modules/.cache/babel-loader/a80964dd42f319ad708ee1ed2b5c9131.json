{"ast":null,"code":"var _jsxFileName = \"/home/retr0/Documents/Projects/dsfh-dashboard/src/components/ClusterForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Label, Alert, Button } from \"reactstrap\";\nimport axios from \"axios\";\nconst styles = {\n  marginTop: \"80px\"\n};\nconst stylestwo = {\n  textAlign: \"center\",\n  mariginTop: \"10px\",\n  padding: \"20px\"\n};\n\nclass ClusterForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Folder_Name: \"\",\n      fileType: \"Image\",\n      error_data: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            Folder_Name = _this$state.Folder_Name,\n            fileType = _this$state.fileType;\n      const url = \"http://0.0.0.0:5001/image-cluster/\" + Folder_Name;\n      axios.get(url).then(res => {\n        console.log(res.data);\n      });\n      console.log(this.state);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Configure Newly uploaded folder:\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Folder_Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Folder-Name:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"Folder_Name\",\n      id: \"Folder_Name\",\n      value: this.state.Folder_Name,\n      onChange: this.onChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"fileType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"File-type:\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"fileType\",\n      id: \"fileType\",\n      onChange: this.onChange,\n      value: this.state.fileType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Image\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Cluster\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Clusterify\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), this.state.error_data && React.createElement(\"div\", {\n      style: stylestwo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.error_data))), this.state.success_data && React.createElement(\"div\", {\n      style: stylestwo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.success_data)))));\n  }\n\n}\n\nexport default ClusterForm;","map":{"version":3,"sources":["/home/retr0/Documents/Projects/dsfh-dashboard/src/components/ClusterForm.js"],"names":["React","Component","Form","FormGroup","Input","Label","Alert","Button","axios","styles","marginTop","stylestwo","textAlign","mariginTop","padding","ClusterForm","state","Folder_Name","fileType","error_data","onChange","e","setState","target","name","value","onSubmit","event","preventDefault","url","get","then","res","console","log","data","render","success_data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Label, Alert, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst styles = {\n  marginTop: \"80px\"\n};\nconst stylestwo = {\n  textAlign: \"center\",\n\n  mariginTop: \"10px\",\n  padding: \"20px\"\n};\nclass ClusterForm extends Component {\n  state = {\n    Folder_Name: \"\",\n    fileType: \"Image\",\n    error_data: \"\"\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = event => {\n    event.preventDefault();\n    const { Folder_Name, fileType } = this.state;\n    const url = \"http://0.0.0.0:5001/image-cluster/\" + Folder_Name;\n    axios.get(url).then(res => {\n      console.log(res.data);\n    });\n    console.log(this.state);\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.onSubmit} style={styles}>\n          <h5>\n            <strong>Configure Newly uploaded folder:</strong>\n          </h5>\n          <FormGroup>\n            <Label for=\"Folder_Name\">Folder-Name:</Label>\n            <Input\n              type=\"text\"\n              name=\"Folder_Name\"\n              id=\"Folder_Name\"\n              value={this.state.Folder_Name}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"fileType\">File-type:</Label>\n            <Input\n              type=\"select\"\n              name=\"fileType\"\n              id=\"fileType\"\n              onChange={this.onChange}\n              value={this.state.fileType}\n            >\n              <option>Image</option>\n              <option>Cluster</option>\n            </Input>\n          </FormGroup>\n\n          <br />\n          <Button color=\"primary\">Clusterify</Button>\n\n          <br />\n          {this.state.error_data && (\n            <div style={stylestwo}>\n              <p>\n                <Alert color=\"danger\">{this.state.error_data}</Alert>\n              </p>\n            </div>\n          )}\n          {this.state.success_data && (\n            <div style={stylestwo}>\n              <p>\n                <Alert color=\"success\">{this.state.success_data}</Alert>\n              </p>\n            </div>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default ClusterForm;\n"]},"metadata":{},"sourceType":"module"}