{"ast":null,"code":"var _jsxFileName = \"/home/retr0/Documents/Projects/dsfh-dashboard/src/components/FileSystem.js\";\nimport React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Table, Container, Row, Col } from \"reactstrap\";\nimport BarGraph from \"./BarGraph\";\nconst styles = {\n  marginTop: \"75px\"\n};\n\nclass MyFileSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }; // <- set up react state\n  }\n\n  componentWillMount() {\n    /* Create reference to messages in Firebase Database */\n    db.collection(\"Images\").get().then(querySnapshot => {\n      const data = querySnapshot.docs.map(doc => doc.data());\n      console.log(data);\n\n      for (var i = 0; i < data.length; i++) {\n        data[i].names = data[i].names.length;\n      }\n\n      this.setState({\n        data: data\n      }); // array of cities objects\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"6\",\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Disease name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Number of images\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    },\n    /* Render the list of messages */\n    this.state.data.map((folder, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, index), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, folder.label), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, folder.names)))))), React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(BarGraph, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyFileSystem;","map":{"version":3,"sources":["/home/retr0/Documents/Projects/dsfh-dashboard/src/components/FileSystem.js"],"names":["React","Component","db","Table","Container","Row","Col","BarGraph","styles","marginTop","MyFileSystem","constructor","props","state","data","componentWillMount","collection","get","then","querySnapshot","docs","map","doc","console","log","i","length","names","setState","render","folder","index","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAT,QAAmB,SAAnB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,YAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AADE,CAAf;;AAIA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACnCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb,CAFiB,CAEU;AAC5B;;AACDC,EAAAA,kBAAkB,GAAG;AACnB;AACAb,IAAAA,EAAE,CAACc,UAAH,CAAc,QAAd,EACGC,GADH,GAEGC,IAFH,CAEQC,aAAa,IAAI;AACrB,YAAML,IAAI,GAAGK,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACR,IAAJ,EAA9B,CAAb;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AACA,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACY,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCX,QAAAA,IAAI,CAACW,CAAD,CAAJ,CAAQE,KAAR,GAAgBb,IAAI,CAACW,CAAD,CAAJ,CAAQE,KAAR,CAAcD,MAA9B;AACD;;AAED,WAAKE,QAAL,CAAc;AAAEd,QAAAA,IAAI,EAAEA;AAAR,OAAd,EAPqB,CAOU;AAChC,KAVH;AAWD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAErB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACG;AACD,SAAKK,KAAL,CAAWC,IAAX,CAAgBO,GAAhB,CAAoB,CAACS,MAAD,EAASC,KAAT,KAClB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBA,KAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,KAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACH,KAAZ,CAHF,CADF,CAFF,CARF,CADF,CADF,EAsBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,CADF,CADF;AA8BD;;AAnDkC;;AAsDrC,eAAeJ,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Table, Container, Row, Col } from \"reactstrap\";\nimport BarGraph from \"./BarGraph\";\n\nconst styles = {\n  marginTop: \"75px\"\n};\n\nclass MyFileSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] }; // <- set up react state\n  }\n  componentWillMount() {\n    /* Create reference to messages in Firebase Database */\n    db.collection(\"Images\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        console.log(data);\n        for (var i = 0; i < data.length; i++) {\n          data[i].names = data[i].names.length;\n        }\n\n        this.setState({ data: data }); // array of cities objects\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"6\" style={styles}>\n            <Table striped>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Disease name</th>\n                  <th>Number of images</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* Render the list of messages */\n                this.state.data.map((folder, index) => (\n                  <tr key={index}>\n                    <th scope=\"row\">{index}</th>\n                    <td>{folder.label}</td>\n                    <td>{folder.names}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n          <Col xs=\"6\">\n            <BarGraph data={this.state.data} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MyFileSystem;\n"]},"metadata":{},"sourceType":"module"}